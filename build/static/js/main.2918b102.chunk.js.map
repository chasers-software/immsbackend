{"version":3,"sources":["AppTopbar.js","AppMenu.js","store/uris.js","AppProfile.js","store/actions/teacher.js","store/actions/actionTypes.js","store/actions/auth.js","pages/teacher/TeacherMain.js","pages/teacher/ViewTable.js","pages/teacher/EditTable.js","pages/teacher/BarChart.js","pages/teacher/InboxArea.js","pages/teacher/PostArea.js","pages/teacher/Timeline.js","pages/teacher/Teacher.js","store/actions/student.js","pages/student/StudentMain.js","pages/student/ViewTable.js","pages/student/InboxArea.js","pages/student/PostArea.js","pages/student/Timeline.js","pages/student/Student.js","store/actions/admin.js","pages/admin/AdminMain.js","pages/admin/TeacherSessions.js","pages/admin/admindashboard.js","pages/admin/Admin.js","Login/Login.js","pages/LogOut.js","App.js","ScrollToTop.js","store/reducers/auth.js","store/reducers/teacher.js","store/reducers/student.js","store/reducers/admin.js","index.js","images/Profile-6.jpg","images/tulogo.png","images/pcampus.jpg"],"names":["AppTopbar","className","onClick","this","props","onToggleMenu","Component","defaultProps","AppSubmenu","state","activeIndex","event","item","index","disabled","preventDefault","command","originalEvent","setState","onMenuItemClick","submenuIcon","items","badge","Fragment","icon","label","i","content","renderLinkContent","to","activeClassName","e","exact","target","href","url","map","active","styleClass","classNames","badgeStyleClass","key","root","renderLink","AppMenu","model","baseURI","FETCH_CLASS_LIST","FETCH_POSTS","FETCH_STATS","POST_DEADLINE","AppProfile","displayPosition","position","expanded","currPass","newPass","confirmPass","bind","onHide","hideDialog","changePass","name","toast","show","severity","summary","detail","fetch","method","headers","body","JSON","stringify","person_id","username","old_password","new_password","then","res","json","status","message","catch","err","console","log","renderFooter","style","zIndex","ref","el","src","profile1","width","alt","full_name","header","visible","footer","margin","value","onChange","placeholder","connect","auth","setInfoBox","values","type","authFail","error","logout","localStorage","removeItem","setAuthRedirect","MainDashTeacher","deadline","infoBox","setInfoBoxNULL","uris","substring","data","selectCard","lecture_id","setSectionSubject","section_code","subject_code","theory_fm","practical_fm","title","setRedirect","Date","now","getTime","parseInt","color","loading","paddingTop","classes","subTitle","onCardSelectHandler","slice","lineHeight","redirect","React","teacher","dispatch","Class","actions","numberToText","require","DataTableView","exportCSV","exportPdf","findSubject","cols","field","exportColumns","col","dataKey","activeClass","setRedirectNULL","classStudentValues","length","classId","setActiveStudentIndex","temp","theory_marks","remarks","pair","convertToText","setClassStudentValues","dt","shortForm","doc","jsPDF","setFontSize","text","sectionSubject","align","algin","recordDatas","classIndex","autoTable","theme","styles","halign","fontSize","fillColor","textColor","tableLineWidth","tableLineColor","showHead","startY","finalY","lastAutoTable","save","sortable","activeClassStudentValuesIndex","activeSectionSubject","DataTableEdit","onMarksSubmitHandler","remarksBodyTemplate","onRemarksChange","stateItem","updatedProducts","update","isInt","rowIndex","theorymarks_inwords","rowData","onEditorValueChange","inputTextEditor","currClassVals","updateValues","options","required","padding","display","justifyContent","editMode","editor","AssessmentEditor","BarChart","assessmentData","practicalData","max","count","assessment","practical","aval","pval","practical_marks","hasOwnProperty","labels","Object","keys","datasets","backgroundColor","Math","legend","fontColor","scales","xAxes","ticks","yAxes","min","getOption","Inbox","dat","height","Post","value2","onPostSend","section_id","activeSection","rows","autoResize","Timeline","Teacher","onSetClass","path","component","token","MainDashStudent","sems","student","sem","onRequestRecheck","actionBodyTemplate","activeSem","semSubjectValues","setActiveSemIndex","toString","setSemSubjectValues","subject_id","semIndex","activeSemSubjectValuesIndex","subject","Student","resetStudentState","setSems","setActiveTeacherUsername","setTeachers","AdminMain","emptyTeacher","email","phone_no","program_code","newTeacher","teacherDialog","department","deleteTeacherDialog","deleteTeachersDialog","selectedTeachers","submitted","globalFilter","leftToolbarTemplate","rightToolbarTemplate","openNew","saveTeacher","editTeacher","confirmDeleteTeacher","deleteTeacher","confirmDeleteSelected","onInputChange","onProgramChange","hideDeleteTeacherDialog","hideDeleteTeachersDialog","toastMsg","dept_name","dept_id","life","teachers","filter","val","id","chars","charAt","floor","random","teacherClickHandler","onInput","teacherDialogFooter","deleteTeacherDialogFooter","marginTop","left","right","paginator","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","modal","htmlFor","autoFocus","optionLabel","admin","TeacherSessions","emptyLecture","batch","group_code","semester","lectureDialog","displayConfirmation","lectureSel","batch_id","program_id","lecture","batchs","programs","subjects","sections","addClass","addLecture","onBatchChange","onSubjectChange","onGroupChange","onDeleteLecture","activeTeacher","teacherClassValues","setActiveTeacherIndex","setActiveTeacherClasses","resetTeacherClasses","teacherIndex","delIndex","onApprove","lectureDialogFooter","activeTeacherUsername","activeTeacherClasses","activeTeacherClassValuesIndex","AdminDashboard","selectedSem","uniqueRoll","countData","students","refreshDialog","batch_code","credentials","onSemesterChange","onFetchStudentSemMarks","confirmRefresh","hideRefreshDialog","confirmRefreshFlow","setDeadline","rType","postURI","toISOString","dwnldData","refreshDialogFooter","filename","showIcon","Admin","onSetTeachers","Login","onSubmitHandler","document","getElementById","password","onSignIn","setError","tulogo","isAuthenticated","authRedirectPath","authData","setItem","user","role","fullname","authSuccess","LogOut","resetStudent","resetTeacher","resetAdmin","onLogOut","resetTeacherState","App","layoutMode","layoutColorMode","staticMenuInactive","overlayMenuActive","mobileMenuActive","PrimeReact","ripple","onWrapperClick","onSidebarClick","menuClick","isDesktop","menu","window","location","element","classList","add","remove","replace","RegExp","split","join","innerWidth","removeClass","createMenu","wrapperClass","sidebarClassName","renderComponent","sidebar","pcampus","ScrollToTop","prevProps","scrollTo","children","withRouter","initialState","authStart","action","authLogout","reducer","setTeacherClasses","setTeacherInfoBox","setActiveClass","setActiveClassStudentIndex","updateClassStudentValues","tempClass","teacherDepartments","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","teacherReducer","studentReducer","adminReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.2918b102.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport \"./AppTopbar.css\";\r\n\r\nexport class AppTopbar extends Component {\r\n  static defaultProps = {\r\n    onToggleMenu: null\r\n  };\r\n\r\n  static propTypes = {\r\n    onToggleMenu: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-topbar clearfix\">\r\n        <button\r\n          className=\"p-link layout-menu-button\"\r\n          onClick={this.props.onToggleMenu}\r\n        >\r\n          <span className=\"menubar\" />\r\n        </button>\r\n        <div className=\"pcampus\">\r\n\r\n        </div>\r\n        <div className=\"layout-heading\">\r\n          <p>\r\n            Internal Marks Management System\r\n            </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nclass AppSubmenu extends Component {\r\n  static defaultProps = {\r\n    className: null,\r\n    items: null,\r\n    onMenuItemClick: null,\r\n    root: false\r\n  };\r\n\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    items: PropTypes.array,\r\n    onMenuItemClick: PropTypes.func,\r\n    root: PropTypes.bool\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: null };\r\n  }\r\n\r\n  onMenuItemClick(event, item, index) {\r\n    //avoid processing disabled items\r\n    if (item.disabled) {\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    //execute command\r\n    if (item.command) {\r\n      item.command({ originalEvent: event, item: item });\r\n    }\r\n\r\n    if (index === this.state.activeIndex) this.setState({ activeIndex: null });\r\n    else this.setState({ activeIndex: index });\r\n\r\n    if (this.props.onMenuItemClick) {\r\n      this.props.onMenuItemClick({\r\n        originalEvent: event,\r\n        item: item\r\n      });\r\n    }\r\n  }\r\n\r\n  renderLinkContent(item) {\r\n    let submenuIcon = item.items && (\r\n      <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>\r\n    );\r\n    let badge = item.badge && (\r\n      <span className=\"menuitem-badge\">{item.badge}</span>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <i className={item.icon}></i>\r\n        <span>{item.label}</span>\r\n        {submenuIcon}\r\n        {badge}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderLink(item, i) {\r\n    let content = this.renderLinkContent(item);\r\n\r\n    if (item.to) {\r\n      return (\r\n        <NavLink\r\n          activeClassName=\"active-route\"\r\n          to={item.to}\r\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\r\n          exact\r\n          target={item.target}\r\n        >\r\n          {content}\r\n        </NavLink>\r\n      );\r\n    } else {\r\n      return (\r\n        <a\r\n          href={item.url}\r\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\r\n          target={item.target}\r\n        >\r\n          {content}\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items =\r\n      this.props.items &&\r\n      this.props.items.map((item, i) => {\r\n        let active = this.state.activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {\r\n          \"active-menuitem\": active && !item.to\r\n        });\r\n\r\n        return (\r\n          <li className={styleClass} key={i}>\r\n            {item.items && this.props.root === true && (\r\n              <div className=\"arrow\"></div>\r\n            )}\r\n            {this.renderLink(item, i)}\r\n            <AppSubmenu\r\n              items={item.items}\r\n              onMenuItemClick={this.props.onMenuItemClick}\r\n            />\r\n          </li>\r\n        );\r\n      });\r\n\r\n    return items ? <ul className={this.props.className}>{items}</ul> : null;\r\n  }\r\n}\r\n\r\nexport class AppMenu extends Component {\r\n  static defaultProps = {\r\n    model: null,\r\n    onMenuItemClick: null\r\n  };\r\n\r\n  static propTypes = {\r\n    model: PropTypes.array,\r\n    onMenuItemClick: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-menu-container\">\r\n        <AppSubmenu\r\n          items={this.props.model}\r\n          className=\"layout-menu\"\r\n          onMenuItemClick={this.props.onMenuItemClick}\r\n          root={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nconst baseURI = 'https://imms-backend.herokuapp.com';\r\nexport const LOGIN = baseURI+'/api/user/login';\r\nexport const ADD_TEACHER = baseURI+\"/api/user/teacher/\";\r\nexport const FETCH_BATCH_LIST = baseURI+'/api/batch/';\r\nexport const FETCH_PROGRAM_LIST = baseURI+'/api/program/';\r\nexport const FETCH_SECTION_LIST = baseURI+'/api/class/section';\r\nexport const FETCH_SUBJECT_LIST = baseURI+'/api/program/subject';\r\nexport const FETCH_CLASS_LIST = baseURI+'/api/class/lecture/';\r\nexport const FETCH_TEACHER_LIST = baseURI+'/api/user/teacher/';\r\nexport const DELETE_TEACHER = baseURI+'/api/user/teacher/delete/';\r\nexport const FETCH_CLASS_STUDENT_LIST = baseURI+'/api/marks/lecture/';\r\nexport const FETCH_DEPARTMENT_LIST = baseURI+'/api/dept/';\r\nexport const FETCH_STUDENT_SEM_MARKS = baseURI+'/api/marks/student/';\r\nexport const FETCH_STUDENT_DETAILS = baseURI+'/api/user/student/';\r\nexport const REQUEST_STUDENT_MARKS_RECHECK = baseURI+'/api/notification/report/';\r\nexport const FETCH_NOTIFICATIONS = baseURI+'/api/notification/';\r\nexport const FETCH_POSTS = baseURI+'/api/post/';\r\nexport const SUBMIT_POST = baseURI+'/api/post/';\r\nexport const FETCH_STATS = baseURI+'/api/batch/stats/';\r\nexport const POST_YEAR_REFRESH = baseURI+'/api/batch/';\r\nexport const POST_SESSION_REFRESH = baseURI+'/api/batch/newSession/';\r\nexport const POST_DEADLINE = baseURI+'/api/marks/deadline/';\r\nexport const CHANGE_PASSWORD = baseURI+'/api/user/changePassword/';\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport classNames from \"classnames\";\r\nimport profile1 from \"./../src/images/Profile-6.jpg\";\r\nimport { Button} from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport * as uris from './store/uris';\r\n\r\nclass AppProfile extends Component {\r\n   constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayPosition: false,\r\n            position: \"top-left\",\r\n            expanded: true,\r\n            currPass: '',\r\n            newPass: '',\r\n            confirmPass: ''\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.changePass = this.changePass.bind(this);\r\n    }\r\n\r\n onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true\r\n        };\r\n\r\n        if (position) {\r\n            state = {\r\n                ...state,\r\n                position\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    onHide(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n      this.setState({\r\n        displayPosition: false\r\n      });\r\n    }\r\n\r\n    changePass() {\r\n      if(this.state.currPass === '') this.toast.show({severity: 'info', summary: 'Cannot Proceed', detail: 'Must enter the old Password'});\r\n      else if(this.state.newPass === '' || this.state.confirmPass === '') this.toast.show({severity: 'info', summary: 'Cannot Proceed', detail: 'Must enter both new and Retype password'});\r\n      else if(this.state.newPass !== this.state.confirmPass)  this.toast.show({severity: 'info', summary: 'Cannot Proceed', detail: \"New Password and Retype Password doesn't match\"});\r\n      else {\r\n        fetch(uris.CHANGE_PASSWORD  , {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({person_id: this.props.username,\r\n                                old_password: this.state.currPass,\r\n                                new_password: this.state.newPass})\r\n        })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          if (res.status === 'success') {\r\n            this.toast.show({severity: 'success', summary: 'Password Successfully Updated', detail: res.message});\r\n            this.setState({ currPass: '', newPass: '', confirmPass: ''})\r\n          } else {\r\n            this.toast.show({severity: 'error', summary: 'Password Change Failed', detail: res.message});\r\n          }\r\n          this.setState({displayPosition: false})\r\n      })\r\n      .catch(err => console.log(err))\r\n      }\r\n    }\r\n\r\n  render() {\r\n    const renderFooter = (\r\n      <React.Fragment>\r\n          <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n          <Button label=\"Confirm\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.changePass} />\r\n      </React.Fragment>\r\n  );\r\n    return (\r\n      <React.Fragment>        \r\n        <Toast position=\"bottom-right\" style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n      <div className=\"layout-profile\">\r\n        <div>\r\n          <img\r\n            src={profile1}\r\n            width=\"100px\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <button className=\"p-link layout-profile-link\" onClick={this.onClick}>\r\n          <span className=\"username\">{this.props.full_name}</span>\r\n        </button>\r\n        <ul\r\n          className={classNames({\r\n            \"layout-profile-expanded\": this.state.expanded\r\n          })}\r\n        >\r\n          <li>\r\n            <button className=\"p-link\" onClick={() => this.onClick('displayPosition', 'left')} >\r\n              <i className=\"pi pi-fw pi-user\" />\r\n              <span>Account</span>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <Dialog className=\"accounttextleft\" header=\"Change Password\" visible={this.state.displayPosition} position={this.state.position} style={{ width: '300px' }} footer={renderFooter} onHide={() => this.onHide('displayPosition')}>\r\n             <div className=\"p-grid  p-dir-col\">\r\n                <div style={{margin: '5px'}}><InputText value={this.state.currPass} onChange={(e) => this.setState({currPass: e.target.value})} placeholder=\"Input Current Password\" /></div>\r\n                <div style={{margin: '5px'}}><InputText value={this.state.newPass} onChange={(e) => this.setState({newPass: e.target.value})} placeholder=\"Input New Password\" /></div>\r\n                <div style={{margin: '5px'}}><InputText value={this.state.confirmPass} onChange={(e) => this.setState({confirmPass: e.target.value})} placeholder=\"Retype New Password\" /></div>                  \r\n              </div>\r\n          </Dialog>\r\n          </div>\r\n          </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      full_name: state.auth.full_name,\r\n      username: state.auth.username,\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )(AppProfile);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setClasses = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASSES,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setInfoBox = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_INFOBOX,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const resetTeacherState = () => {\r\n    return {\r\n        type: actionTypes.RESET_TEACHER_DEFAULTS\r\n    }\r\n};\r\n\r\nexport const setActiveClass = (Class) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS,\r\n        Class: Class\r\n    }\r\n};\r\n\r\nexport const setActiveStudentIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setActiveSectionSubject = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_SECTION_SUBJECT,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const updateClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\n\r\nexport const SET_TEACHER_ACTIVE_CLASS = 'SET_TEACHER_ACTIVE_CLASS';\r\nexport const SET_TEACHER_CLASSES = 'SET_TEACHER_CLASSES';\r\nexport const SET_TEACHER_INFOBOX = 'SET_TEACHER_INFOBOX';\r\nexport const SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX = 'SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX';\r\nexport const SET_TEACHER_CLASS_STUDENT_VALUES = 'SET_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const SET_TEACHER_ACTIVE_SECTION_SUBJECT = 'SET_TEACHER_ACTIVE_SECTION_SUBJECT';\r\nexport const UPDATE_TEACHER_CLASS_STUDENT_VALUES = 'UPDATE_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const RESET_TEACHER_DEFAULTS = 'RESET_TEACHER_DEFAULTS';\r\n\r\nexport const SET_ADMIN_ACTIVE_TEACHER_USERNAME = 'SET_ADMIN_ACTIVE_TEACHER_USERNAME';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASSES = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX';\r\nexport const SET_ADMIN_TEACHER_DEPARTMENTS = 'SET_ADMIN_TEACHER_DEPARTMENTS';\r\nexport const SET_ADMIN_TEACHER_CLASS_VALUES = 'SET_ADMIN_TEACHER_CLASS_VALUES';\r\nexport const SET_ADMIN_INFOBOX = 'SET_ADMIN_INFOBOX';\r\nexport const SET_ADMIN_TEACHERS = 'SET_ADMIN_TEACHERS';\r\nexport const RESET_ADMIN_TEACHER_CLASS_VALUES = 'RESET_ADMIN_TEACHER_CLASS_VALUES';\r\nexport const RESET_ADMIN_DEFAULTS = 'RESET_ADMIN_DEFAULTS';\r\n\r\nexport const SET_STUDENT_ACTIVE_SEM='SET_STUDENT_ACTIVE_SEM';\r\nexport const SET_STUDENT_SEM_SUBJECT_VALUES='SET_STUDENT_SEM_SUBJECT_VALUES';\r\nexport const SET_STUDENT_SEMS='SET_STUDENT_SEMS';\r\nexport const SET_STUDENT_INFOBOX = 'SET_STUDENT_INFOBOX';\r\nexport const RESET_STUDENT_DEFAULTS = 'RESET_STUDENT_DEFAULTS';\r\nexport const SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX = 'SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX';\r\n","import * as actionTypes from './actionTypes';\r\nimport * as uris from '../uris';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, username, role, fullname, email) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username,\r\n        role: role,\r\n        fullname: fullname,\r\n        email: email\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('role');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n        fetch(uris.LOGIN, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(authData)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success'){\r\n                    localStorage.setItem('token', res.token);\r\n                    localStorage.setItem('id', res.data.user.username);\r\n                    localStorage.setItem('role', ['admin','teacher','student'][res.data.user.role]);\r\n                    dispatch(authSuccess(res.token, res.data.user.person_id, ['admin','teacher','student'][res.data.user.role], res.data.user.full_name, res.data.user.email));\r\n                } else {\r\n                    dispatch(authFail(res.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err));\r\n        });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirect = (value) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        value: value\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport \"primeflex/primeflex.css\";\r\n\r\nclass MainDashTeacher extends React.Component {\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          deadline: ''\r\n      }\r\n    }\r\n  componentDidMount(){\r\n    if (this.props.infoBox) {\r\n      this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n    }\r\n    this.props.setInfoBoxNULL();\r\n    fetch(uris.POST_DEADLINE, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.status === 'success') {\r\n          this.setState({deadline: res.deadline.substring(0, 10)});\r\n      } else {\r\n          this.toast.show({severity: 'error', summary: 'Deadline Fetch Failed', detail: res.message});\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  onCardSelectHandler(data){\r\n    this.props.selectCard(data.lecture_id);\r\n    this.props.setSectionSubject([data.section_code, data.subject_code, data.theory_fm, data.practical_fm,data.title]);\r\n    this.props.setRedirect();\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n        {(Date.now()>(new Date(this.state.deadline)).getTime()) && \r\n        this.toast.show({severity: 'warn', summary: 'Deadline Exceeded', detail: `Deadline exceeded by ${parseInt((Date.now()-new Date(this.state.deadline).getTime())/86400000)} days.`})\r\n        }\r\n        <div className='p-grid'>\r\n          <div className='p-col-9'>\r\n            <h3>Choose your subject and see Student details.</h3>\r\n          </div>\r\n          <div className='p-col-3'>\r\n          <h3 style={{color: 'red'}}>Marks Submission Till : {this.state.deadline}</h3>\r\n          </div>\r\n        </div>\r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : \r\n          <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n          {this.props.classes.map((data, index) => {\r\n                                return (<Card key={index} title={data.subject_code} subTitle={data.title} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"View\"\r\n                                            onClick={() => this.onCardSelectHandler(data)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(0,-2)}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(-2,)}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n        </div>}\r\n      {this.props.redirect}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.teacher.classes,\r\n    infoBox: state.teacher.infoBox,\r\n    redirect: state.auth.redirect,\r\n    loading: state.teacher.loading    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectCard: (Class) => dispatch(actions.setActiveClass(Class)),\r\n    setSectionSubject: (value) => dispatch(actions.setActiveSectionSubject(value)),\r\n    setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n    setRedirect: () => dispatch(setAuthRedirect(<Redirect to='/marksview'/>))\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( MainDashTeacher );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport './DataTable.css';\r\nimport { rangeContainsMarker } from '@fullcalendar/core';\r\nconst numberToText = require('number-to-text')\r\nrequire('number-to-text/converters/en-us');\r\n\r\nclass DataTableView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n        this.exportPdf = this.exportPdf.bind(this);\r\n        this.findSubject = this.findSubject.bind(this);\r\n        this.cols = [\r\n            {field:\"username\", style:{width: '150px'}, header:\"RollNo\"},\r\n            {field:\"full_name\", style:{width: '350px'}, header:\"Name\"},\r\n            {field:\"theory_marks\", style:{width: '150px'}, header:\"Assessment\\rIn Figure\"},\r\n            {field:\"theorymarks_inwords\", style:{width: '150px'}, header:\"Assesment\\rIn Words\"},\r\n            {field:\"remarks\", style:{width: '150px'}, header:\"Remarks\"}\r\n        ];\r\n        this.exportColumns = this.cols.map(col => ({ title: col.header, dataKey: col.field }));\r\n    }\r\n    componentDidMount() {\r\n        if (!this.props.activeClass) this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        this.props.setRedirectNULL();\r\n        let i;\r\n        for(i=0;i<this.props.classStudentValues.length;i++){\r\n            if (this.props.classStudentValues[i].classId === this.props.activeClass){\r\n                this.props.setActiveStudentIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        if (i === this.props.classStudentValues.length && this.props.activeClass !== null){\r\n            fetch(uris.FETCH_CLASS_STUDENT_LIST+this.props.activeClass, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        let temp = [...res.data];\r\n                        for (let i=0; i<temp.length; i++){\r\n                            if (temp[i].theory_marks < 8 ) temp[i].remarks = 'NQ';\r\n                            else temp[i].remarks=\"Regular\";\r\n                            \r\n                            let pair={'theorymarks_inwords': numberToText.convertToText(temp[i].theory_marks)};\r\n                            temp[i]={...temp[i],...pair};\r\n                        }\r\n                        this.props.setClassStudentValues({classId:this.props.activeClass, data: temp});\r\n                        this.props.setActiveStudentIndex(this.props.classStudentValues.length-1);\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Section Marks Fetch Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n    findSubject(shortForm){\r\n        switch(shortForm){\r\n            case \"BCT\":\r\n                return \"Computer Enginnering\";\r\n            case \"BEX\":\r\n                return \"Electronics and Computer Engineering\";\r\n            case  \"BEL\":\r\n                return \"Electrical Engineering\";\r\n            case \"BCE\":\r\n                return \"Civil Engineering\";\r\n            case \"BME\":\r\n                return \"Mechanical Engineering\";\r\n            case \"BAE\":\r\n                return \"Architectural Engineering\";\r\n            default:\r\n                return \"Engineering\";\r\n        }\r\n    }\r\n    \r\n    exportPdf(){\r\n        const doc = new jsPDF({lineHeight:1.5});\r\n        doc.setFontSize(12);\r\n        doc.text(\"TRIBHUVAN UNIVERSITY\\rINSTITUTE OF ENGINEERING\\rPulchowk Campus\\rBachelors in \"+ this.findSubject(this.props.sectionSubject[0].substring(3,6)),105,10,{align:'center'});\r\n        doc.text(\"Group \" + this.props.sectionSubject[0].substring(6),82,38,{align: 'center'});\r\n        doc.text(\"Batch 2\" + this.props.sectionSubject[0].substring(0,3),130,38,{align: 'center'});\r\n        doc.text(\"FM: \" + this.props.sectionSubject[2],20,42,{align: 'center'});\r\n        doc.text(\"Code: \" + this.props.sectionSubject[1],190,42,{align:'right'});\r\n        doc.text(\"PM: \" + 0.4*this.props.sectionSubject[2],19,47,{align: 'center'});\r\n        doc.text(\"Subject: \"+this.props.sectionSubject[4],73,47,{algin:'center'});\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        console.log(recordDatas);\r\n        doc.autoTable(this.exportColumns, recordDatas.data, {\r\n            theme: 'grid',\r\n            styles: {halign:'center', fontSize: 10, fillColor:[255,255,255] , textColor: [0,0,0], tableLineWidth: 4, tableLineColor:[0,0,0]},\r\n            showHead: 'firstPage',\r\n            startY: 52,\r\n        });\r\n        let finalY=doc.lastAutoTable.finalY;\r\n        console.log(finalY);\r\n        doc.text(\"Date:\",20,finalY+10);\r\n        doc.text(\"Name of Examiner:\",75,finalY+10);\r\n        doc.text(\"Signature:\",145,finalY+10 )\r\n        doc.save('internal-marks.pdf');\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        return (\r\n            <Fragment>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n                <Fragment>\r\n                    {recordDatas ? (\r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <h3 style={{color: '#B22222'}}>Marks Summary View : Assessment and Practical Marks are NOT Editable</h3>\r\n                            <div className=\"p-col p-offset-8\">\r\n                                <Button label=\"Export CSV\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n                                <Button label=\"Export PDF\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportPdf} />\r\n                            </div>\r\n                \r\n                            <DataTable ref={(el) => this.dt = el}  value={recordDatas.data} header={\"Student Data for Section \"+this.props.sectionSubject[0]+\r\n                                        \" of Subject with Subject Code : \"+this.props.sectionSubject[1]+\" ------ TheoryFM: \"+this.props.sectionSubject[2]}>\r\n                                {this.cols.map((col, index) => <Column key={index} field={col.field} style={col.style} header={col.header} sortable/>)}\r\n                            </DataTable>\r\n                        </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        loading: state.teacher.loading,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setRedirectNULL: () => dispatch(setAuthRedirect(null)),\r\n        setClassStudentValues: (values) => dispatch(actions.setClassStudentValues(values)),\r\n        setActiveStudentIndex: (value) => dispatch(actions.setActiveStudentIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableView );\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Toast } from 'primereact/toast';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport { Button } from 'primereact/button';\r\nimport './DataTable.css';\r\nimport * as uris from '../../store/uris';\r\nimport { isInt } from '@fullcalendar/core';\r\nconst numberToText = require('number-to-text')\r\nrequire('number-to-text/converters/en-us');\r\n\r\nclass DataTableEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = { data: null}\r\n        this.toast = null;\r\n        this.onMarksSubmitHandler = this.onMarksSubmitHandler.bind(this);\r\n        this.remarksBodyTemplate = this.remarksBodyTemplate.bind(this);\r\n        this.onRemarksChange = this.onRemarksChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!this.props.activeClass) {\r\n            this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        } else {\r\n            this.setState({data: this.props.classStudentValues[this.props.classIndex].data});\r\n        }        \r\n    }\r\n\r\n    onEditorValueChange(stateItem, props, value) {\r\n        let updatedProducts = [...props.value];\r\n        console.log(updatedProducts);\r\n        let update = false;\r\n        if (!isInt(parseInt(value))){\r\n            value=0;\r\n        }\r\n        switch (props.field){\r\n            case \"theory_marks\": \r\n                update = (parseInt(value) >=0 && parseInt(value) <= this.props.sectionSubject[2]);\r\n                if (update)\r\n                { \r\n                    updatedProducts[props.rowIndex].theorymarks_inwords=numberToText.convertToText(parseInt(value));\r\n                    if (parseInt(value) < 8 ) updatedProducts[props.rowIndex].remarks = 'NQ';\r\n                    else if(parseInt(value)>=8) updatedProducts[props.rowIndex].remarks= \"Regular\"\r\n                }\r\n                break;\r\n            case \"practical_marks\": update = (parseInt(value) >=0 && parseInt(value) <= this.props.sectionSubject[3]);\r\n                break;\r\n            default: update = false;\r\n        }\r\n        if (update) {\r\n            updatedProducts[props.rowIndex][props.field] = parseInt(value);\r\n            this.setState({ [`${stateItem}`]: updatedProducts })\r\n        }\r\n    }\r\n\r\n    inputTextEditor(stateItem, props, field) {\r\n        return <InputText style={{width: \"5em\"}} type=\"number\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(stateItem, props, e.target.value)} />;\r\n    }\r\n\r\n    AssessmentEditor(stateItem, props) {\r\n        return this.inputTextEditor(stateItem, props, 'theory_marks');\r\n    }\r\n\r\n    PracticalEditor(stateItem, props) {\r\n        return this.inputTextEditor(stateItem, props, 'practical_marks');\r\n    }\r\n\r\n    onMarksSubmitHandler(event){\r\n        event.preventDefault();\r\n        let currClassVals = [...this.state.data];\r\n\r\n        fetch(uris.FETCH_CLASS_STUDENT_LIST+this.props.activeClass,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.status === 'success'){\r\n                    this.props.updateValues(currClassVals);\r\n                    this.toast.show({severity: 'info', summary: 'Submission Succeded', detail: 'The Marks has been Successfully Updated!!!'});\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Submission Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onRemarksChange(rowData, e) {\r\n        let currClassVals = [...this.state.data];\r\n        console.log(\"curr class vals\",currClassVals);\r\n        console.log(\"rowdata\", rowData, \"e\", e);\r\n        for (let i=0;i<currClassVals.length;i++){\r\n            if (rowData.username === currClassVals[i].username) {\r\n                currClassVals[i].remarks = e.value;\r\n                if (e.value===\"Absent\"||e.value===\"NQ\")\r\n                    currClassVals[i].theory_marks=0;\r\n                break;\r\n            }\r\n        }\r\n        this.setState({data: currClassVals});\r\n    }\r\n\r\n    remarksBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Dropdown value={rowData.remarks} options={['NQ','Absent','Regular']} onChange={(e) => this.onRemarksChange(rowData,e)} required placeholder=\"Select a Remark\"/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"datatable-editing\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                <div className=\"card\">\r\n                    <h3 style={{color: '#228B22'}}>Marks Editing View : Assessment and Practical Marks are Editable</h3>\r\n                    <div style={{padding: \"10px 0\", display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                        <Button label=\"Confirm & Submit\" onClick={this.onMarksSubmitHandler}/>\r\n                    </div>\r\n                    <DataTable value={this.state.data} editMode=\"cell\" className=\"editable-cells-table\" header={this.props.activeClass ? \"Student Data for Section \"+this.props.sectionSubject[0]+\r\n                    \" of Subject with Subject Code : \"+this.props.sectionSubject[1]+\" ------ TheoryFM: \"+this.props.sectionSubject[2] : null}>\r\n                        <Column field=\"username\" style={{width: '150px'}} header=\"RollNo\" sortable></Column>\r\n                        <Column field=\"full_name\" style={{width: '350px'}} header=\"Name\" sortable></Column>\r\n                        <Column field=\"theory_marks\" style={{width: '150px'}} header=\"Assessment\" editor={(props) => this.AssessmentEditor('data', props)}></Column>                      \r\n                        <Column header=\"Remarks\" style={{width: '150px'}} body={this.remarksBodyTemplate}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        infoBox: state.teacher.infoBox,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        activeClass: state.teacher.activeClass,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) ),\r\n        updateValues: (value) => dispatch(actions.updateClassStudentValues(value)),\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableEdit );\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport '../../App.css';\r\n\r\nclass BarChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            assessmentData: null,\r\n            practicalData: null,\r\n            max: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.activeClass === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        if (this.props.classIndex !== null) {\r\n            let data = this.props.classStudentValues[this.props.classIndex].data\r\n            let count = { assessment : [], practical : []}\r\n            for (let i = 0; i < data.length; i++) {\r\n                let aval = data[i].theory_marks\r\n                let pval = data[i].practical_marks\r\n                if (count.assessment.hasOwnProperty(aval)){\r\n                    count.assessment[`${aval}`] += 1\r\n                } else {\r\n                    count.assessment[`${aval}`] = 1\r\n                }\r\n                if (count.practical.hasOwnProperty(pval)){\r\n                    count.practical[`${pval}`] += 1\r\n                } else {\r\n                    count.practical[`${pval}`] = 1\r\n                }\r\n            }\r\n            this.setState({\r\n                assessmentData: {\r\n                    labels: Object.keys(count.assessment),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Frequency of Assessment Marks',\r\n                            backgroundColor: '#42A5F5',\r\n                            data: Object.values(count.assessment)\r\n                        }\r\n                    ]\r\n                },\r\n                practicalData: {\r\n                    labels: Object.keys(count.practical),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Frequency of Practical Marks',\r\n                            backgroundColor: '#42A5F5',\r\n                            data: Object.values(count.practical)\r\n                        }\r\n                    ]\r\n                },\r\n                max: [Math.max(...Object.values(count.assessment)), Math.max(...Object.values(count.practical))]\r\n            })\r\n        }\r\n    }\r\n\r\n    getOption(max) {\r\n        return {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: max,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                <h1 style={{color: '#1E90FF'}}>{this.props.sectionSubject[0]} Assessment Marks</h1>\r\n                <div className=\"card\" style={{padding: '25px'}}>\r\n                    <Chart type=\"bar\" data={this.state.assessmentData} options={this.getOption(this.state.max[0]+1)} />\r\n                </div><hr/>\r\n                <h1 style={{color: '#1E90FF'}}>{this.props.sectionSubject[0]} Practical Marks</h1>\r\n                <div className=\"card\" style={{padding: '25px'}}>\r\n                    <Chart type=\"bar\" data={this.state.practicalData} options={this.getOption(this.state.max[1]+1)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)( BarChart );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_NOTIFICATIONS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              \r\n  <div className=\"p-grid styleInbox p-mt-4 \">\r\n      {this.state.data.map((dat, index) => {\r\n          return (\r\n            <div key={index} className=\"p-col itstyle\">\r\n            <img src=\"https://i.imgur.com/IqICwKK.jpg\" width=\"45px\" height=\"45px\" alt=\"\"/>                    \r\n             <div className=\"inboxtext\">{dat.message}</div>\r\n        </div>\r\n          );\r\n      })}\r\n  </div> \r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\n\r\nexport default connect( mapStateToProps, null )( Inbox );\r\n  ","import React, {Fragment} from 'react';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Post extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            value2: ''\r\n        }\r\n        this.onPostSend = this.onPostSend.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onPostSend(){\r\n        fetch(uris.SUBMIT_POST, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                section_id: this.props.activeSection[this.props.activeIndex].section_id,\r\n                person_id : this.props.username,\r\n                content: this.state.value2\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.toast.show({severity: 'info', summary: 'Info\"', detail: 'Post Added Successfully!!!'});\r\n            fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {this.setState({data: res.data})})\r\n                .catch(err => console.log(err));\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              <div>\r\n              <Toast ref={(el) => this.toast = el} />\r\n                     <div className=\"p-grid p-col p-ml-2 p-mt-4 p-shadow-2 p-mb-4 noticeBOX\">\r\n                        <div className=\"p-col-1\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\"/>\r\n                        </div>\r\n             \r\n                        <div className=\"fixInput p-col\">\r\n                            <InputTextarea className=\"p-inputtextarea \" value={this.state.value2} onChange={(e) => this.setState({value2: e.target.value})}  rows={2} cols={30}  autoResize />\r\n                        </div>\r\n                        <div className=\"p-col-2\">\r\n                            <Button label=\"SEND\"  onClick={this.onPostSend}/>\r\n                        </div>               \r\n                    </div>     \r\n       \r\n                    {this.state.data ? this.state.data.map((dat, index) => {\r\n          return (<Fragment key={index}>\r\n              <div className=\"p-col\">\r\n                    <div className=\"p-row p-p-2 fixPadd\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\" width=\"20px\"/> \r\n                            {dat.full_name}<div className=\"fixedSUB\"></div>\r\n                    </div>\r\n                    <div className=\"p-row p-p-2\">\r\n                        {dat.content}</div>\r\n                </div>\r\n          </Fragment>\r\n          );\r\n      }) : null}\r\n              </div>\r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username,\r\n    activeSection: state.teacher.classes,\r\n    activeIndex: state.teacher.activeClassStudentValuesIndex \r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( Post );\r\n  \r\n  \r\n \r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport \"./Timeline.css\";\r\n\r\nimport Inbox from './InboxArea';\r\nimport Post from './PostArea';\r\n\r\nclass Timeline extends React.Component {\r\n    componentDidMount(){        \r\n        if (this.props.activeClass === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n    }\r\n    render() {\r\n    return (\r\n        <Fragment>\r\n            {this.props.infoBox ? <Redirect to='/'/> : null}\r\n        <div className=\"p-fluid wholeStyle\">\r\n           <div className=\"p-grid p-lg-12\">\r\n               <div className=\"p-col-7\">\r\n                   <Post/>\r\n                </div>\r\n            <div className=\"p-col-4 p-offset-1 p-shadow-2\">\r\n                <div className=\"header\">\r\n                    Inbox\r\n                </div>\r\n                <Inbox/>\r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        </Fragment>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)( Timeline );\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport MainDashTeacher from './TeacherMain';\r\nimport DataTableView from './ViewTable';\r\nimport DataTableEdit from './EditTable';\r\nimport BarChart from './BarChart';\r\nimport Timeline from './Timeline';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Teacher extends Component{\r\n\tcomponentDidMount(){\r\n        fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.props.onSetClass(res.data)\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Class List Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={MainDashTeacher}/>\r\n            \t<Route path=\"/timeline\" exact component={Timeline}/>\r\n            \t<Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/marksentry\" exact component={DataTableEdit}/>\r\n            \t<Route path=\"/statistics\" exact component={BarChart}/>\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetClass: (values) => dispatch(actions.setClasses(values)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Teacher);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setActiveSem = (sem)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_ACTIVE_SEM,\r\n        value: sem\r\n    }\r\n}\r\n\r\nexport const setSemSubjectValues = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_SEM_SUBJECT_VALUES,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setSems=(value)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_SEMS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setInfoBox = (value) => {\r\n    return {\r\n        type: actionTypes.SET_STUDENT_INFOBOX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const resetStudentState = () => {\r\n    return {\r\n        type: actionTypes.RESET_STUDENT_DEFAULTS\r\n    }\r\n};\r\n\r\nexport const setActiveSemIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport * as actions from '../../store/actions/student';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport \"primeflex/primeflex.css\";\r\n\r\nclass MainDashStudent extends React.Component {\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          redirect: null,\r\n          deadline: ''\r\n      }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.infoBox) {\r\n      this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n    }\r\n    this.props.setInfoBoxNULL();\r\n\r\n    fetch(uris.POST_DEADLINE, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.status === 'success') {\r\n          this.setState({deadline: res.deadline.substring(0, 10)})\r\n      } else {\r\n          this.toast.show({severity: 'error', summary: 'Deadline Fetch Failed', detail: res.message});\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  onCardSelectHandler(index){\r\n\t\tthis.props.selectCard(index);\r\n\t\tthis.setState({redirect: <Redirect to='/marksview'/>});\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n        <div className='p-grid'>\r\n          <div className='p-col-9'>\r\n            <h3>Choose your semester card and see your internal marks.</h3>\r\n          </div>\r\n          <div className='p-col-3'>\r\n          <h3 style={{color: 'red'}}>Marks Submission Till : {this.state.deadline}</h3>\r\n          </div>\r\n        </div>\r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : \r\n          <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n          {this.props.sems.map((data, index) => {\r\n                                return (<Card key={index} title={\"Semester Card\"} subTitle={\"Semester No.\"} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"View\"\r\n                                            onClick={() => this.onCardSelectHandler(index+1)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.value}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n        </div>}\r\n      {this.state.redirect}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sems: state.student.sems,\r\n    infoBox: state.student.infoBox,\r\n    loading: state.student.loading    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectCard: (sem) => dispatch(actions.setActiveSem(sem)),\r\n    setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( MainDashStudent );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/student';\r\n\r\nclass DataTableView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onRequestRecheck = this.onRequestRecheck.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.activeSem === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Semester Selected!!!'});\r\n        let i;\r\n        for(i=0;i<this.props.semSubjectValues.length;i++){\r\n            if (this.props.semSubjectValues[i].sem === this.props.activeSem){\r\n                this.props.setActiveSemIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        if (i === this.props.semSubjectValues.length && this.props.activeSem !== null){\r\n            fetch(uris.FETCH_STUDENT_SEM_MARKS+'?person_id='+this.props.username+'&semester='+this.props.activeSem.toString(), {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        this.props.setSemSubjectValues({sem: this.props.activeSem, data: res.data});\r\n                        this.props.setActiveSemIndex(this.props.semSubjectValues.length-1);\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Student Semester Marks Fetch Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    onRequestRecheck(rowData){\r\n        fetch(uris.REQUEST_STUDENT_MARKS_RECHECK, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                person_id: this.props.username,\r\n                subject_id: rowData.subject_id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.toast.show({severity: 'info', summary: 'Info\"', detail: 'Marks Recheck Request Sent!!!'})})\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"Request Recheck\" className=\"p-button-rounded p-button-danger\" onClick={() => this.onRequestRecheck(rowData)}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.semSubjectValues[this.props.semIndex];\r\n        return (\r\n            <Fragment>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n                <Fragment>\r\n                    {recordDatas ? (\r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <h3>Marks Summary View : Assessment Marks are NOT Editable</h3>\r\n                            <DataTable value={recordDatas.data} header={\"Subject Marks for Semester \"+this.props.activeSem}>\r\n                                <Column field=\"subject_code\" header=\"Subject Code\"></Column>\r\n                                <Column field=\"title\" header=\"Subject Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\"></Column>\r\n                                <Column body={this.actionBodyTemplate}></Column>\r\n                            </DataTable>\r\n                        </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSem: state.student.activeSem,\r\n        username: state.auth.username,\r\n        semSubjectValues: state.student.semSubjectValues,\r\n        semIndex: state.student.activeSemSubjectValuesIndex,\r\n        loading: state.student.loading,\r\n        infoBox: state.student.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSemSubjectValues: (values) => dispatch(actions.setSemSubjectValues(values)),\r\n        setActiveSemIndex: (value) => dispatch(actions.setActiveSemIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableView );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_NOTIFICATIONS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              \r\n  <div className=\"p-grid styleInbox p-mt-4 \">\r\n      {this.state.data.map((dat, index) => {\r\n          return (\r\n            <div key={index} className=\"p-col-12 itstyle\">\r\n            <img src=\"https://i.imgur.com/IqICwKK.jpg\" width=\"45px\" height=\"45px\" alt=\"\"/>                    \r\n             <div className=\"inboxtext\">{dat.message}</div>\r\n        </div>\r\n          );\r\n      })}\r\n  </div> \r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\n\r\nexport default connect( mapStateToProps, null )( Inbox );\r\n  ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\nimport \"../../App.css\";\r\nclass Post extends React.Component{\r\n         constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return( \r\n            <div className=\" p-grid  p-ml-2  p-pt-1 p-shadow-2  \">    \r\n            {this.state.data.map((dat, index) => {\r\n          return (<Fragment key={index}>\r\n              <div className=\"p-col-12\">\r\n                    <div className=\"p-row p-p-2 fixPadd\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\" width=\"20px\"/> \r\n                            {dat.full_name}<div className=\"fixedSUB\">{dat.subject}</div>\r\n                    </div>\r\n                    <div className=\"p-row p-p-2\">\r\n                        {dat.content}</div>\r\n                </div>\r\n          </Fragment>\r\n          );\r\n      })}\r\n            </div>\r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( Post );\r\n","import React from 'react';\r\nimport \"./Timeline.css\";\r\n\r\nimport Inbox from './InboxArea';\r\nimport Post from './PostArea';\r\n\r\nclass Timeline extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\" p-fluid wholeStyle\">\r\n           <div className=\"p-grid p-lg-12\">\r\n               <div className=\"p-col-7\">\r\n                   <Post/>\r\n                </div>\r\n            <div className=\"p-col-4 p-offset-1 p-shadow-2\">\r\n                <div className=\"header\">\r\n                    Inbox\r\n                </div>\r\n                <Inbox/>\r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    );\r\n    }\r\n}\r\nexport default Timeline;\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport MainDashStudent from './StudentMain';\r\nimport DataTableView from './ViewTable';\r\nimport Timeline from './Timeline';\r\nimport * as actions from '../../store/actions/student';\r\n\r\nclass Student extends Component{\r\n\tcomponentDidMount(){\r\n        this.props.resetStudentState();\r\n        this.props.setSems([{value: 1}, {value: 2}, {value: 3}, {value: 4},\r\n                            {value: 5}, {value: 6}, {value: 7}, {value: 8}])\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={MainDashStudent}/>\r\n            \t<Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/studenttimeline\" exact component={Timeline}/>\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSems: (values) => dispatch(actions.setSems(values)),\r\n        resetStudentState: () => dispatch(actions.resetStudentState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Student);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setActiveTeacherUsername = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_USERNAME,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setActiveTeacherClasses = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setActiveTeacherIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setTeacherClassValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_CLASS_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setInfoBox = (values) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_INFOBOX,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setTeacherDepartments = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_DEPARTMENTS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setTeachers = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHERS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetAdminState = (value)=>{\r\n    return {\r\n        type: actionTypes.RESET_ADMIN_DEFAULTS\r\n    }\r\n}\r\n\r\nexport const resetAdminTeacherClass = (value)=>{\r\n    return {\r\n        type: actionTypes.RESET_ADMIN_TEACHER_CLASS_VALUES\r\n    }\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../../index.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n// import CSVReader from 'react-csv-reader';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as actions from '../../store/actions/admin';\r\nimport * as uris from '../../store/uris';\r\nimport './AdminMain.css';\r\n\r\nclass AdminMain extends Component {\r\n    emptyTeacher = {\r\n        person_id: '',\r\n        username: '',\r\n        full_name: '',\r\n        email: '',\r\n        phone_no: '',\r\n        program_code: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            redirect: null,\r\n            newTeacher: null,\r\n            teacherDialog: false,\r\n            department: [],\r\n            deleteTeacherDialog: false,\r\n            deleteTeachersDialog: false,\r\n            teacher: this.emptyTeacher,\r\n            selectedTeachers: null,\r\n            submitted: false,\r\n            globalFilter: null\r\n        };\r\n\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.rightToolbarTemplate = this.rightToolbarTemplate.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveTeacher = this.saveTeacher.bind(this);\r\n        this.editTeacher = this.editTeacher.bind(this);\r\n        this.confirmDeleteTeacher = this.confirmDeleteTeacher.bind(this);\r\n        this.deleteTeacher = this.deleteTeacher.bind(this);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onProgramChange = this.onProgramChange.bind(this);\r\n        this.hideDeleteTeacherDialog = this.hideDeleteTeacherDialog.bind(this);\r\n        this.hideDeleteTeachersDialog = this.hideDeleteTeachersDialog.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.infoBox) {\r\n          this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n        }\r\n        this.props.setInfoBoxNULL();\r\n        fetch(uris.FETCH_DEPARTMENT_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.setState({department: res.data})\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Department List Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            teacher: this.emptyTeacher,\r\n            submitted: false,\r\n            newTeacher: true,\r\n            teacherDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            teacherDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteTeacherDialog() {\r\n        this.setState({ deleteTeacherDialog: false });\r\n    }\r\n\r\n    hideDeleteTeachersDialog() {\r\n        this.setState({ deleteTeachersDialog: false });\r\n    }\r\n\r\n    saveTeacher() {\r\n        let state = { submitted: true };\r\n        if (this.state.teacher.username && this.state.teacher.full_name && this.state.teacher.email\r\n            && this.state.teacher.phone_no && this.state.teacher.program_code) {\r\n            let toastMsg = null;\r\n            let method = null;\r\n            if (!this.state.newTeacher) {\r\n                method = 'PATCH';\r\n                toastMsg = 'Teacher Updated';\r\n            }\r\n            else {\r\n                method = 'POST';\r\n                toastMsg = 'Teacher Created';\r\n            }\r\n            let i;\r\n            for (i=0; i<this.state.department.length;i++){\r\n                if (this.state.department[i].dept_name === this.state.teacher.program_code.dept_name) break;\r\n            }\r\n            let temp = {...this.state.teacher, dept_id: this.state.department[i].dept_id};\r\n            fetch(uris.ADD_TEACHER+this.state.teacher.person_id.toString(), {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(temp)\r\n            })\r\n                .then(res => res.json())\r\n                .then((res) => {\r\n                    if (res.status === 'success') {\r\n                        fetch(uris.FETCH_TEACHER_LIST, {\r\n                            method: 'GET',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            }\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(res => {\r\n                                if (res.status === 'success') {\r\n                                    this.props.setTeachers(res.data)\r\n                                } else {\r\n                                    this.toast.show({severity: 'error', summary: 'Teacher List Fetch Failed', detail: res.message});\r\n                                }\r\n                            })\r\n                            .catch(err => console.log(err))\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Teacher Update Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            this.toast.show({ severity: 'success', summary: 'Successful', detail: toastMsg, life: 3000 });\r\n\r\n            state = {\r\n                ...state,\r\n                newTeacher: false,\r\n                teacherDialog: false,\r\n                teacher: this.emptyTeacher\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    editTeacher(teacher) {\r\n        this.setState({\r\n            teacher: { ...teacher },\r\n            teacherDialog: true\r\n        });\r\n    }\r\n\r\n    teacherClickHandler(rowData){\r\n        this.props.selectCard(rowData.person_id);\r\n\t\tthis.setState({redirect: <Redirect to='/teachersessions'/>});\r\n    }\r\n\r\n    confirmDeleteTeacher(teacher) {\r\n        this.setState({\r\n            teacher: { ...teacher},\r\n            deleteTeacherDialog: true\r\n        });\r\n    }\r\n\r\n    deleteTeacher() {\r\n        let teachers = this.props.teachers.filter(val => val.person_id !== this.state.teacher.person_id);\r\n        fetch(uris.DELETE_TEACHER+this.state.teacher.person_id.toString(), {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.setState({\r\n                        deleteTeacherDialog: false,\r\n                        teacher: this.emptyTeacher\r\n                    });\r\n                    this.props.setTeachers(teachers);\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Teacher Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        \r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Teacher Deleted', life: 3000 });\r\n    }\r\n\r\n    findIndexByUsername(id) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.props.teachers.length; i++) {\r\n            if (this.props.teachers[i].username === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    createId() {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteTeachersDialog: true });\r\n    }\r\n\r\n    onInputChange(e, name) {\r\n        const val = (e.target && e.target.value) || '';\r\n        let teacher = {...this.state.teacher};\r\n        teacher[`${name}`] = val;\r\n\r\n        this.setState({ teacher });\r\n    }\r\n\r\n    onProgramChange(e) { this.setState({teacher: {...this.state.teacher, program_code: e.value}})}\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    rightToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                {/* <CSVReader onFileLoaded={(data, fileInfo) => console.log(data[0])} /> */}\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => this.editTeacher(rowData)} />\r\n                <Button icon='pi pi-briefcase' className=\"p-button-rounded p-button-info p-mr-2\" onClick={() => this.teacherClickHandler(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger p-mr-2\" onClick={() => this.confirmDeleteTeacher(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header\">\r\n                <h5 className=\"p-m-0\">Manage Teachers</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Search...\" />\r\n                </span>\r\n            </div>\r\n        );\r\n        const teacherDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveTeacher} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteTeacherDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteTeacherDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteTeacher} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (<Fragment>\r\n            <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n            {this.props.loading ?  <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n            <div className=\"datatable-crud-demo\">\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" style={{marginTop: '20px'}} left={this.leftToolbarTemplate} right={this.rightToolbarTemplate}></Toolbar>\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.teachers}\r\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} teachers\"\r\n                    globalFilter={this.state.globalFilter}\r\n                    header={header}>\r\n\r\n                    <Column field=\"username\" style={{width: '150px'}} header=\"UserName\" sortable></Column>\r\n                    <Column field=\"full_name\" style={{width: '150px'}} header=\"Full Name\" sortable></Column>\r\n                    <Column field=\"email\" style={{width: '350px'}} header=\"Email\" ></Column>\r\n                    <Column field=\"phone_no\" style={{width: '120px'}} header=\"Phone No\"  ></Column>\r\n                    <Column field=\"dept_name\" header=\"Department\" sortable></Column>\r\n                    <Column body={this.actionBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={this.state.teacherDialog} style={{ width: '450px' }} header=\"Teacher Details\" modal className=\"p-fluid\" footer={teacherDialogFooter} onHide={this.hideDialog}>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"username\">UserName</label>\r\n                    <InputText id=\"username\" value={this.state.teacher.username} onChange={(e) => this.onInputChange(e, 'username')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.username })} />\r\n                    {this.state.submitted && !this.state.teacher.username && <small className=\"p-invalid\">UserName is required.</small>}\r\n                </div>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"full_name\">Name</label>\r\n                    <InputText id=\"full_name\" value={this.state.teacher.full_name} onChange={(e) => this.onInputChange(e, 'full_name')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.full_name })} />\r\n                    {this.state.submitted && !this.state.teacher.full_name && <small className=\"p-invalid\">Name is required.</small>}\r\n                </div>\r\n                 <div className=\"p-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <InputText id=\"email\" value={this.state.teacher.email} onChange={(e) => this.onInputChange(e, 'email')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.email })} />\r\n                    {this.state.submitted && !this.state.teacher.email && <small className=\"p-invalid\">Email is required.</small>}\r\n                </div>\r\n                 <div className=\"p-field\">\r\n                    <label htmlFor=\"phone_no\">Phone No:</label>\r\n                    <InputText id=\"phone_no\" value={this.state.teacher.phone_no} onChange={(e) => this.onInputChange(e, 'phone_no')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.phone_no })} />\r\n                    {this.state.submitted && !this.state.teacher.phone_no && <small className=\"p-invalid\">Phone No is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Department\">Department</label>\r\n                    <Dropdown value={this.state.teacher.program_code} options={this.state.department} onChange={this.onProgramChange} optionLabel=\"dept_name\" required placeholder=\"Select a Department\"/>\r\n                    {this.state.submitted && !this.state.teacher.program_code && <small className=\"p-invalid\">Department is required.</small>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={this.state.deleteTeacherDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteTeacherDialogFooter} onHide={this.hideDeleteTeacherDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {this.state.teacher && <span>Are you sure you want to delete <b>{this.state.teacher.full_name}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>}\r\n        {this.state.redirect}\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n                \r\nconst mapStateToProps = state => {\r\n    return {\r\n      teachers: state.admin.teachers,\r\n      infoBox: state.admin.infoBox,\r\n      loading: state.admin.loading    \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      selectCard: (Class) => dispatch(actions.setActiveTeacherUsername(Class)),\r\n      setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n      setTeachers: (value) => dispatch(actions.setTeachers(value)),\r\n    };\r\n  };\r\n  \r\n  export default connect( mapStateToProps, mapDispatchToProps )( AdminMain );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/admin';\r\nimport './TeacherSessions.css';\r\n\r\nclass TeacherSessions extends Component {\r\n    emptyLecture = {\r\n        batch: '',\r\n        subject_code: '',\r\n        group_code: '',\r\n        program_code: '',\r\n        semester: ''\r\n    }\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            redirect: null,\r\n            lectureDialog: false,\r\n            submitted: false,\r\n            displayConfirmation: false,\r\n            lectureSel: {\r\n                batch_id: '',\r\n                program_id: '',\r\n                subject_id: '',\r\n                section_id: '',\r\n                semester: ''\r\n            },\r\n            lecture: {...this.emptyLecture},\r\n            batchs: ['074'],\r\n            programs: [\"BCT\",\"BEX\"],\r\n            subjects: [],\r\n            sections: []\r\n        }\r\n        this.addClass = this.addClass.bind(this);\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.addLecture = this.addLecture.bind(this);\r\n        this.onProgramChange = this.onProgramChange.bind(this);\r\n        this.onBatchChange = this.onBatchChange.bind(this);\r\n        this.onSubjectChange = this.onSubjectChange.bind(this);\r\n        this.onGroupChange = this.onGroupChange.bind(this);\r\n        this.onDeleteLecture = this.onDeleteLecture.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n    }\r\n\r\n    componentDidMount(){        \r\n        if (this.props.activeTeacher === null) { this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Teacher Selected!!!'}); }\r\n        else {\r\n            let i;\r\n            for(i=0;i<this.props.teacherClassValues.length;i++){\r\n                if (this.props.teacherClassValues[i].username === this.props.activeTeacher){\r\n                    this.props.setActiveTeacherIndex(i);\r\n                    break;\r\n                }\r\n            }\r\n            if (i === this.props.teacherClassValues.length && this.props.activeTeacher !== null){\r\n                fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.status === 'success') {\r\n                            this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                            this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data});\r\n                        } else {\r\n                            this.toast.show({severity: 'error', summary: 'Class List Fetch Failed', detail: res.message});\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    addClass(){\r\n        fetch(uris.FETCH_BATCH_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({batchs: res.data})})\r\n            .catch(err => console.log(err));\r\n        \r\n            fetch(uris.FETCH_PROGRAM_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.setState({programs: res.data}))\r\n            .catch(err => console.log(err));\r\n\r\n        this.setState({\r\n            teacher: {...this.emptyLecture},\r\n            submitted: false,\r\n            lectureDialog: true\r\n        });\r\n    }\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.addClass} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            lectureDialog: false\r\n        });\r\n    }\r\n\r\n    addLecture() {\r\n        let state = { submitted: true };\r\n        if (this.state.lecture.group_code && this.state.lectureSel.subject_id) {\r\n            let data = { person_id: this.props.activeTeacher,\r\n                        section_id: this.state.lectureSel.section_id,\r\n                        subject_id: this.state.lectureSel.subject_id}\r\n            fetch(uris.FETCH_CLASS_LIST, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        this.props.resetTeacherClasses();\r\n                        fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                            method: 'GET',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            }\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(res => {\r\n                                this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                                this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data});\r\n                                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Lecture Added', life: 3000 });                                \r\n                            })\r\n                            .catch(err => console.log(err));\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Lecture Add Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            state = {\r\n                ...state,\r\n                lectureDialog: false,\r\n                lecture: {...this.emptyLecture}\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    onBatchChange(e) {\r\n        let temp = {...this.emptyLecture};\r\n        temp.batch = e.value;\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, batch_id: e.value.batch_id,\r\n            program_id: '',\r\n            subject_id: '',\r\n            section_id: '',\r\n            semester: ''} });\r\n    }\r\n\r\n    onProgramChange(e) {\r\n        let temp = {...this.emptyLecture};\r\n        temp.program_code = e.value;\r\n        temp.batch = this.state.lecture.batch;\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, program_id: e.value.program_id,\r\n            subject_id: '',\r\n            section_id: '',\r\n            semester: ''} });\r\n        fetch(uris.FETCH_SECTION_LIST+'?batch_id='+this.state.lectureSel.batch_id+'&program_id='+e.value.program_id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({sections: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    onGroupChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.group_code = e.value\r\n        temp.program_code = this.state.lecture.program_code;\r\n        temp.batch = this.state.lecture.batch;\r\n\r\n        let i = 0;\r\n        for (i=0; i<this.state.batchs.length; i++){\r\n            if (this.state.lectureSel.batch_id === this.state.batchs[i].batch_id) {\r\n                this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, section_id: e.value.section_id\r\n                                , semester: this.state.batchs[i].semester, subject_id: ''} });\r\n                break;\r\n            }\r\n        }\r\n        fetch(uris.FETCH_SUBJECT_LIST+'?program_id='+this.state.lectureSel.program_id+'&semester='+this.state.batchs[i].semester.toString(), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({subjects: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onSubjectChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.subject_code = e.value\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, subject_id: e.value.subject_id}  });\r\n    }\r\n\r\n    onDeleteLecture(){\r\n        fetch(uris.FETCH_CLASS_LIST+this.props.teacherClassValues[this.props.teacherIndex].data[this.state.delIndex].lecture_id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.props.resetTeacherClasses();\r\n                    fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        }\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                            this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data}); // TODO: get fullmarks as well\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Lecture Remove Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true,\r\n            delIndex: position\r\n        };\r\n        this.setState(state);\r\n    }\r\n\r\n    onHide(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n    }\r\n\r\n    onApprove(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n        this.onDeleteLecture();\r\n    }\r\n\r\n    renderFooter(name) {\r\n        return (\r\n            <div>\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => this.onHide(name)} className=\"p-button-text\" />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" onClick={() => this.onApprove(name)} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render (){\r\n        const lectureDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Add\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.addLecture} />\r\n            </React.Fragment>\r\n        );\r\n        return (\r\n            <Fragment>                \r\n                <Toast ref={(el) => this.toast = el} />\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : <Fragment>\r\n                {this.props.teacherClassValues.length>this.props.teacherIndex ? <Fragment>\r\n                    <Toolbar style={{marginTop: '20px'}} className=\"p-mb-4\" left={this.leftToolbarTemplate}></Toolbar>\r\n                <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n                {this.props.teacherClassValues.length === 0 ? null : this.props.teacherClassValues[this.props.teacherIndex].data.map((data, index) => {\r\n                                return (<Card key={index} title={data.subject_code} subTitle={data.title} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"Remove\"\r\n                                            onClick={() => this.onClick('displayConfirmation', index)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(0,-2)}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(-2,)}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n                </div>\r\n                <Dialog visible={this.state.lectureDialog} style={{ width: '450px' }} header=\"Lecture Details\" modal className=\"p-fluid\" footer={lectureDialogFooter} onHide={this.hideDialog}>\r\n                <div>\r\n                    <label htmlFor=\"Batch\">Batch</label>\r\n                    <Dropdown value={this.state.lecture.batch} options={this.state.batchs} onChange={this.onBatchChange} optionLabel=\"batch_code\" required placeholder=\"Select a Batch\"/>\r\n                    {this.state.submitted && !this.state.lecture.batch && <small className=\"p-invalid\">Batch is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Program\">Program</label>\r\n                    <Dropdown value={this.state.lecture.program_code} options={this.state.programs} onChange={this.onProgramChange} optionLabel=\"program_code\" required placeholder=\"Select a Program\"/>\r\n                    {this.state.submitted && !this.state.lecture.program_code && <small className=\"p-invalid\">Program is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Section\">Section</label>\r\n                    <Dropdown value={this.state.lecture.group_code} options={this.state.sections} onChange={this.onGroupChange} optionLabel=\"section_code\" required placeholder=\"Select a Section\"/>\r\n                    {this.state.submitted && !this.state.lecture.group_code && <small className=\"p-invalid\">Section is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Subject\">Subject</label>\r\n                    <Dropdown value={this.state.lecture.subject_code} options={this.state.subjects} onChange={this.onSubjectChange} optionLabel=\"title\" required placeholder=\"Select a Subject\"/>\r\n                    {this.state.submitted && !this.state.lecture.subject_code && <small className=\"p-invalid\">Subject is required.</small>}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog header=\"Confirmation\" visible={this.state.displayConfirmation} modal style={{ width: '350px' }} footer={this.renderFooter('displayConfirmation')} onHide={() => this.onHide('displayConfirmation')}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                        <span>Are you sure you want to proceed?</span>\r\n                </div>\r\n            </Dialog>\r\n            </Fragment>:null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeTeacher: state.admin.activeTeacherUsername,\r\n        teacherClassValues: state.admin.activeTeacherClasses,\r\n        teacherIndex: state.admin.activeTeacherClassValuesIndex,\r\n        loading: state.admin.loading,\r\n        infoBox: state.admin.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setActiveTeacherClasses: (value) => dispatch(actions.setActiveTeacherClasses(value)),\r\n        setActiveTeacherUsername: (value) => dispatch(actions.setActiveTeacherUsername(value)),\r\n        setActiveTeacherIndex: (value) => dispatch(actions.setActiveTeacherIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) ),\r\n        resetTeacherClasses: () => dispatch(actions.resetAdminTeacherClass())\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( TeacherSessions );\r\n","import React, {Fragment} from 'react';\r\nimport \"./admindash.css\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from \"primereact/button\";\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { CSVDownload } from 'react-csv';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass AdminDashboard extends React.Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n             selectedSem: null,\r\n             uniqueRoll: '',\r\n             loading: false,\r\n             data: null,\r\n             countData: {teachers: 0, students: 0},\r\n             refreshDialog: false,\r\n             batch_code: '',\r\n             deadline: '',\r\n             credentials: []\r\n    };  \r\n    this.semester = ['1','2','3','4','5','6','7','8'];  \r\n    this.onSemesterChange = this.onSemesterChange.bind(this);\r\n    this.onFetchStudentSemMarks = this.onFetchStudentSemMarks.bind(this);\r\n    this.confirmRefresh = this.confirmRefresh.bind(this);\r\n    this.hideRefreshDialog = this.hideRefreshDialog.bind(this);\r\n    this.confirmRefreshFlow = this.confirmRefreshFlow.bind(this);\r\n    this.setDeadline = this.setDeadline.bind(this);\r\n}\r\n\r\ncomponentDidMount(){\r\n    fetch(uris.FETCH_STATS, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.status === 'success') {\r\n            this.setState({countData: res.data})\r\n        } else {\r\n            this.toast.show({severity: 'error', summary: 'Stats Fetch Failed', detail: res.message});\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n    fetch(uris.POST_DEADLINE, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.status === 'success') {\r\n            this.setState({deadline: res.deadline.substring(0, 10)})\r\n        } else {\r\n            this.toast.show({severity: 'error', summary: 'Deadline Fetch Failed', detail: res.message});\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nonSemesterChange(e) {\r\n    this.setState({ selectedSem: e.value });\r\n}\r\n    onFetchStudentSemMarks(){\r\n        if (this.state.uniqueRoll !== '' && this.state.selectedSem !== null) {\r\n            this.setState({loading: true})\r\n            fetch(uris.FETCH_STUDENT_DETAILS+'?username='+this.state.uniqueRoll, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                fetch(uris.FETCH_STUDENT_SEM_MARKS+'?person_id='+res.data.person_id+'&semester='+this.state.selectedSem, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }})\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.status === 'success') {\r\n                            this.setState({data: res.data, loading: false})\r\n                        } else {\r\n                            this.toast.show({severity: 'error', summary: 'Student Details Fetch Failed', detail: res.message});\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err))\r\n        }else{\r\n            this.toast.show({severity: 'error', summary: 'Invalid Input', detail: 'Please input a valid value!!!'})\r\n        }\r\n    }\r\n\r\n    hideRefreshDialog() {\r\n        this.setState({\r\n            refreshDialog: false\r\n        });\r\n    }\r\n\r\n    confirmRefresh(rType) {\r\n        this.setState({\r\n            refreshDialog: rType\r\n        });\r\n    }\r\n\r\n    confirmRefreshFlow() {\r\n        let postURI = (this.state.refreshDialog === 'year' ? uris.POST_YEAR_REFRESH : uris.POST_SESSION_REFRESH);\r\n        fetch(postURI, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ batch_code: this.state.batch_code})\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.toast.show({severity: 'info', summary: 'Database Updated', detail: 'Successfully Refreshed '+this.state.refreshDialog});\r\n                    this.state.refreshDialog === 'year' ? this.setState({credentials: res.credentials, refreshDialog: false}) : this.setState({refreshDialog: false});\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Database Update Failed', detail: res.message});\r\n                    this.setState({refreshDialog: false});\r\n                }\r\n                fetch(uris.FETCH_STATS, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }})\r\n                .then(res => res.json())\r\n                .then(res => {this.setState({countData: res.data})})\r\n                .catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    setDeadline(value){\r\n        fetch(uris.POST_DEADLINE, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({deadline: value.toISOString().substring(0, 10)})\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.setState({deadline: value.toISOString().substring(0, 10)})\r\n                    this.toast.show({severity: 'info', summary: 'Deadline Updated', detail: 'Successfully Changed!!'});\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Deadline Update Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n  render() {\r\n    const refreshDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideRefreshDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.confirmRefreshFlow} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    let dwnldData;\r\n    if (this.state.credentials.length !== 0) {\r\n        dwnldData = <CSVDownload className=\"csv-download\" target=\"_self\" filename='credentials' data={this.state.credentials}/>\r\n        this.toast.show({severity: 'info', summary: 'Downloaded File Followup', detail: 'Change or Add .csv extension to the Downloaded File!!'});\r\n        this.setState({credentials: []})\r\n    } else {\r\n        dwnldData = null;\r\n    }\r\n    return (<Fragment>        \r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {dwnldData}\r\n        <div className=\" p-fluid\">\r\n           <div className=\"p-mt-2 p-grid \">               \r\n                <div className=\"cardResult  p-mt-2   p-col-3\">\r\n                        <div className=\"p-row headerPAPER\">\r\n                       <h2>\r\n                            Total Teachers\r\n                           </h2>\r\n                        </div>\r\n                        <hr/>\r\n                           <div className=\"numberBIG p-row\">\r\n                        {this.state.countData.teachers}\r\n                        </div>\r\n                </div>             \r\n                <div className=\"cardResult p-mt-2 p-offset-2  p-col-3\">\r\n                        <div className=\"p-row headerPAPER\">\r\n                        <h2>\r\n                            Total Students\r\n                            </h2>\r\n                        </div>\r\n                        <hr/>\r\n                           <div className=\"numberBIG p-row\">\r\n                        {this.state.countData.students}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-col-3\">\r\n\r\n                <div className=\"cardResult p-offset-2  p-row\">\r\n                <div className=\"p-grid\">\r\n                        <div className=\"p-col-4\">\r\n                            <InputText type=\"text\" width=\"50px\" value={this.state.batch_code} placeholder=\"Year\" onChange={(e) => this.setState({batch_code: e.target.value})}/>\r\n                        </div>\r\n                        <div className=\"p-col-8\">\r\n                            <Button label=\"Add Students\" className=\"p-button-rounded p-button-success\" onClick={() => this.confirmRefresh('year')}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"cardResult p-mt-2 p-offset-2  p-row\">\r\n                    \r\n                    <Button label=\"Initiate New Session\" className=\"p-button-rounded p-button-info\" onClick={() => this.confirmRefresh('session')}/>\r\n                </div>\r\n                    </div>\r\n                    <div className=\"p-mt-2 p-col-3\">\r\n                        <div className=\"p-field\">\r\n                        \r\n                        <Calendar id=\"icon\" showIcon placeholder=\"Set Marks Submission Deadline\" onChange={(e) => this.setDeadline(e.value)}/>\r\n                    </div>\r\n                    <h3>Marks Submission Till : {this.state.deadline}</h3>\r\n                    </div>\r\n                </div>\r\n           <div className=\"p-fluid card\">\r\n               <div className=\"p-grid p-lg-12 p-mt-2 \">\r\n                     <div className=\"p-col\">\r\n                         <h3>Unique Roll No</h3>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText label=\"Unique Roll No\" value={this.state.uniqueRoll} onChange={(e) => this.setState({uniqueRoll: e.target.value})} placeholder=\"Enter By Unique Roll No\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-col\">\r\n                         <h3>Semester</h3>\r\n                            <div className=\"p-inputgroup\">\r\n                               <Dropdown value={this.state.selectedSem} options={this.semester} onChange={this.onSemesterChange} placeholder=\"Select Sem\" />\r\n                            </div>\r\n                        </div>\r\n                           <div className=\"p-col\">\r\n                               <h3>Search</h3>\r\n                          <Button icon=\"pi pi-search\" onClick={this.onFetchStudentSemMarks}/>\r\n                        </div>\r\n               </div>\r\n                </div>\r\n            </div>\r\n            \r\n            {this.state.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : null}\r\n                        {this.state.data ? \r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <DataTable value={this.state.data} header=\"Data\">\r\n                                <Column field=\"subject_code\" header=\"Subject Code\"></Column>\r\n                                <Column field=\"title\" header=\"Subject Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\"></Column>\r\n                                <Column field=\"practical_marks\" header=\"Practical\"></Column>\r\n                               \r\n                            </DataTable>\r\n                        </div>\r\n                        </div>:null}\r\n            <Dialog visible={this.state.refreshDialog !== false} style={{ width: '450px' }} header=\"Confirm\" modal footer={refreshDialogFooter} onHide={this.hideRefreshDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {<span>Are you sure you want to refresh <b>{this.state.refreshDialog}</b>?</span>}\r\n                    <br/>\r\n                    {this.state.refreshDialog === 'year' ? ' This will Fetch new year Student list!!' : null}\r\n                    {this.state.refreshDialog === 'session' ? 'This will Recreate new Session !!' : null}\r\n                    <br/>\r\n                    <b>NOTE: This may take upto several seconds!!</b>\r\n                </div>\r\n            </Dialog>\r\n    </Fragment>\r\n        \r\n    );\r\n    }\r\n}\r\nexport default AdminDashboard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport { Toast } from 'primereact/toast';\r\nimport AdminMain from './AdminMain';\r\nimport TeacherSessions from './TeacherSessions';\r\nimport AdminDashboard from './admindashboard';\r\nimport * as actions from '../../store/actions/admin';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Admin extends Component{\r\n\tcomponentDidMount(){\r\n        fetch(uris.FETCH_TEACHER_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.props.onSetTeachers(res.data)\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Teacher Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n            <Fragment>\r\n            <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={AdminMain}/>\r\n            \t<Route path=\"/teachersessions\" exact component={TeacherSessions}/>\r\n            \t<Route path=\"/admindashboard\" exact component={AdminDashboard}/>\r\n      \t\t</div>\r\n            </Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetTeachers: (values) => dispatch(actions.setTeachers(values))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import React from 'react'\r\nimport \"./Login.scss\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport tulogo from \"../images/tulogo.png\";\r\nimport { Toast } from 'primereact/toast';\r\nimport 'primeflex/primeflex.css';\r\n\r\nclass Login extends React.Component{\r\n  constructor (props){\r\n        super();\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n  }\r\n  \r\n  onSubmitHandler(event){\r\n    event.preventDefault();\r\n    let username = document.getElementById('username').value;\r\n    let password = document.getElementById('password').value;\r\n    this.props.onSignIn(username, password);\r\n  }\r\n  render() {    \r\n    if (this.props.error !== null) {\r\n      this.toast.show({severity: 'info', summary: 'Login Failed!!', detail: this.props.error});\r\n      this.props.setError(null);\r\n    }\r\n      return (<div> \r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        <div className=\"customgrid\">\r\n    <div className=\"p-col bigText \">\r\n      Internal Marks Management System\r\n    </div>\r\n    <div className=\"p-col\">\r\n      <div className=\"login-page\">\r\n          <div className=\"form\">\r\n              <img\r\n            src={tulogo}\r\n            width=\"60px\" alt=\"TU Logo\"/>\r\n            <h2>IMMS x DBMS</h2>\r\n            <form className=\"login-form\">\r\n              <input id=\"username\" type=\"text\" placeholder=\"username\" />\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" />\r\n              <button onClick={this.onSubmitHandler}>login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n</div>\r\n        \r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n      isAuthenticated: state.auth.token !== null,\r\n      authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onSignIn: (username, password) => dispatch(actions.auth(username, password)),\r\n      setError: (value) => dispatch(actions.authFail(value))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from '../store/actions/auth';\r\nimport { resetStudentState } from '../store/actions/student';\r\nimport { resetTeacherState } from '../store/actions/teacher';\r\nimport { resetAdminState } from '../store/actions/admin';\r\n\r\nclass LogOut extends Component{\r\n    componentDidMount(){\r\n        this.props.resetStudent();\r\n        this.props.resetTeacher();\r\n        this.props.resetAdmin();\r\n        this.props.onLogOut();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to='/'/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resetTeacherState: () => dispatch(resetTeacherState()),\r\n        resetStudent: () => dispatch(resetStudentState()),\r\n        resetTeacher: () => dispatch(resetTeacherState()),\r\n        resetAdmin: () => dispatch(resetAdminState()),\r\n        onLogOut: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LogOut);\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from 'react-redux';\r\nimport { AppTopbar } from \"./AppTopbar\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AppMenu } from \"./AppMenu\";\r\nimport AppProfile from \"./AppProfile\";\r\nimport Teacher from './pages/teacher/Teacher';\r\nimport Student from './pages/student/Student';\r\nimport Admin from './pages/admin/Admin';\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CustomIcons.css\";\r\nimport \"./Layout/layout.scss\";\r\nimport \"./Login/Login\";\r\nimport Login from \"./Login/Login\";\r\nimport LogOut from './pages/LogOut';\r\nimport pcampus from \"./images/pcampus.jpg\";\r\nimport \"primereact/resources/themes/saga-green/theme.css\";\r\nimport \"./Layout/layout.scss\"\r\nimport PrimeReact from 'primereact/utils';\r\nclass App extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      layoutMode: \"static\",\r\n      layoutColorMode: \"light\",\r\n      /* Make this True for default Slidebar Close */\r\n      staticMenuInactive: false,\r\n      overlayMenuActive: false,\r\n      mobileMenuActive: false\r\n    };\r\n PrimeReact.ripple = true;\r\n    this.onWrapperClick = this.onWrapperClick.bind(this);\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.onSidebarClick = this.onSidebarClick.bind(this);\r\n    this.onMenuItemClick = this.onMenuItemClick.bind(this);\r\n  }\r\n\r\n  onWrapperClick(event) {\r\n    if (!this.menuClick) {\r\n      this.setState({\r\n        overlayMenuActive: false,\r\n        mobileMenuActive: false\r\n      });\r\n    }\r\n\r\n    this.menuClick = false;\r\n  }\r\n\r\n  onToggleMenu(event) {\r\n    this.menuClick = true;\r\n\r\n    if (this.isDesktop()) {\r\n      if (this.state.layoutMode === \"overlay\") {\r\n        this.setState({\r\n          overlayMenuActive: !this.state.overlayMenuActive\r\n        });\r\n      } else if (this.state.layoutMode === \"static\") {\r\n        this.setState({\r\n          staticMenuInactive: !this.state.staticMenuInactive\r\n        });\r\n      }\r\n    } else {\r\n      const mobileMenuActive = this.state.mobileMenuActive;\r\n      this.setState({\r\n        mobileMenuActive: !mobileMenuActive\r\n      });\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onSidebarClick(event) {\r\n    this.menuClick = true;\r\n  }\r\n\r\n  onMenuItemClick(event) {\r\n    if (!event.item.items) {\r\n      this.setState({\r\n        overlayMenuActive: false,\r\n        mobileMenuActive: false\r\n      });\r\n    }\r\n  }\r\n\r\n  createMenu() {\r\n    if (this.props.role === 'teacher') {\r\n      this.menu = [\r\n        {\r\n          label: \"Teacher DashBoard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Teacher Timeline\",\r\n          icon: \"pi pi-fw pi-globe\",\r\n          command: () => {\r\n            window.location = \"#/timeline\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Section Dashboard\",\r\n          icon: \"pi pi-fw pi-users\",\r\n          command: () => {\r\n            window.location = \"#/marksview\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Marks Edit Mode\",\r\n          icon: \"pi pi-fw pi-user-edit\",\r\n          command: () => {\r\n            window.location = \"#/marksentry\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Score Statistics\",\r\n          icon: \"pi pi-fw pi-chart-bar\",\r\n          command: () => {\r\n            window.location = \"#/statistics\";\r\n          }\r\n\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    } else if (this.props.role === 'student') {\r\n      this.menu = [\r\n        {\r\n          label: \"Student Timeline\",\r\n          icon: \"pi pi-fw pi-globe\",\r\n          command: () => {\r\n            window.location = \"#/studenttimeline\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Student Dashboard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Subject Marks\",\r\n          icon: \"pi pi-fw pi-users\",\r\n          command: () => {\r\n            window.location = \"#/marksview\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    } else if (this.props.role === 'admin') {\r\n      this.menu = [\r\n        {\r\n          label: \"Admin Home\",\r\n          icon: \"pi pi-fw pi-eye\",\r\n          command: () => {\r\n            window.location = \"#/admindashboard\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Admin Dashboard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Teacher Sessions\",\r\n          icon: \"pi pi-fw pi-calendar\",\r\n          command: () => {\r\n            window.location = '#/teachersessions';\r\n          }\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  addClass(element, className) {\r\n    if (element.classList) element.classList.add(className);\r\n    else element.className += \" \" + className;\r\n  }\r\n\r\n  removeClass(element, className) {\r\n    if (element.classList) element.classList.remove(className);\r\n    else\r\n      element.className = element.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n  }\r\n\r\n  isDesktop() {\r\n    return window.innerWidth > 1024;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.mobileMenuActive)\r\n      this.addClass(document.body, \"body-overflow-hidden\");\r\n    else this.removeClass(document.body, \"body-overflow-hidden\");\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isAuthenticated){\r\n      return <Login/>\r\n    }\r\n    else {\r\n      this.createMenu();\r\n      const wrapperClass = classNames(\"layout-wrapper\", {\r\n        \"layout-overlay\": this.state.layoutMode === \"overlay\",\r\n        \"layout-static\": this.state.layoutMode === \"static\",\r\n        \"layout-static-sidebar-inactive\":\r\n          this.state.staticMenuInactive && this.state.layoutMode === \"static\",\r\n        \"layout-overlay-sidebar-active\":\r\n          this.state.overlayMenuActive && this.state.layoutMode === \"overlay\",\r\n        \"layout-mobile-sidebar-active\": this.state.mobileMenuActive\r\n      });\r\n\r\n      const sidebarClassName = classNames(\"layout-sidebar\", {\r\n        \"layout-sidebar-light\": this.state.layoutColorMode === \"light\"\r\n      });\r\n\r\n      let renderComponent = null\r\n      switch (this.props.role){\r\n        case 'admin': renderComponent = <Admin/>;\r\n          break;\r\n        case 'teacher': renderComponent = <Teacher/>;\r\n          break;\r\n        case 'student': renderComponent = <Student/>;\r\n          break;\r\n        default: renderComponent = null;\r\n      }\r\n\r\n      return (\r\n        <div className={wrapperClass} onClick={this.onWrapperClick}>\r\n          <AppTopbar onToggleMenu={this.onToggleMenu} />\r\n\r\n          <div ref={(el) => (this.sidebar = el)} className={sidebarClassName} onClick={this.onSidebarClick}>\r\n            <div className=\"layout-logo\">\r\n              <img alt=\"Logo\" width=\"250px\" src={pcampus}/>\r\n            </div>\r\n            <AppProfile />\r\n            <AppMenu model={this.menu} onMenuItemClick={this.onMenuItemClick} />\r\n          </div>\r\n\r\n          <Route path=\"/logout\" exact component={LogOut}/>\r\n          {renderComponent}\r\n          <Redirect to='/'/>\r\n\r\n          <div className=\"layout-mask\"></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      role: state.auth.role,\r\n      isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( App );\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    username: null,\r\n    fullname: null,\r\n    role: null,\r\n    error: null,\r\n    loading: false,\r\n    redirect: null,\r\n    email: null\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return { ...state, error: null, loading: true };\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        token: action.token,\r\n        username: action.username,\r\n        fullname: action.fullname,\r\n        role: action.role,\r\n        email: action.email\r\n    }\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return { ...state, error: action.error, loading: false };\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return {...initialState};\r\n};\r\n\r\nconst setAuthRedirect = (state, action) => {\r\n    return { ...state, redirect: action.value }\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT: return setAuthRedirect(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    activeClass: null,\r\n    activeSectionSubject: [],\r\n    activeClassStudentValuesIndex: null,\r\n    classes: [],\r\n    classStudentValues: [],\r\n    loading: true\r\n};\r\n\r\nconst setTeacherClasses = (state, action) => {\r\n    return {...state, classes: action.value, loading: false}\r\n};\r\n\r\nconst setTeacherInfoBox = (state, action) => {\r\n    return {...state, infoBox: action.value}\r\n};\r\n\r\nconst setActiveClass = (state, action) => {\r\n    return {...state, activeClass: action.Class, loading: true};\r\n};\r\n\r\nconst setActiveClassStudentIndex = (state, action) => {\r\n    return {...state, activeClassStudentValuesIndex: action.value, loading: false}\r\n};\r\n\r\nconst setClassStudentValues = (state, action) => {\r\n    return {\r\n        ...state,\r\n        classStudentValues: [...state.classStudentValues, action.value],\r\n        loading: false\r\n    }\r\n};\r\n\r\nconst updateClassStudentValues = (state, action) => {\r\n    let tempClass = [...state.classStudentValues];\r\n    tempClass[state.activeClassStudentValuesIndex].data = action.value\r\n    return {...state, classStudentValues: tempClass}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.SET_TEACHER_CLASSES: return setTeacherClasses(state, action);\r\n        case actionTypes.SET_TEACHER_INFOBOX: return setTeacherInfoBox(state, action);\r\n        case actionTypes.RESET_TEACHER_DEFAULTS: return {...initialState};\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS: return setActiveClass(state, action);\r\n        case actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES: return setClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_SECTION_SUBJECT: return {...state, activeSectionSubject: action.value};\r\n        case actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES: return updateClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX: return setActiveClassStudentIndex(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    loading: true,\r\n    activeSem: null,\r\n    sems: [],\r\n    semSubjectValues: [],\r\n    activeSemSubjectValuesIndex: null\r\n};\r\n\r\nconst reducer=(state=initialState, action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_STUDENT_ACTIVE_SEM: return {...state, activeSem: action.value, loading: true}\r\n        case actionTypes.SET_STUDENT_SEMS: return {...state, sems: action.value, loading: false}\r\n        case actionTypes.SET_STUDENT_SEM_SUBJECT_VALUES: return {...state, semSubjectValues: [...state.semSubjectValues, action.value],\r\n                                                                    loading: false}\r\n        case actionTypes.SET_STUDENT_INFOBOX: return {...state, infoBox: action.value}\r\n        case actionTypes.RESET_STUDENT_DEFAULTS: return {...initialState}\r\n        case actionTypes.SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX: return {...state, activeSemSubjectValuesIndex: action.value,\r\n                                                                    loading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    loading: true,\r\n    activeTeacherUsername: null,\r\n    activeTeacherClasses: [],\r\n    activeTeacherClassValuesIndex: null,\r\n    teacherDepartments: [],\r\n    teachers: []\r\n};\r\n\r\nconst reducer=(state=initialState, action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_USERNAME: return {...state, activeTeacherUsername: action.value, loading: true};\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES: return {...state, activeTeacherClasses: [...state.activeTeacherClasses, action.value],\r\n                                                                            loading: false};\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX: return {...state, activeTeacherClassValuesIndex: action.value, loading: false};\r\n        case actionTypes.SET_ADMIN_TEACHER_DEPARTMENTS: return {...state, teacherDepartments: action.value};\r\n        case actionTypes.SET_ADMIN_TEACHERS: return {...state, teachers: action.value, loading: false};\r\n        case actionTypes.SET_ADMIN_INFOBOX: return {...state, infoBox: action.value};\r\n        case actionTypes.RESET_ADMIN_TEACHER_CLASS_VALUES: return {...state, activeTeacherClasses: []};\r\n        case actionTypes.RESET_ADMIN_DEFAULTS: return {...initialState};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\n\r\nimport authReducer from './store/reducers/auth';\r\nimport teacherReducer from './store/reducers/teacher';\r\nimport studentReducer from './store/reducers/student';\r\nimport adminReducer from './store/reducers/admin';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    teacher: teacherReducer,\r\n    student: studentReducer,\r\n    admin: adminReducer\r\n});\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter><ScrollToTop>\r\n      <App/>\r\n   </ScrollToTop></HashRouter>\r\n </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/Profile-6.d898415e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tulogo.838d6952.png\";","module.exports = __webpack_public_path__ + \"static/media/pcampus.328e3389.jpg\";"],"sourceRoot":""}