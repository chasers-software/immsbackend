{"version":3,"sources":["AppTopbar.js","AppMenu.js","AppProfile.js","store/uris.js","store/actions/teacher.js","store/actions/actionTypes.js","store/actions/auth.js","pages/teacher/TeacherMain.js","pages/teacher/ViewTable.js","pages/teacher/EditTable.js","pages/teacher/BarChart.js","pages/teacher/InboxArea.js","pages/teacher/PostArea.js","pages/teacher/Timeline.js","pages/teacher/Teacher.js","store/actions/student.js","pages/student/StudentMain.js","pages/student/ViewTable.js","pages/student/InboxArea.js","pages/student/PostArea.js","pages/student/Timeline.js","pages/student/Student.js","store/actions/admin.js","pages/admin/AdminMain.js","pages/admin/TeacherSessions.js","pages/admin/admindashboard.js","pages/admin/Admin.js","Login/Login.js","pages/LogOut.js","App.js","ScrollToTop.js","store/reducers/auth.js","store/reducers/teacher.js","store/reducers/student.js","store/reducers/admin.js","index.js","images/Profile-6.jpg","images/tulogo.png","images/pcampus.jpg"],"names":["AppTopbar","className","onClick","this","props","onToggleMenu","Component","defaultProps","AppSubmenu","state","activeIndex","event","item","index","disabled","preventDefault","command","originalEvent","setState","onMenuItemClick","submenuIcon","items","badge","Fragment","icon","label","i","content","renderLinkContent","to","activeClassName","e","exact","target","href","url","map","active","styleClass","classNames","badgeStyleClass","key","root","renderLink","AppMenu","model","AppProfile","displayPosition","position","expanded","currPass","newPass","confirmPass","bind","onHide","hideDialog","changePass","name","toast","show","severity","summary","detail","fetch","method","headers","body","JSON","stringify","person_id","username","old_password","new_password","then","res","json","status","message","catch","err","console","log","renderFooter","style","zIndex","ref","el","src","profile1","width","alt","full_name","header","visible","footer","margin","value","onChange","placeholder","connect","auth","setInfoBox","values","type","authFail","error","logout","localStorage","removeItem","setAuthRedirect","MainDashTeacher","deadline","infoBox","setInfoBoxNULL","substring","data","selectCard","lecture_id","setSectionSubject","section_code","subject_code","theory_fm","practical_fm","setRedirect","color","loading","paddingTop","classes","title","subTitle","onCardSelectHandler","slice","lineHeight","redirect","React","teacher","dispatch","Class","actions","DataTableView","exportCSV","activeClass","setRedirectNULL","classStudentValues","length","classId","setActiveStudentIndex","temp","theory_marks","practical_marks","remarks","setClassStudentValues","dt","recordDatas","classIndex","sectionSubject","field","sortable","activeClassStudentValuesIndex","activeSectionSubject","DataTableEdit","onMarksSubmitHandler","remarksBodyTemplate","onRemarksChange","stateItem","updatedProducts","update","isInt","parseInt","rowIndex","rowData","onEditorValueChange","inputTextEditor","currClassVals","updateValues","options","required","padding","display","justifyContent","editMode","editor","AssessmentEditor","PracticalEditor","BarChart","assessmentData","practicalData","max","count","assessment","practical","aval","pval","hasOwnProperty","labels","Object","keys","datasets","backgroundColor","Math","legend","fontColor","scales","xAxes","ticks","yAxes","min","getOption","Inbox","uris","dat","height","Post","value2","onPostSend","section_id","activeSection","rows","cols","autoResize","Timeline","Teacher","onSetClass","path","component","token","MainDashStudent","sems","student","sem","onRequestRecheck","actionBodyTemplate","activeSem","semSubjectValues","setActiveSemIndex","toString","setSemSubjectValues","subject_id","semIndex","activeSemSubjectValuesIndex","subject","Student","resetStudentState","setSems","setActiveTeacherUsername","setTeachers","AdminMain","emptyTeacher","email","phone_no","program_code","newTeacher","teacherDialog","department","deleteTeacherDialog","deleteTeachersDialog","selectedTeachers","submitted","globalFilter","leftToolbarTemplate","rightToolbarTemplate","openNew","saveTeacher","editTeacher","confirmDeleteTeacher","deleteTeacher","confirmDeleteSelected","onInputChange","onProgramChange","hideDeleteTeacherDialog","hideDeleteTeachersDialog","toastMsg","dept_name","dept_id","life","teachers","filter","val","id","chars","charAt","floor","random","teacherClickHandler","onInput","teacherDialogFooter","deleteTeacherDialogFooter","marginTop","left","right","dataKey","paginator","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","modal","htmlFor","autoFocus","optionLabel","fontSize","admin","TeacherSessions","emptyLecture","batch","group_code","semester","lectureDialog","displayConfirmation","lectureSel","batch_id","program_id","lecture","batchs","programs","subjects","sections","addClass","addLecture","onBatchChange","onSubjectChange","onGroupChange","onDeleteLecture","activeTeacher","teacherClassValues","setActiveTeacherIndex","setActiveTeacherClasses","resetTeacherClasses","teacherIndex","delIndex","onApprove","lectureDialogFooter","activeTeacherUsername","activeTeacherClasses","activeTeacherClassValuesIndex","AdminDashboard","selectedSem","uniqueRoll","countData","students","refreshDialog","batch_code","credentials","onSemesterChange","onFetchStudentSemMarks","confirmRefresh","hideRefreshDialog","confirmRefreshFlow","setDeadline","rType","postURI","toISOString","dwnldData","refreshDialogFooter","filename","showIcon","Admin","onSetTeachers","Login","onSubmitHandler","document","getElementById","password","onSignIn","setError","tulogo","isAuthenticated","authRedirectPath","authData","setItem","user","role","fullname","authSuccess","LogOut","resetStudent","resetTeacher","resetAdmin","onLogOut","resetTeacherState","App","layoutMode","layoutColorMode","staticMenuInactive","overlayMenuActive","mobileMenuActive","PrimeReact","ripple","onWrapperClick","onSidebarClick","menuClick","isDesktop","menu","window","location","element","classList","add","remove","replace","RegExp","split","join","innerWidth","removeClass","createMenu","wrapperClass","sidebarClassName","renderComponent","sidebar","pcampus","ScrollToTop","prevProps","scrollTo","children","withRouter","initialState","authStart","action","authLogout","reducer","setTeacherClasses","setTeacherInfoBox","setActiveClass","setActiveClassStudentIndex","updateClassStudentValues","tempClass","teacherDepartments","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","teacherReducer","studentReducer","adminReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","module","exports"],"mappings":"0YAKaA,G,MAAb,4JASE,WACE,OACE,yBAAKC,UAAU,0BACb,4BACEA,UAAU,4BACVC,QAASC,KAAKC,MAAMC,cAEpB,0BAAMJ,UAAU,aAElB,yBAAKA,UAAU,YAGf,yBAAKA,UAAU,kBACb,qEAtBV,GAA+BK,cAAlBN,EACJO,aAAe,CACpBF,aAAc,M,oBCFZG,E,kDAeJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEC,YAAa,MAFX,E,mDAKnB,SAAgBC,EAAOC,EAAMC,GAE3B,GAAID,EAAKE,SAEP,OADAH,EAAMI,kBACC,EAILH,EAAKI,SACPJ,EAAKI,QAAQ,CAAEC,cAAeN,EAAOC,KAAMA,IAGzCC,IAAUV,KAAKM,MAAMC,YAAaP,KAAKe,SAAS,CAAER,YAAa,OAC9DP,KAAKe,SAAS,CAAER,YAAaG,IAE9BV,KAAKC,MAAMe,iBACbhB,KAAKC,MAAMe,gBAAgB,CACzBF,cAAeN,EACfC,KAAMA,M,+BAKZ,SAAkBA,GAChB,IAAIQ,EAAcR,EAAKS,OACrB,uBAAGpB,UAAU,gDAEXqB,EAAQV,EAAKU,OACf,0BAAMrB,UAAU,kBAAkBW,EAAKU,OAGzC,OACE,kBAAC,IAAMC,SAAP,KACE,uBAAGtB,UAAWW,EAAKY,OACnB,8BAAOZ,EAAKa,OACXL,EACAE,K,wBAKP,SAAWV,EAAMc,GAAI,IAAD,OACdC,EAAUxB,KAAKyB,kBAAkBhB,GAErC,OAAIA,EAAKiB,GAEL,kBAAC,IAAD,CACEC,gBAAgB,eAChBD,GAAIjB,EAAKiB,GACT3B,QAAS,SAAC6B,GAAD,OAAO,EAAKZ,gBAAgBY,EAAGnB,EAAMc,IAC9CM,OAAK,EACLC,OAAQrB,EAAKqB,QAEZN,GAKH,uBACEO,KAAMtB,EAAKuB,IACXjC,QAAS,SAAC6B,GAAD,OAAO,EAAKZ,gBAAgBY,EAAGnB,EAAMc,IAC9CO,OAAQrB,EAAKqB,QAEZN,K,oBAMT,WAAU,IAAD,OACHN,EACFlB,KAAKC,MAAMiB,OACXlB,KAAKC,MAAMiB,MAAMe,KAAI,SAACxB,EAAMc,GAC1B,IAAIW,EAAS,EAAK5B,MAAMC,cAAgBgB,EACpCY,EAAaC,IAAW3B,EAAK4B,gBAAiB,CAChD,kBAAmBH,IAAWzB,EAAKiB,KAGrC,OACE,wBAAI5B,UAAWqC,EAAYG,IAAKf,GAC7Bd,EAAKS,QAA6B,IAApB,EAAKjB,MAAMsC,MACxB,yBAAKzC,UAAU,UAEhB,EAAK0C,WAAW/B,EAAMc,GACvB,kBAAClB,EAAD,CACEa,MAAOT,EAAKS,MACZF,gBAAiB,EAAKf,MAAMe,sBAMtC,OAAOE,EAAQ,wBAAIpB,UAAWE,KAAKC,MAAMH,WAAYoB,GAAc,S,GAhH9Cf,aAAnBE,EACGD,aAAe,CACpBN,UAAW,KACXoB,MAAO,KACPF,gBAAiB,KACjBuB,MAAM,GA+GH,IAAME,EAAb,4JAWE,WACE,OACE,yBAAK3C,UAAU,yBACb,kBAAC,EAAD,CACEoB,MAAOlB,KAAKC,MAAMyC,MAClB5C,UAAU,cACVkB,gBAAiBhB,KAAKC,MAAMe,gBAC5BuB,MAAM,SAlBhB,GAA6BpC,aAAhBsC,EACJrC,aAAe,CACpBsC,MAAO,KACP1B,gBAAiB,M,oEClHf2B,E,kDACH,WAAY1C,GAAQ,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACTsC,iBAAiB,EACjBC,SAAU,WACVC,UAAU,EACVC,SAAU,GACVC,QAAS,GACTC,YAAa,IAGjB,EAAKlD,QAAU,EAAKA,QAAQmD,KAAb,gBACf,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAdJ,E,2CAiBrB,SAAQI,EAAMT,GACP,IAAIvC,EAAK,yBACDgD,IAAS,GAGbT,IACAvC,EAAK,2BACEA,GADF,IAEDuC,cAIR7C,KAAKe,SAAST,K,oBAGlB,SAAOgD,GACHtD,KAAKe,SAAL,yBACQuC,IAAS,M,wBAIrB,WACEtD,KAAKe,SAAS,CACZ6B,iBAAiB,M,wBAIrB,WAAc,IAAD,OACgB,KAAxB5C,KAAKM,MAAMyC,SAAiB/C,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,iBAAkBC,OAAQ,gCACtE,KAAvB3D,KAAKM,MAAM0C,SAA6C,KAA3BhD,KAAKM,MAAM2C,YAAoBjD,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,iBAAkBC,OAAQ,4CAClI3D,KAAKM,MAAM0C,UAAYhD,KAAKM,MAAM2C,YAAcjD,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,iBAAkBC,OAAQ,mDAE5HC,MCrC+B,4BDqCD,CAC5BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACC,UAAWlE,KAAKC,MAAMkE,SACtBC,aAAcpE,KAAKM,MAAMyC,SACzBsB,aAAcrE,KAAKM,MAAM0C,YAElDsB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACN,EAAKlB,MAAMC,KAAK,CAACC,SAAU,UAAWC,QAAS,gCAAiCC,OAAQY,EAAIG,UAC5F,EAAK3D,SAAS,CAAEgC,SAAU,GAAIC,QAAS,GAAIC,YAAa,MAExD,EAAKM,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,yBAA0BC,OAAQY,EAAIG,UAErF,EAAK3D,SAAS,CAAC6B,iBAAiB,OAEnC+B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAI9B,WAAU,IAAD,OACDG,EACJ,kBAAC,IAAM3D,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,SAASD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKoD,aAClF,kBAAC,SAAD,CAAQ9B,MAAM,UAAUD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKqD,cAGzF,OACE,kBAAC,IAAMjC,SAAP,KACE,kBAAC,QAAD,CAAOyB,SAAS,eAAemC,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KACnF,yBAAKrF,UAAU,kBACb,6BACE,yBACEsF,IAAKC,IACLC,MAAM,QACNC,IAAI,MAGR,4BAAQzF,UAAU,6BAA6BC,QAASC,KAAKD,SAC3D,0BAAMD,UAAU,YAAYE,KAAKC,MAAMuF,YAEzC,wBACE1F,UAAWsC,IAAW,CACpB,0BAA2BpC,KAAKM,MAAMwC,YAGxC,4BACE,4BAAQhD,UAAU,SAASC,QAAS,kBAAM,EAAKA,QAAQ,kBAAmB,UACxE,uBAAGD,UAAU,qBACb,4CAIN,kBAAC,SAAD,CAAQA,UAAU,kBAAkB2F,OAAO,kBAAkBC,QAAS1F,KAAKM,MAAMsC,gBAAiBC,SAAU7C,KAAKM,MAAMuC,SAAUmC,MAAO,CAAEM,MAAO,SAAWK,OAAQZ,EAAc5B,OAAQ,kBAAM,EAAKA,OAAO,qBACvM,yBAAKrD,UAAU,qBACZ,yBAAKkF,MAAO,CAACY,OAAQ,QAAQ,kBAAC,YAAD,CAAWC,MAAO7F,KAAKM,MAAMyC,SAAU+C,SAAU,SAAClE,GAAD,OAAO,EAAKb,SAAS,CAACgC,SAAUnB,EAAEE,OAAO+D,SAASE,YAAY,4BAC5I,yBAAKf,MAAO,CAACY,OAAQ,QAAQ,kBAAC,YAAD,CAAWC,MAAO7F,KAAKM,MAAM0C,QAAS8C,SAAU,SAAClE,GAAD,OAAO,EAAKb,SAAS,CAACiC,QAASpB,EAAEE,OAAO+D,SAASE,YAAY,wBAC1I,yBAAKf,MAAO,CAACY,OAAQ,QAAQ,kBAAC,YAAD,CAAWC,MAAO7F,KAAKM,MAAM2C,YAAa6C,SAAU,SAAClE,GAAD,OAAO,EAAKb,SAAS,CAACkC,YAAarB,EAAEE,OAAO+D,SAASE,YAAY,iC,GA9GzI5F,aA8HV6F,eAPS,SAAA1F,GACtB,MAAO,CACHkF,UAAWlF,EAAM2F,KAAKT,UACtBrB,SAAU7D,EAAM2F,KAAK9B,YAIc,KAA1B6B,CAAiCrD,G,QE/HnCuD,EAAa,SAACC,GACvB,MAAO,CACHC,KCF2B,sBDG3BP,MAAOM,IEQFE,EAAW,SAACC,GACrB,MAAO,CACHF,KDpBiB,YCqBjBE,MAAOA,IAIFC,EAAS,WAKlB,OAJAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,YACxBD,aAAaC,WAAW,QACjB,CACHL,KD9BmB,gBCyEdM,EAAkB,SAACb,GAC5B,MAAO,CACHO,KDzEyB,oBC0EzBP,MAAOA,I,QCnETc,G,wDACJ,aAAc,IAAD,8BACT,gBACKrG,MAAQ,CACTsG,SAAU,IAHL,E,qDAMb,WAAoB,IAAD,OACb5G,KAAKC,MAAM4G,SACb7G,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS1D,KAAKC,MAAM4G,QAAQnD,QAASC,OAAQ3D,KAAKC,MAAM4G,QAAQlD,SAErG3D,KAAKC,MAAM6G,iBACXlD,MJFiC,uBIEP,CACxBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAErBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACe,YAAfA,EAAIE,OACJ,EAAK1D,SAAS,CAAC6F,SAAUrC,EAAIqC,SAASG,UAAU,EAAG,MAEnD,EAAKxD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,wBAAyBC,OAAQY,EAAIG,aAGvFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,iCAG5B,SAAoBoC,GAClBhH,KAAKC,MAAMgH,WAAWD,EAAKE,YAC3BlH,KAAKC,MAAMkH,kBAAkB,CAACH,EAAKI,aAAcJ,EAAKK,aAAcL,EAAKM,UAAWN,EAAKO,eACzFvH,KAAKC,MAAMuH,gB,oBAGb,WAAU,IAAD,OAEP,OAAQ,oCACD,yBAAK1H,UAAU,UAChB,yBAAKA,UAAU,WACb,6EAEF,yBAAKA,UAAU,WACf,wBAAIkF,MAAO,CAACyC,MAAO,QAAnB,2BAAoDzH,KAAKM,MAAMsG,YAGjE,kBAAC,QAAD,CAAO5B,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KACxDnF,KAAKC,MAAMyH,QAAU,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WACtF,yBAAKxF,UAAU,4DACdE,KAAKC,MAAM2H,QAAQ3F,KAAI,SAAC+E,EAAMtG,GACT,OAAQ,kBAAC,OAAD,CAAM4B,IAAK5B,EAAOmH,MAAOb,EAAKK,aAAcS,SAAUd,EAAKa,MAAO7C,MAAO,CAAEM,MAAO,QAC9ExF,UAAU,2BAA2B6F,OAAQ,kBAAC,SAAD,CAAQX,MAAO,CAACM,MAAO,QAAShE,MAAM,OACnFvB,QAAS,kBAAM,EAAKgI,oBAAoBf,OAC1C,0BAAMhC,MAAO,CAACY,OAAQ,aAAc9F,UAAU,yCAAyCkH,EAAKI,aAAaY,MAAM,GAAG,IAClH,0BAAMlI,UAAU,yCAAyCkH,EAAKI,aAAaY,OAAO,IAClF,uBAAGlI,UAAU,QAAQkF,MAAO,CAAEiD,WAAY,cAG7EjI,KAAKC,MAAMiI,c,GAzDYC,IAAMhI,YAiFrB6F,eAlBS,SAAA1F,GACtB,MAAO,CACLsH,QAAStH,EAAM8H,QAAQR,QACvBf,QAASvG,EAAM8H,QAAQvB,QACvBqB,SAAU5H,EAAM2F,KAAKiC,SACrBR,QAASpH,EAAM8H,QAAQV,YAIA,SAAAW,GACzB,MAAO,CACLpB,WAAY,SAACqB,GAAD,OAAWD,EHhEG,SAACC,GAC3B,MAAO,CACHlC,KCjBgC,2BDkBhCkC,MAAOA,GG6DqBC,CAAuBD,KACvDnB,kBAAmB,SAACtB,GAAD,OAAWwC,EHnDK,SAACxC,GACpC,MAAO,CACHO,KC1B0C,qCD2B1CP,MAAOA,GGgD4B0C,CAAgC1C,KACvEiB,eAAgB,kBAAMuB,EAAUE,EAAmB,QACnDf,YAAa,kBAAMa,EAAS3B,EAAgB,kBAAC,IAAD,CAAUhF,GAAG,qBAI9CsE,CAAgDW,G,wBChFzD6B,G,wDACF,WAAYvI,GAAO,IAAD,8BACd,cAAMA,IACDwI,UAAY,EAAKA,UAAUvF,KAAf,gBAFH,E,qDAIlB,WAAqB,IAGb3B,EAHY,OAIhB,IAHKvB,KAAKC,MAAMyI,aAAa1I,KAAKC,MAAMiG,WAAW,CAACxC,QAAQ,eAAgBC,OAAQ,gCACpF3D,KAAKC,MAAM0I,kBAEPpH,EAAE,EAAEA,EAAEvB,KAAKC,MAAM2I,mBAAmBC,OAAOtH,IAC3C,GAAIvB,KAAKC,MAAM2I,mBAAmBrH,GAAGuH,UAAY9I,KAAKC,MAAMyI,YAAY,CACpE1I,KAAKC,MAAM8I,sBAAsBxH,GACjC,MAGJA,IAAMvB,KAAKC,MAAM2I,mBAAmBC,QAAqC,OAA3B7I,KAAKC,MAAMyI,aACzD9E,MLlBoC,sBKkBA5D,KAAKC,MAAMyI,YAAa,CACxD7E,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,GAAmB,YAAfA,EAAIE,OAAsB,CAE1B,IADA,IAAIuE,EAAI,YAAOzE,EAAIyC,MACVzF,EAAE,EAAGA,EAAEyH,EAAKH,OAAQtH,KACK,IAA1ByH,EAAKzH,GAAG0H,eAAoD,IAA7BD,EAAKzH,GAAG2H,gBAAyBF,EAAKzH,GAAG4H,QAAU,MACnD,IAA1BH,EAAKzH,GAAG0H,eAAoD,IAA7BD,EAAKzH,GAAG2H,gBAAyBF,EAAKzH,GAAG4H,QAAU,SACtFH,EAAKzH,GAAG4H,QAAU,UAE3B,EAAKlJ,MAAMmJ,sBAAsB,CAACN,QAAQ,EAAK7I,MAAMyI,YAAa1B,KAAMgC,IACxE,EAAK/I,MAAM8I,sBAAsB,EAAK9I,MAAM2I,mBAAmBC,OAAO,QAEtE,EAAKtF,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,6BAA8BC,OAAQY,EAAIG,aAG9FC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,uBAItC,WACI5E,KAAKqJ,GAAGZ,c,oBAGZ,WAAU,IAAD,OACDa,EAActJ,KAAKC,MAAM2I,mBAAmB5I,KAAKC,MAAMsJ,YAC3D,OACI,kBAAC,WAAD,KACKvJ,KAAKC,MAAM4G,QAAU,kBAAC,IAAD,CAAUnF,GAAG,MAAQ,KAC1C1B,KAAKC,MAAMyH,QAAU,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WACxF,kBAAC,WAAD,KACKgE,EACG,yBAAKxJ,UAAU,qBACf,kBAAC,QAAD,CAAOoF,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAEjC,yBAAKrF,UAAU,QACX,wBAAIkF,MAAO,CAACyC,MAAO,YAAnB,wEACA,yBAAK3H,UAAU,qBACX,kBAAC,SAAD,CAAQwB,MAAM,SAASD,KAAK,eAAevB,UAAU,gBAAgBC,QAASC,KAAKyI,aAEvF,kBAAC,YAAD,CAAWvD,IAAK,SAACC,GAAD,OAAQ,EAAKkE,GAAKlE,GAAKU,MAAOyD,EAAYtC,KAAMvB,OAAQ,4BAA4BzF,KAAKC,MAAMuJ,eAAe,GAClH,mCAAmCxJ,KAAKC,MAAMuJ,eAAe,GAAG,qBAAqBxJ,KAAKC,MAAMuJ,eAAe,GAAG,wBAAwBxJ,KAAKC,MAAMuJ,eAAe,IAC5K,kBAAC,SAAD,CAAQC,MAAM,WAAWzE,MAAO,CAACM,MAAO,SAAUG,OAAO,SAASiE,UAAQ,IAC1E,kBAAC,SAAD,CAAQD,MAAM,YAAYzE,MAAO,CAACM,MAAO,OAAQG,OAAO,OAAOiE,UAAQ,IACvE,kBAAC,SAAD,CAAQD,MAAM,eAAezE,MAAO,CAACM,MAAO,SAAUG,OAAO,aAAaiE,UAAQ,IAClF,kBAAC,SAAD,CAAQD,MAAM,kBAAkBzE,MAAO,CAACM,MAAO,SAAUG,OAAO,YAAYiE,UAAQ,IACpF,kBAAC,SAAD,CAAQD,MAAM,UAAUzE,MAAO,CAACM,MAAO,SAAUG,OAAO,UAAUiE,UAAQ,OAIlF,W,GAtEIvJ,cAiGb6F,eApBS,SAAA1F,GACpB,MAAO,CACHoI,YAAapI,EAAM8H,QAAQM,YAC3BE,mBAAoBtI,EAAM8H,QAAQQ,mBAClCW,WAAYjJ,EAAM8H,QAAQuB,8BAC1BH,eAAgBlJ,EAAM8H,QAAQwB,qBAC9BlC,QAASpH,EAAM8H,QAAQV,QACvBb,QAASvG,EAAM8H,QAAQvB,YAIJ,SAAAwB,GACvB,MAAO,CACHM,gBAAiB,kBAAMN,EAAS3B,EAAgB,QAChD0C,sBAAuB,SAACjD,GAAD,OAAYkC,EJ5DhC,CACHjC,KClCwC,mCDmCxCP,MI0D0EM,KAC1E4C,sBAAuB,SAAClD,GAAD,OAAWwC,EJ5EL,SAACxC,GAClC,MAAO,CACHO,KCrBoD,+CDsBpDP,MAAOA,GIyEoC0C,CAA8B1C,KACzEK,WAAY,SAACL,GAAD,OAAWwC,EAAUE,EAAmB1C,QAI7CG,CAAgDwC,G,gBChGzDqB,E,kDAEF,WAAY5J,GAAQ,IAAD,8BACf,gBACKK,MAAQ,CAAE0G,KAAM,MACrB,EAAKzD,MAAQ,KACb,EAAKuG,qBAAuB,EAAKA,qBAAqB5G,KAA1B,gBAC5B,EAAK6G,oBAAsB,EAAKA,oBAAoB7G,KAAzB,gBAC3B,EAAK8G,gBAAkB,EAAKA,gBAAgB9G,KAArB,gBANR,E,qDASnB,WACSlD,KAAKC,MAAMyI,YAGZ1I,KAAKe,SAAS,CAACiG,KAAMhH,KAAKC,MAAM2I,mBAAmB5I,KAAKC,MAAMsJ,YAAYvC,OAF1EhH,KAAKC,MAAMiG,WAAW,CAACxC,QAAQ,eAAgBC,OAAQ,kC,iCAM/D,SAAoBsG,EAAWhK,EAAO4F,GAClC,IAAIqE,EAAe,YAAOjK,EAAM4F,OAC5BsE,GAAS,EACb,IAAKC,YAAMC,SAASxE,IAGhB,OAFAqE,EAAgBjK,EAAMqK,UAAUrK,EAAMwJ,OAAS,OAC/CzJ,KAAKe,SAAL,yBAAoBkJ,GAAcC,IAGtC,OAAQjK,EAAMwJ,OACV,IAAK,eAAgBU,EAAUE,SAASxE,IAAS,GAAKwE,SAASxE,IAAU7F,KAAKC,MAAMuJ,eAAe,GAC/F,MACJ,IAAK,kBAAmBW,EAAUE,SAASxE,IAAS,GAAKwE,SAASxE,IAAU7F,KAAKC,MAAMuJ,eAAe,GAClG,MACJ,QAASW,GAAS,EAElBA,IACAD,EAAgBjK,EAAMqK,UAAUrK,EAAMwJ,OAASY,SAASxE,GACxD7F,KAAKe,SAAL,yBAAoBkJ,GAAcC,O,6BAI1C,SAAgBD,EAAWhK,EAAOwJ,GAAQ,IAAD,OACrC,OAAO,kBAAC,YAAD,CAAWzE,MAAO,CAACM,MAAO,OAAQc,KAAK,SAASP,MAAO5F,EAAMsK,QAAQd,GAAQ3D,SAAU,SAAClE,GAAD,OAAO,EAAK4I,oBAAoBP,EAAWhK,EAAO2B,EAAEE,OAAO+D,Y,8BAG7J,SAAiBoE,EAAWhK,GACxB,OAAOD,KAAKyK,gBAAgBR,EAAWhK,EAAO,kB,6BAGlD,SAAgBgK,EAAWhK,GACvB,OAAOD,KAAKyK,gBAAgBR,EAAWhK,EAAO,qB,kCAGlD,SAAqBO,GAAO,IAAD,OACvBA,EAAMI,iBAEN,IADA,IAAI8J,EAAa,YAAO1K,KAAKM,MAAM0G,MAC1BzF,EAAE,EAAEA,EAAEmJ,EAAc7B,OAAOtH,IACC,OAA7BmJ,EAAcnJ,GAAG4H,SACjBuB,EAAcnJ,GAAG0H,cAAgB,EACjCyB,EAAcnJ,GAAG2H,iBAAmB,GACA,WAA7BwB,EAAcnJ,GAAG4H,UACxBuB,EAAcnJ,GAAG0H,cAAgB,EACjCyB,EAAcnJ,GAAG2H,iBAAmB,GAG5CtF,MNnEwC,sBMmEJ5D,KAAKC,MAAMyI,YAAY,CACvD7E,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUjE,KAAKM,MAAM0G,QAE/B1C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACgB,YAAfA,EAAIE,QACH,EAAKxE,MAAM0K,aAAaD,GACxB,EAAKnH,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,sBAAuBC,OAAQ,gDAE3E,EAAKJ,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,oBAAqBC,OAAQY,EAAIG,aAGrFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,6BAGlC,SAAgB2F,EAAS3I,GAErB,IADA,IAAI8I,EAAa,YAAO1K,KAAKM,MAAM0G,MAC1BzF,EAAE,EAAEA,EAAEmJ,EAAc7B,OAAOtH,IAChC,GAAIgJ,EAAQpG,WAAauG,EAAcnJ,GAAG4C,SAAU,CAChDuG,EAAcnJ,GAAG4H,QAAUvH,EAAEiE,MAC7B,MAGR7F,KAAKe,SAAS,CAACiG,KAAM0D,M,iCAGzB,SAAoBH,GAAU,IAAD,OACzB,OACI,kBAAC,IAAMnJ,SAAP,KACI,kBAAC,WAAD,CAAUyE,MAAO0E,EAAQpB,QAASyB,QAAS,CAAC,KAAK,SAAS,WAAY9E,SAAU,SAAClE,GAAD,OAAO,EAAKoI,gBAAgBO,EAAQ3I,IAAIiJ,UAAQ,EAAC9E,YAAY,uB,oBAKzJ,WAAU,IAAD,OACL,OACI,yBAAKjG,UAAU,qBACX,kBAAC,QAAD,CAAOoF,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAChCnF,KAAKC,MAAM4G,QAAU,kBAAC,IAAD,CAAUnF,GAAG,MAAQ,KAC3C,yBAAK5B,UAAU,QACX,wBAAIkF,MAAO,CAACyC,MAAO,YAAnB,oEACA,yBAAKzC,MAAO,CAAC8F,QAAS,SAAUC,QAAS,OAAQC,eAAgB,aAC7D,kBAAC,SAAD,CAAQ1J,MAAM,mBAAmBvB,QAASC,KAAK8J,wBAEnD,kBAAC,YAAD,CAAWjE,MAAO7F,KAAKM,MAAM0G,KAAMiE,SAAS,OAAOnL,UAAU,uBAAuB2F,OAAQzF,KAAKC,MAAMyI,YAAc,4BAA4B1I,KAAKC,MAAMuJ,eAAe,GAC3K,mCAAmCxJ,KAAKC,MAAMuJ,eAAe,GAAG,qBAAqBxJ,KAAKC,MAAMuJ,eAAe,GAAG,wBAAwBxJ,KAAKC,MAAMuJ,eAAe,GAAK,MACrK,kBAAC,SAAD,CAAQC,MAAM,WAAWzE,MAAO,CAACM,MAAO,SAAUG,OAAO,SAASiE,UAAQ,IAC1E,kBAAC,SAAD,CAAQD,MAAM,YAAYzE,MAAO,CAACM,MAAO,SAAUG,OAAO,OAAOiE,UAAQ,IACzE,kBAAC,SAAD,CAAQD,MAAM,eAAezE,MAAO,CAACM,MAAO,SAAUG,OAAO,aAAayF,OAAQ,SAACjL,GAAD,OAAW,EAAKkL,iBAAiB,OAAQlL,MAC3H,kBAAC,SAAD,CAAQwJ,MAAM,kBAAkBzE,MAAO,CAACM,MAAO,SAAUG,OAAO,YAAYyF,OAAQ,SAACjL,GAAD,OAAW,EAAKmL,gBAAgB,OAAQnL,MAC5H,kBAAC,SAAD,CAAQwF,OAAO,UAAUT,MAAO,CAACM,MAAO,SAAUvB,KAAM/D,KAAK+J,6B,GAtHzD5J,aA+Ib6F,eAjBS,SAAA1F,GACpB,MAAO,CACHuG,QAASvG,EAAM8H,QAAQvB,QACvB+B,mBAAoBtI,EAAM8H,QAAQQ,mBAClCW,WAAYjJ,EAAM8H,QAAQuB,8BAC1BH,eAAgBlJ,EAAM8H,QAAQwB,qBAC9BlB,YAAapI,EAAM8H,QAAQM,gBAIR,SAAAL,GACvB,MAAO,CACHnC,WAAY,SAACL,GAAD,OAAWwC,EAAUE,EAAmB1C,KACpD8E,aAAc,SAAC9E,GAAD,OAAWwC,ELvGO,SAACxC,GACrC,MAAO,CACHO,KCvC2C,sCDwC3CP,MAAOA,GKoG2B0C,CAAiC1C,QAI5DG,CAAgD6D,G,QCtJzDwB,G,wDACF,WAAYpL,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTgL,eAAgB,KAChBC,cAAe,KACfC,IAAK,IANM,E,qDAUnB,WAEI,GAD+B,OAA3BxL,KAAKC,MAAMyI,aAAuB1I,KAAKC,MAAMiG,WAAW,CAACxC,QAAQ,eAAgBC,OAAQ,gCAC/D,OAA1B3D,KAAKC,MAAMsJ,WAAqB,CAGhC,IAFA,IAAIvC,EAAOhH,KAAKC,MAAM2I,mBAAmB5I,KAAKC,MAAMsJ,YAAYvC,KAC5DyE,EAAQ,CAAEC,WAAa,GAAIC,UAAY,IAClCpK,EAAI,EAAGA,EAAIyF,EAAK6B,OAAQtH,IAAK,CAClC,IAAIqK,EAAO5E,EAAKzF,GAAG0H,aACf4C,EAAO7E,EAAKzF,GAAG2H,gBACfuC,EAAMC,WAAWI,eAAeF,GAChCH,EAAMC,WAAN,UAAoBE,KAAW,EAE/BH,EAAMC,WAAN,UAAoBE,IAAU,EAE9BH,EAAME,UAAUG,eAAeD,GAC/BJ,EAAME,UAAN,UAAmBE,KAAW,EAE9BJ,EAAME,UAAN,UAAmBE,IAAU,EAGrC7L,KAAKe,SAAS,CACVuK,eAAgB,CACZS,OAAQC,OAAOC,KAAKR,EAAMC,YAC1BQ,SAAU,CACN,CACI5K,MAAO,gCACP6K,gBAAiB,UACjBnF,KAAMgF,OAAO7F,OAAOsF,EAAMC,eAItCH,cAAe,CACXQ,OAAQC,OAAOC,KAAKR,EAAME,WAC1BO,SAAU,CACN,CACI5K,MAAO,+BACP6K,gBAAiB,UACjBnF,KAAMgF,OAAO7F,OAAOsF,EAAME,cAItCH,IAAK,CAACY,KAAKZ,IAAL,MAAAY,KAAI,YAAQJ,OAAO7F,OAAOsF,EAAMC,cAAcU,KAAKZ,IAAL,MAAAY,KAAI,YAAQJ,OAAO7F,OAAOsF,EAAME,mB,uBAKhG,SAAUH,GACN,MAAO,CACHa,OAAQ,CACJN,OAAQ,CACJO,UAAW,YAGnBC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHH,UAAW,aAGnBI,MAAO,CAAC,CACJD,MAAO,CACHE,IAAK,EACLnB,IAAKA,EACLc,UAAW,iB,oBAO/B,WACI,OACI,6BACKtM,KAAKC,MAAM4G,QAAU,kBAAC,IAAD,CAAUnF,GAAG,MAAQ,KAC3C,wBAAIsD,MAAO,CAACyC,MAAO,YAAazH,KAAKC,MAAMuJ,eAAe,GAA1D,qBACA,yBAAK1J,UAAU,OAAOkF,MAAO,CAAC8F,QAAS,SACnC,kBAAC,QAAD,CAAO1E,KAAK,MAAMY,KAAMhH,KAAKM,MAAMgL,eAAgBV,QAAS5K,KAAK4M,UAAU5M,KAAKM,MAAMkL,IAAI,GAAG,MAC3F,6BACN,wBAAIxG,MAAO,CAACyC,MAAO,YAAazH,KAAKC,MAAMuJ,eAAe,GAA1D,oBACA,yBAAK1J,UAAU,OAAOkF,MAAO,CAAC8F,QAAS,SACnC,kBAAC,QAAD,CAAO1E,KAAK,MAAMY,KAAMhH,KAAKM,MAAMiL,cAAeX,QAAS5K,KAAK4M,UAAU5M,KAAKM,MAAMkL,IAAI,GAAG,W,GA1FzFrL,cAiHR6F,eAhBS,SAAA1F,GACpB,MAAO,CACHoI,YAAapI,EAAM8H,QAAQM,YAC3BE,mBAAoBtI,EAAM8H,QAAQQ,mBAClCW,WAAYjJ,EAAM8H,QAAQuB,8BAC1BH,eAAgBlJ,EAAM8H,QAAQwB,qBAC9B/C,QAASvG,EAAM8H,QAAQvB,YAIJ,SAAAwB,GACvB,MAAO,CACHnC,WAAY,SAACL,GAAD,OAAWwC,EAAUE,EAAmB1C,QAI7CG,CAA+CqF,GCpHxDwB,G,yDACF,WAAY5M,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACT0G,KAAM,IAHI,E,qDAMlB,WAAoB,IAAD,OACfpD,MAAMkJ,gCAAuC9M,KAAKC,MAAMkE,SAAU,CAC9DN,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQM,QAAQC,IAAIP,GAAK,EAAKxD,SAAS,CAACiG,KAAMzC,EAAIyC,UACvDrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAEhC,WACI,OAER,yBAAK9E,UAAU,6BACVE,KAAKM,MAAM0G,KAAK/E,KAAI,SAAC8K,EAAKrM,GACvB,OACE,yBAAK4B,IAAK5B,EAAOZ,UAAU,iBAC3B,yBAAKsF,IAAI,kCAAkCE,MAAM,OAAO0H,OAAO,OAAOzH,IAAI,KACzE,yBAAKzF,UAAU,aAAaiN,EAAIrI,kB,GAzBzByD,IAAMhI,YAyCX6F,eAPS,SAAA1F,GACtB,MAAO,CACL6D,SAAU7D,EAAM2F,KAAK9B,YAKgB,KAA1B6B,CAAkC6G,G,QCtC3CI,E,kDACF,WAAYhN,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACT0G,KAAM,GACNkG,OAAQ,IAEZ,EAAKC,WAAa,EAAKA,WAAWjK,KAAhB,gBANJ,E,qDAQlB,WAAoB,IAAD,OACfU,MAAMkJ,wBAA+B9M,KAAKC,MAAMkE,SAAU,CACtDN,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACiG,KAAMzC,EAAIyC,UACtCrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,wBAGlC,WAAa,IAAD,OACRhB,MTV2B,aSUH,CACpBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBmJ,WAAYpN,KAAKC,MAAMoN,cAAcrN,KAAKC,MAAMM,aAAa6M,WAC7DlJ,UAAYlE,KAAKC,MAAMkE,SACvB3C,QAASxB,KAAKM,MAAM4M,WAGvB5I,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKhB,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,QAASC,OAAQ,+BAC3EC,MAAMkJ,wBAA+B,EAAK7M,MAAMkE,SAAU,CACtDN,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACiG,KAAMzC,EAAIyC,UACtCrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAE7BD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAEhC,WAAS,IAAD,OACJ,OACI,6BACA,kBAAC,QAAD,CAAOM,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAC1B,yBAAKrF,UAAU,0DACZ,yBAAKA,UAAU,WACX,yBAAKsF,IAAI,kCAAkCG,IAAI,MAGnD,yBAAKzF,UAAU,kBACX,kBAAC,gBAAD,CAAeA,UAAU,mBAAmB+F,MAAO7F,KAAKM,MAAM4M,OAAQpH,SAAU,SAAClE,GAAD,OAAO,EAAKb,SAAS,CAACmM,OAAQtL,EAAEE,OAAO+D,SAAUyH,KAAM,EAAGC,KAAM,GAAKC,YAAU,KAEnK,yBAAK1N,UAAU,WACX,kBAAC,SAAD,CAAQwB,MAAM,OAAQvB,QAASC,KAAKmN,eAI3CnN,KAAKM,MAAM0G,KAAOhH,KAAKM,MAAM0G,KAAK/E,KAAI,SAAC8K,EAAKrM,GACvD,OAAQ,kBAAC,WAAD,CAAU4B,IAAK5B,GACnB,yBAAKZ,UAAU,SACT,yBAAKA,UAAU,uBACP,yBAAKsF,IAAI,kCAAkCG,IAAI,GAAGD,MAAM,SACvDyH,EAAIvH,UAAU,yBAAK1F,UAAU,cAEtC,yBAAKA,UAAU,eACViN,EAAIvL,cAIlB,U,GA1EQ2G,IAAMhI,WAwFV6F,gBARS,SAAA1F,GACtB,MAAO,CACL6D,SAAU7D,EAAM2F,KAAK9B,SACrBkJ,cAAe/M,EAAM8H,QAAQR,QAC7BrH,YAAaD,EAAM8H,QAAQuB,iCAIU,KAA1B3D,CAAkCiH,GCtF3CQ,G,uKACF,WACmC,OAA3BzN,KAAKC,MAAMyI,aAAuB1I,KAAKC,MAAMiG,WAAW,CAACxC,QAAQ,eAAgBC,OAAQ,kC,oBAEjG,WACA,OACI,kBAAC,WAAD,KACK3D,KAAKC,MAAM4G,QAAU,kBAAC,IAAD,CAAUnF,GAAG,MAAQ,KAC/C,yBAAK5B,UAAU,sBACZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,WACX,kBAAC,GAAD,OAEP,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,UAAf,SAGA,kBAAC,EAAD,c,GAjBOqI,IAAMhI,WAyCd6F,gBAbS,SAAA1F,GACpB,MAAO,CACHoI,YAAapI,EAAM8H,QAAQM,YAC3B7B,QAASvG,EAAM8H,QAAQvB,YAIJ,SAAAwB,GACvB,MAAO,CACHnC,WAAY,SAACL,GAAD,OAAWwC,EAAUE,EAAmB1C,QAI7CG,CAA+CyH,ICvCxDC,G,uKACL,WAAoB,IAAD,OACZ9J,MAAMkJ,iCAAoC9M,KAAKC,MAAMkE,SAAU,CAC3DN,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAKxE,MAAM0N,WAAWpJ,EAAIyC,MAE1B,EAAKzD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,0BAA2BC,OAAQY,EAAIG,aAG3FC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAGrC,WACC,OACC,yBAAK9E,UAAU,eACL,kBAAC,IAAD,CAAO8N,KAAK,IAAI/L,OAAK,EAACgM,UAAWlH,IACjC,kBAAC,IAAD,CAAOiH,KAAK,YAAY/L,OAAK,EAACgM,UAAWJ,KACzC,kBAAC,IAAD,CAAOG,KAAK,aAAa/L,OAAK,EAACgM,UAAWrF,IAC1C,kBAAC,IAAD,CAAOoF,KAAK,cAAc/L,OAAK,EAACgM,UAAWhE,IAC3C,kBAAC,IAAD,CAAO+D,KAAK,cAAc/L,OAAK,EAACgM,UAAWxC,S,GA1BlClL,aA6CP6F,gBAbS,SAAA1F,GACpB,MAAO,CACHwN,MAAOxN,EAAM2F,KAAK6H,MAClB3J,SAAU7D,EAAM2F,KAAK9B,aAIF,SAAAkE,GACvB,MAAO,CACHsF,WAAY,SAACxH,GAAD,OAAYkC,EVlDN,SAAClC,GACvB,MAAO,CACHC,KCI2B,sBDH3BP,MAAOM,GU+C0BoC,CAAmBpC,QAI7CH,CAA6C0H,ICjC/CxH,GAAa,SAACL,GACvB,MAAO,CACHO,KVI2B,sBUH3BP,MAAOA,ICfTkI,G,kDACJ,aAAc,IAAD,8BACT,gBACKzN,MAAQ,CACT4H,SAAU,KACVtB,SAAU,IAJL,E,qDAQb,WAAoB,IAAD,OACb5G,KAAKC,MAAM4G,SACb7G,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS1D,KAAKC,MAAM4G,QAAQnD,QAASC,OAAQ3D,KAAKC,MAAM4G,QAAQlD,SAErG3D,KAAKC,MAAM6G,iBAEXlD,MbJiC,uBaIP,CACxBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAErBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACe,YAAfA,EAAIE,OACJ,EAAK1D,SAAS,CAAC6F,SAAUrC,EAAIqC,SAASG,UAAU,EAAG,MAEnD,EAAKxD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,wBAAyBC,OAAQY,EAAIG,aAGvFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,iCAG5B,SAAoBlE,GACpBV,KAAKC,MAAMgH,WAAWvG,GACtBV,KAAKe,SAAS,CAACmH,SAAU,kBAAC,IAAD,CAAUxG,GAAG,mB,oBAGtC,WAAU,IAAD,OACP,OAAQ,oCACJ,yBAAK5B,UAAU,UACb,yBAAKA,UAAU,WACb,uFAEF,yBAAKA,UAAU,WACf,wBAAIkF,MAAO,CAACyC,MAAO,QAAnB,2BAAoDzH,KAAKM,MAAMsG,YAGjE,kBAAC,QAAD,CAAO5B,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KACxDnF,KAAKC,MAAMyH,QAAU,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WACtF,yBAAKxF,UAAU,4DACdE,KAAKC,MAAM+N,KAAK/L,KAAI,SAAC+E,EAAMtG,GACN,OAAQ,kBAAC,OAAD,CAAM4B,IAAK5B,EAAOmH,MAAO,gBAAiBC,SAAU,eAAgB9C,MAAO,CAAEM,MAAO,QAChFxF,UAAU,2BAA2B6F,OAAQ,kBAAC,SAAD,CAAQX,MAAO,CAACM,MAAO,QAAShE,MAAM,OACnFvB,QAAS,kBAAM,EAAKgI,oBAAoBrH,EAAM,OAChD,0BAAMsE,MAAO,CAACY,OAAQ,aAAc9F,UAAU,yCAAyCkH,EAAKnB,OAC5F,uBAAG/F,UAAU,QAAQkF,MAAO,CAAEiD,WAAY,cAG7EjI,KAAKM,MAAM4H,c,GAzDYC,IAAMhI,WA8ErB6F,gBAfS,SAAA1F,GACtB,MAAO,CACL0N,KAAM1N,EAAM2N,QAAQD,KACpBnH,QAASvG,EAAM2N,QAAQpH,QACvBa,QAASpH,EAAM2N,QAAQvG,YAIA,SAAAW,GACzB,MAAO,CACLpB,WAAY,SAACiH,GAAD,OAAS7F,EDlFG,SAAC6F,GACzB,MAAO,CACH9H,KVsB4B,yBUrB5BP,MAAOqI,GC+EmB3F,CAAqB2F,KACnDpH,eAAgB,kBAAMuB,EAAUE,GAAmB,WAIxCvC,CAAgD+H,IC9EzDvF,G,kDACF,WAAYvI,GAAO,IAAD,8BACd,cAAMA,IACDkO,iBAAmB,EAAKA,iBAAiBjL,KAAtB,gBACxB,EAAKkL,mBAAqB,EAAKA,mBAAmBlL,KAAxB,gBAHZ,E,qDAKlB,WAAqB,IAEb3B,EAFY,OAGhB,IAF6B,OAAzBvB,KAAKC,MAAMoO,WAAqBrO,KAAKC,MAAMiG,WAAW,CAACxC,QAAQ,eAAgBC,OAAQ,mCAEvFpC,EAAE,EAAEA,EAAEvB,KAAKC,MAAMqO,iBAAiBzF,OAAOtH,IACzC,GAAIvB,KAAKC,MAAMqO,iBAAiB/M,GAAG2M,MAAQlO,KAAKC,MAAMoO,UAAU,CAC5DrO,KAAKC,MAAMsO,kBAAkBhN,GAC7B,MAGJA,IAAMvB,KAAKC,MAAMqO,iBAAiBzF,QAAmC,OAAzB7I,KAAKC,MAAMoO,WACvDzK,MAAMkJ,iCAA2C9M,KAAKC,MAAMkE,SAAS,aAAanE,KAAKC,MAAMoO,UAAUG,WAAY,CAC/G3K,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAKxE,MAAMwO,oBAAoB,CAACP,IAAK,EAAKjO,MAAMoO,UAAWrH,KAAMzC,EAAIyC,OACrE,EAAK/G,MAAMsO,kBAAkB,EAAKtO,MAAMqO,iBAAiBzF,OAAO,IAEhE,EAAKtF,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,sCAAuCC,OAAQY,EAAIG,aAGvGC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,8BAItC,SAAiB2F,GAAS,IAAD,OACrB3G,Md/B6C,4Bc+BH,CACtCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,UAAWlE,KAAKC,MAAMkE,SACtBuK,WAAYnE,EAAQmE,eAGvBpK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKhB,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,QAASC,OAAQ,qCAC1EgB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,gCAGlC,SAAmB2F,GAAU,IAAD,OACxB,OACI,kBAAC,IAAMnJ,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,kBAAkBxB,UAAU,mCAAmCC,QAAS,kBAAM,EAAKoO,iBAAiB5D,S,oBAK9H,WAAU,IAAD,OACDjB,EAActJ,KAAKC,MAAMqO,iBAAiBtO,KAAKC,MAAM0O,UACzD,OACI,kBAAC,WAAD,KACK3O,KAAKC,MAAM4G,QAAU,kBAAC,IAAD,CAAUnF,GAAG,MAAQ,KAC1C1B,KAAKC,MAAMyH,QAAU,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WACxF,kBAAC,WAAD,KACKgE,EACG,yBAAKxJ,UAAU,qBACf,kBAAC,QAAD,CAAOoF,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAEjC,yBAAKrF,UAAU,QACX,oGACA,kBAAC,YAAD,CAAW+F,MAAOyD,EAAYtC,KAAMvB,OAAQ,8BAA8BzF,KAAKC,MAAMoO,WACjF,kBAAC,SAAD,CAAQ5E,MAAM,eAAehE,OAAO,iBACpC,kBAAC,SAAD,CAAQgE,MAAM,QAAQhE,OAAO,iBAC7B,kBAAC,SAAD,CAAQgE,MAAM,eAAehE,OAAO,eACpC,kBAAC,SAAD,CAAQgE,MAAM,kBAAkBhE,OAAO,cACvC,kBAAC,SAAD,CAAQ1B,KAAM/D,KAAKoO,wBAI3B,W,GAhFIjO,aA0Gb6F,gBAnBS,SAAA1F,GACpB,MAAO,CACH+N,UAAW/N,EAAM2N,QAAQI,UACzBlK,SAAU7D,EAAM2F,KAAK9B,SACrBmK,iBAAkBhO,EAAM2N,QAAQK,iBAChCK,SAAUrO,EAAM2N,QAAQW,4BACxBlH,QAASpH,EAAM2N,QAAQvG,QACvBb,QAASvG,EAAM2N,QAAQpH,YAIJ,SAAAwB,GACvB,MAAO,CACHoG,oBAAqB,SAACtI,GAAD,OAAYkC,EFrG9B,CACHjC,KVgBoC,iCUfpCP,MEmGsEM,KACtEoI,kBAAmB,SAAC1I,GAAD,OAAWwC,EF5EL,SAACxC,GAC9B,MAAO,CACHO,KVPkD,6CUQlDP,MAAOA,GEyEgC0C,CAA0B1C,KACjEK,WAAY,SAACL,GAAD,OAAWwC,EAAUE,GAAmB1C,QAI7CG,CAAgDwC,ICjHzDqE,I,yDACF,WAAY5M,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACT0G,KAAM,IAHI,E,qDAMlB,WAAoB,IAAD,OACfpD,MAAMkJ,gCAAuC9M,KAAKC,MAAMkE,SAAU,CAC9DN,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACiG,KAAMzC,EAAIyC,UACtCrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAEhC,WACI,OAER,yBAAK9E,UAAU,6BACVE,KAAKM,MAAM0G,KAAK/E,KAAI,SAAC8K,EAAKrM,GACvB,OACE,yBAAK4B,IAAK5B,EAAOZ,UAAU,oBAC3B,yBAAKsF,IAAI,kCAAkCE,MAAM,OAAO0H,OAAO,OAAOzH,IAAI,KACzE,yBAAKzF,UAAU,aAAaiN,EAAIrI,kB,GAzBzByD,IAAMhI,YAyCX6F,gBAPS,SAAA1F,GACtB,MAAO,CACL6D,SAAU7D,EAAM2F,KAAK9B,YAKgB,KAA1B6B,CAAkC6G,ICzC3CI,G,kDACG,WAAYhN,GAAO,IAAD,8BACnB,cAAMA,IACDK,MAAQ,CACT0G,KAAM,IAHS,E,qDAMvB,WAAoB,IAAD,OACfpD,MAAMkJ,wBAA+B9M,KAAKC,MAAMkE,SAAU,CACtDN,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACiG,KAAMzC,EAAIyC,UACtCrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAEhC,WACI,OACE,yBAAK9E,UAAU,wCACdE,KAAKM,MAAM0G,KAAK/E,KAAI,SAAC8K,EAAKrM,GAC7B,OAAQ,kBAAC,WAAD,CAAU4B,IAAK5B,GACnB,yBAAKZ,UAAU,YACT,yBAAKA,UAAU,uBACP,yBAAKsF,IAAI,kCAAkCG,IAAI,GAAGD,MAAM,SACvDyH,EAAIvH,UAAU,yBAAK1F,UAAU,YAAYiN,EAAI8B,UAEtD,yBAAK/O,UAAU,eACViN,EAAIvL,mB,GA5BV2G,IAAMhI,WA4CV6F,gBANS,SAAA1F,GACtB,MAAO,CACL6D,SAAU7D,EAAM2F,KAAK9B,YAIgB,KAA1B6B,CAAkCiH,ICpBlCQ,G,4JArBb,WACE,OACI,yBAAK3N,UAAU,uBACZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,WACX,kBAAC,GAAD,OAEP,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,UAAf,SAGA,kBAAC,GAAD,a,GAZOqI,IAAMhI,WCEvB2O,G,uKACL,WACO9O,KAAKC,MAAM8O,oBACX/O,KAAKC,MAAM+O,QAAQ,CAAC,CAACnJ,MAAO,GAAI,CAACA,MAAO,GAAI,CAACA,MAAO,GAAI,CAACA,MAAO,GAC5C,CAACA,MAAO,GAAI,CAACA,MAAO,GAAI,CAACA,MAAO,GAAI,CAACA,MAAO,O,oBAGvE,WACC,OACC,yBAAK/F,UAAU,eACL,kBAAC,IAAD,CAAO8N,KAAK,IAAI/L,OAAK,EAACgM,UAAWE,KACjC,kBAAC,IAAD,CAAOH,KAAK,aAAa/L,OAAK,EAACgM,UAAWrF,KAC1C,kBAAC,IAAD,CAAOoF,KAAK,mBAAmB/L,OAAK,EAACgM,UAAWJ,U,GAZvCtN,aAgCP6F,gBAdS,SAAA1F,GACpB,MAAO,CACHwN,MAAOxN,EAAM2F,KAAK6H,MAClB3J,SAAU7D,EAAM2F,KAAK9B,aAIF,SAAAkE,GACvB,MAAO,CACH2G,QAAS,SAAC7I,GAAD,OAAYkC,ENlBlB,CACHjC,KVUsB,mBUTtBP,MMgB8CM,KAC9C4I,kBAAmB,kBAAM1G,ENLtB,CACHjC,KVF8B,+BgBUvBJ,CAA6C8I,I,+BCtC/CG,GAA2B,SAACpJ,GACrC,MAAO,CACHO,KjBYyC,oCiBXzCP,MAAOA,IAyBFK,GAAa,SAACC,GACvB,MAAO,CACHC,KjBXyB,oBiBYzBP,MAAOM,IAWF+I,GAAc,SAACrJ,GACxB,MAAO,CACHO,KjBxB0B,qBiByB1BP,MAAOA,ICxBTsJ,I,yDAUF,WAAYlP,GAAQ,IAAD,8BACf,gBAVJmP,aAAe,CACXlL,UAAW,GACXC,SAAU,GACVqB,UAAW,GACX6J,MAAO,GACPC,SAAU,GACVC,aAAc,IAMd,EAAKjP,MAAQ,CACT4H,SAAU,KACVsH,WAAY,KACZC,eAAe,EACfC,WAAY,GACZC,qBAAqB,EACrBC,sBAAsB,EACtBxH,QAAS,EAAKgH,aACdS,iBAAkB,KAClBC,WAAW,EACXC,aAAc,MAGlB,EAAKC,oBAAsB,EAAKA,oBAAoB9M,KAAzB,gBAC3B,EAAK+M,qBAAuB,EAAKA,qBAAqB/M,KAA1B,gBAC5B,EAAKkL,mBAAqB,EAAKA,mBAAmBlL,KAAxB,gBAE1B,EAAKgN,QAAU,EAAKA,QAAQhN,KAAb,gBACf,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKiN,YAAc,EAAKA,YAAYjN,KAAjB,gBACnB,EAAKkN,YAAc,EAAKA,YAAYlN,KAAjB,gBACnB,EAAKmN,qBAAuB,EAAKA,qBAAqBnN,KAA1B,gBAC5B,EAAKoN,cAAgB,EAAKA,cAAcpN,KAAnB,gBACrB,EAAKuF,UAAY,EAAKA,UAAUvF,KAAf,gBACjB,EAAKqN,sBAAwB,EAAKA,sBAAsBrN,KAA3B,gBAC7B,EAAKsN,cAAgB,EAAKA,cAActN,KAAnB,gBACrB,EAAKuN,gBAAkB,EAAKA,gBAAgBvN,KAArB,gBACvB,EAAKwN,wBAA0B,EAAKA,wBAAwBxN,KAA7B,gBAC/B,EAAKyN,yBAA2B,EAAKA,yBAAyBzN,KAA9B,gBA/BjB,E,qDAkCnB,WAAqB,IAAD,OACZlD,KAAKC,MAAM4G,SACb7G,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS1D,KAAKC,MAAM4G,QAAQnD,QAASC,OAAQ3D,KAAKC,MAAM4G,QAAQlD,SAErG3D,KAAKC,MAAM6G,iBACXlD,MpB5DqC,aoB4DH,CAC9BC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAK1D,SAAS,CAAC2O,WAAYnL,EAAIyC,OAE/B,EAAKzD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,+BAAgCC,OAAQY,EAAIG,aAGhGC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,qBAGlC,WACI5E,KAAKe,SAAS,CACVqH,QAASpI,KAAKoP,aACdU,WAAW,EACXN,YAAY,EACZC,eAAe,M,wBAIvB,WACIzP,KAAKe,SAAS,CACV+O,WAAW,EACXL,eAAe,M,qCAIvB,WACIzP,KAAKe,SAAS,CAAE4O,qBAAqB,M,sCAGzC,WACI3P,KAAKe,SAAS,CAAE6O,sBAAsB,M,yBAG1C,WAAe,IAAD,OACNtP,EAAQ,CAAEwP,WAAW,GACzB,GAAI9P,KAAKM,MAAM8H,QAAQjE,UAAYnE,KAAKM,MAAM8H,QAAQ5C,WAAaxF,KAAKM,MAAM8H,QAAQiH,OAC/ErP,KAAKM,MAAM8H,QAAQkH,UAAYtP,KAAKM,MAAM8H,QAAQmH,aAAc,CACnE,IAUIhO,EAVAqP,EAAW,KACX/M,EAAS,KAUb,IATK7D,KAAKM,MAAMkP,YAKZ3L,EAAS,OACT+M,EAAW,oBALX/M,EAAS,QACT+M,EAAW,mBAOVrP,EAAE,EAAGA,EAAEvB,KAAKM,MAAMoP,WAAW7G,QAC1B7I,KAAKM,MAAMoP,WAAWnO,GAAGsP,YAAc7Q,KAAKM,MAAM8H,QAAQmH,aAAasB,UADtCtP,KAGzC,IAAIyH,EAAI,2BAAOhJ,KAAKM,MAAM8H,SAAlB,IAA2B0I,QAAS9Q,KAAKM,MAAMoP,WAAWnO,GAAGuP,UACrElN,MpBjIuB,qBoBiIA5D,KAAKM,MAAM8H,QAAQlE,UAAUsK,WAAY,CAC5D3K,OAAQA,EACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU+E,KAEpB1E,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACC,GACgB,YAAfA,EAAIE,OACJb,MpBrIkB,qBoBqIa,CAC3BC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAKxE,MAAMiP,YAAY3K,EAAIyC,MAE3B,EAAKzD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,4BAA6BC,OAAQY,EAAIG,aAG7FC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE9B,EAAKrB,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,wBAAyBC,OAAQY,EAAIG,aAGzFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC9B5E,KAAKuD,MAAMC,KAAK,CAAEC,SAAU,UAAWC,QAAS,aAAcC,OAAQiN,EAAUG,KAAM,MAEtFzQ,EAAK,2BACEA,GADF,IAEDkP,YAAY,EACZC,eAAe,EACfrH,QAASpI,KAAKoP,eAItBpP,KAAKe,SAAST,K,yBAGlB,SAAY8H,GACRpI,KAAKe,SAAS,CACVqH,QAAQ,eAAMA,GACdqH,eAAe,M,iCAIvB,SAAoBlF,GAChBvK,KAAKC,MAAMgH,WAAWsD,EAAQrG,WACpClE,KAAKe,SAAS,CAACmH,SAAU,kBAAC,IAAD,CAAUxG,GAAG,yB,kCAGpC,SAAqB0G,GACjBpI,KAAKe,SAAS,CACVqH,QAAQ,eAAMA,GACduH,qBAAqB,M,2BAI7B,WAAiB,IAAD,OACRqB,EAAWhR,KAAKC,MAAM+Q,SAASC,QAAO,SAAAC,GAAG,OAAIA,EAAIhN,YAAc,EAAK5D,MAAM8H,QAAQlE,aACtFN,MpB1L8B,4BoB0LJ5D,KAAKM,MAAM8H,QAAQlE,UAAUsK,WAAY,CAC/D3K,OAAQ,QACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAK1D,SAAS,CACV4O,qBAAqB,EACrBvH,QAAS,EAAKgH,eAElB,EAAKnP,MAAMiP,YAAY8B,IAEvB,EAAKzN,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,uBAAwBC,OAAQY,EAAIG,aAGxFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE9B5E,KAAKuD,MAAMC,KAAK,CAAEC,SAAU,UAAWC,QAAS,aAAcC,OAAQ,kBAAmBoN,KAAM,Q,iCAGnG,SAAoBI,GAEhB,IADA,IAAIzQ,GAAS,EACJa,EAAI,EAAGA,EAAIvB,KAAKC,MAAM+Q,SAASnI,OAAQtH,IAC5C,GAAIvB,KAAKC,MAAM+Q,SAASzP,GAAG4C,WAAagN,EAAI,CACxCzQ,EAAQa,EACR,MAIR,OAAOb,I,sBAGX,WAGI,IAFA,IAAIyQ,EAAK,GACLC,EAAQ,iEACH7P,EAAI,EAAGA,EAAI,EAAGA,IACnB4P,GAAMC,EAAMC,OAAOjF,KAAKkF,MAAMlF,KAAKmF,SAAWH,EAAMvI,SAExD,OAAOsI,I,uBAGX,WACInR,KAAKqJ,GAAGZ,c,mCAGZ,WACIzI,KAAKe,SAAS,CAAE6O,sBAAsB,M,2BAG1C,SAAchO,EAAG0B,GACb,IAAM4N,EAAOtP,EAAEE,QAAUF,EAAEE,OAAO+D,OAAU,GACxCuC,EAAO,eAAOpI,KAAKM,MAAM8H,SAC7BA,EAAQ,GAAD,OAAI9E,IAAU4N,EAErBlR,KAAKe,SAAS,CAAEqH,c,6BAGpB,SAAgBxG,GAAK5B,KAAKe,SAAS,CAACqH,QAAQ,2BAAKpI,KAAKM,MAAM8H,SAAjB,IAA0BmH,aAAc3N,EAAEiE,Y,iCAErF,WACI,OACI,kBAAC,IAAMzE,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,MAAMD,KAAK,aAAavB,UAAU,0BAA0BC,QAASC,KAAKkQ,a,kCAKpG,WACI,OACI,kBAAC,IAAM9O,SAAP,KAEI,kBAAC,SAAD,CAAQE,MAAM,SAASD,KAAK,eAAevB,UAAU,gBAAgBC,QAASC,KAAKyI,e,gCAK/F,SAAmB8B,GAAU,IAAD,OACxB,OACI,kBAAC,IAAMnJ,SAAP,KACI,kBAAC,SAAD,CAAQC,KAAK,eAAevB,UAAU,2CAA2CC,QAAS,kBAAM,EAAKqQ,YAAY7F,MACjH,kBAAC,SAAD,CAAQlJ,KAAK,kBAAkBvB,UAAU,wCAAwCC,QAAS,kBAAM,EAAKyR,oBAAoBjH,MACzH,kBAAC,SAAD,CAAQlJ,KAAK,cAAcvB,UAAU,0CAA0CC,QAAS,kBAAM,EAAKsQ,qBAAqB9F,S,oBAKpI,WAAU,IAAD,OACC9E,EACF,yBAAK3F,UAAU,gBACX,wBAAIA,UAAU,SAAd,mBACA,0BAAMA,UAAU,qBACZ,uBAAGA,UAAU,iBACb,kBAAC,YAAD,CAAWsG,KAAK,SAASqL,QAAS,SAAC7P,GAAD,OAAO,EAAKb,SAAS,CAAEgP,aAAcnO,EAAEE,OAAO+D,SAAUE,YAAY,gBAI5G2L,EACF,kBAAC,IAAMtQ,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,SAASD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKoD,aAClF,kBAAC,SAAD,CAAQ9B,MAAM,OAAOD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKmQ,eAGlFwB,EACF,kBAAC,IAAMvQ,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,KAAKD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAK0Q,0BAC9E,kBAAC,SAAD,CAAQpP,MAAM,MAAMD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKsQ,iBAIvF,OAAQ,kBAAC,WAAD,KACJ,kBAAC,QAAD,CAAOtL,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KACxDnF,KAAKC,MAAMyH,QAAW,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WACzF,yBAAKxF,UAAU,uBACf,yBAAKA,UAAU,QACX,kBAAC,WAAD,CAASA,UAAU,SAASkF,MAAO,CAAC4M,UAAW,QAASC,KAAM7R,KAAKgQ,oBAAqB8B,MAAO9R,KAAKiQ,uBACpG,kBAAC,YAAD,CAAW/K,IAAK,SAACC,GAAD,OAAQ,EAAKkE,GAAKlE,GAAIU,MAAO7F,KAAKC,MAAM+Q,SACpDe,QAAQ,KAAKC,WAAS,EAAC1E,KAAM,GAAI2E,mBAAoB,CAAC,EAAG,GAAI,IAC7DC,kBAAkB,uGAClBC,0BAA0B,uDAC1BpC,aAAc/P,KAAKM,MAAMyP,aACzBtK,OAAQA,GAER,kBAAC,SAAD,CAAQgE,MAAM,WAAWzE,MAAO,CAACM,MAAO,SAAUG,OAAO,WAAWiE,UAAQ,IAC5E,kBAAC,SAAD,CAAQD,MAAM,YAAYzE,MAAO,CAACM,MAAO,SAAUG,OAAO,YAAYiE,UAAQ,IAC9E,kBAAC,SAAD,CAAQD,MAAM,QAAQzE,MAAO,CAACM,MAAO,SAAUG,OAAO,UACtD,kBAAC,SAAD,CAAQgE,MAAM,WAAWzE,MAAO,CAACM,MAAO,SAAUG,OAAO,aACzD,kBAAC,SAAD,CAAQgE,MAAM,YAAYhE,OAAO,aAAaiE,UAAQ,IACtD,kBAAC,SAAD,CAAQ3F,KAAM/D,KAAKoO,uBAI3B,kBAAC,SAAD,CAAQ1I,QAAS1F,KAAKM,MAAMmP,cAAezK,MAAO,CAAEM,MAAO,SAAWG,OAAO,kBAAkB2M,OAAK,EAACtS,UAAU,UAAU6F,OAAQ+L,EAAqBvO,OAAQnD,KAAKoD,YAC/J,yBAAKtD,UAAU,WACX,2BAAOuS,QAAQ,YAAf,YACA,kBAAC,YAAD,CAAWlB,GAAG,WAAWtL,MAAO7F,KAAKM,MAAM8H,QAAQjE,SAAU2B,SAAU,SAAClE,GAAD,OAAO,EAAK4O,cAAc5O,EAAG,aAAaiJ,UAAQ,EAACyH,WAAS,EAACxS,UAAWsC,IAAW,CAAE,YAAapC,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQjE,aACpNnE,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQjE,UAAY,2BAAOrE,UAAU,aAAjB,0BAE7D,yBAAKA,UAAU,WACX,2BAAOuS,QAAQ,aAAf,QACA,kBAAC,YAAD,CAAWlB,GAAG,YAAYtL,MAAO7F,KAAKM,MAAM8H,QAAQ5C,UAAWM,SAAU,SAAClE,GAAD,OAAO,EAAK4O,cAAc5O,EAAG,cAAciJ,UAAQ,EAACyH,WAAS,EAACxS,UAAWsC,IAAW,CAAE,YAAapC,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQ5C,cACvNxF,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQ5C,WAAa,2BAAO1F,UAAU,aAAjB,sBAE7D,yBAAKA,UAAU,WACZ,2BAAOuS,QAAQ,SAAf,SACA,kBAAC,YAAD,CAAWlB,GAAG,QAAQtL,MAAO7F,KAAKM,MAAM8H,QAAQiH,MAAOvJ,SAAU,SAAClE,GAAD,OAAO,EAAK4O,cAAc5O,EAAG,UAAUiJ,UAAQ,EAACyH,WAAS,EAACxS,UAAWsC,IAAW,CAAE,YAAapC,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQiH,UAC3MrP,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQiH,OAAS,2BAAOvP,UAAU,aAAjB,uBAEzD,yBAAKA,UAAU,WACZ,2BAAOuS,QAAQ,YAAf,aACA,kBAAC,YAAD,CAAWlB,GAAG,WAAWtL,MAAO7F,KAAKM,MAAM8H,QAAQkH,SAAUxJ,SAAU,SAAClE,GAAD,OAAO,EAAK4O,cAAc5O,EAAG,aAAaiJ,UAAQ,EAACyH,WAAS,EAACxS,UAAWsC,IAAW,CAAE,YAAapC,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQkH,aACpNtP,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQkH,UAAY,2BAAOxP,UAAU,aAAjB,0BAE7D,6BACI,2BAAOuS,QAAQ,cAAf,cACA,kBAAC,WAAD,CAAUxM,MAAO7F,KAAKM,MAAM8H,QAAQmH,aAAc3E,QAAS5K,KAAKM,MAAMoP,WAAY5J,SAAU9F,KAAKyQ,gBAAiB8B,YAAY,YAAY1H,UAAQ,EAAC9E,YAAY,wBAC9J/F,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8H,QAAQmH,cAAgB,2BAAOzP,UAAU,aAAjB,6BAIrE,kBAAC,SAAD,CAAQ4F,QAAS1F,KAAKM,MAAMqP,oBAAqB3K,MAAO,CAAEM,MAAO,SAAWG,OAAO,UAAU2M,OAAK,EAACzM,OAAQgM,EAA2BxO,OAAQnD,KAAK0Q,yBAC/I,yBAAK5Q,UAAU,wBACX,uBAAGA,UAAU,oCAAoCkF,MAAO,CAAEwN,SAAU,UACnExS,KAAKM,MAAM8H,SAAW,iEAAsC,2BAAIpI,KAAKM,MAAM8H,QAAQ5C,WAA7D,QAIlCxF,KAAKM,MAAM4H,c,GAtVI/H,cA4WP6F,gBAhBO,SAAA1F,GACpB,MAAO,CACL0Q,SAAU1Q,EAAMmS,MAAMzB,SACtBnK,QAASvG,EAAMmS,MAAM5L,QACrBa,QAASpH,EAAMmS,MAAM/K,YAIE,SAAAW,GACzB,MAAO,CACLpB,WAAY,SAACqB,GAAD,OAAWD,EAASE,GAAiCD,KACjExB,eAAgB,kBAAMuB,EAAUE,GAAmB,QACnD2G,YAAa,SAACrJ,GAAD,OAAWwC,EAASE,GAAoB1C,QAI1CG,CAAgDmJ,ICrX3DuD,I,yDAQF,WAAYzS,GAAO,IAAD,8BACd,gBARJ0S,aAAe,CACXC,MAAO,GACPvL,aAAc,GACdwL,WAAY,GACZtD,aAAc,GACduD,SAAU,IAIV,EAAKxS,MAAQ,CACT4H,SAAU,KACV6K,eAAe,EACfjD,WAAW,EACXkD,qBAAqB,EACrBC,WAAY,CACRC,SAAU,GACVC,WAAY,GACZzE,WAAY,GACZtB,WAAY,GACZ0F,SAAU,IAEdM,QAAQ,eAAK,EAAKT,cAClBU,OAAQ,CAAC,OACTC,SAAU,CAAC,MAAM,OACjBC,SAAU,GACVC,SAAU,IAEd,EAAKC,SAAW,EAAKA,SAASvQ,KAAd,gBAChB,EAAK8M,oBAAsB,EAAKA,oBAAoB9M,KAAzB,gBAC3B,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKwQ,WAAa,EAAKA,WAAWxQ,KAAhB,gBAClB,EAAKuN,gBAAkB,EAAKA,gBAAgBvN,KAArB,gBACvB,EAAKyQ,cAAgB,EAAKA,cAAczQ,KAAnB,gBACrB,EAAK0Q,gBAAkB,EAAKA,gBAAgB1Q,KAArB,gBACvB,EAAK2Q,cAAgB,EAAKA,cAAc3Q,KAAnB,gBACrB,EAAK4Q,gBAAkB,EAAKA,gBAAgB5Q,KAArB,gBACvB,EAAKnD,QAAU,EAAKA,QAAQmD,KAAb,gBACf,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBA9BA,E,qDAiClB,WAAoB,IAAD,OACf,GAAiC,OAA7BlD,KAAKC,MAAM8T,cAA0B/T,KAAKC,MAAMiG,WAAW,CAACxC,QAAQ,eAAgBC,OAAQ,sCAC3F,CACD,IAAIpC,EACJ,IAAIA,EAAE,EAAEA,EAAEvB,KAAKC,MAAM+T,mBAAmBnL,OAAOtH,IAC3C,GAAIvB,KAAKC,MAAM+T,mBAAmBzS,GAAG4C,WAAanE,KAAKC,MAAM8T,cAAc,CACvE/T,KAAKC,MAAMgU,sBAAsB1S,GACjC,MAGJA,IAAMvB,KAAKC,MAAM+T,mBAAmBnL,QAAuC,OAA7B7I,KAAKC,MAAM8T,eACzDnQ,MAAMkJ,iCAAoC9M,KAAKC,MAAM8T,cAAe,CAChElQ,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAKxE,MAAMgU,sBAAsB,EAAKhU,MAAM+T,mBAAmBnL,QAC/D,EAAK5I,MAAMiU,wBAAwB,CAAC/P,SAAS,EAAKlE,MAAM8T,cAAe/M,KAAMzC,EAAIyC,QAEjF,EAAKzD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,0BAA2BC,OAAQY,EAAIG,aAG3FC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,S,sBAM1C,WAAW,IAAD,OACNhB,MrBpFgC,cqBoFH,CACzBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACsS,OAAQ9O,EAAIyC,UACxCrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE1BhB,MrB7F8B,gBqB6FC,CAC/BC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAI,EAAKxD,SAAS,CAACuS,SAAU/O,EAAIyC,UACzCrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE9B5E,KAAKe,SAAS,CACVqH,QAAQ,eAAKpI,KAAK2S,cAClB7C,WAAW,EACXiD,eAAe,M,iCAIvB,WACI,OACI,kBAAC,IAAM3R,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,MAAMD,KAAK,aAAavB,UAAU,0BAA0BC,QAASC,KAAKyT,c,wBAKpG,WACIzT,KAAKe,SAAS,CACV+O,WAAW,EACXiD,eAAe,M,wBAIvB,WAAc,IAAD,OACLzS,EAAQ,CAAEwP,WAAW,GACzB,GAAI9P,KAAKM,MAAM8S,QAAQP,YAAc7S,KAAKM,MAAM2S,WAAWvE,WAAY,CACnE,IAAI1H,EAAO,CAAE9C,UAAWlE,KAAKC,MAAM8T,cACvB3G,WAAYpN,KAAKM,MAAM2S,WAAW7F,WAClCsB,WAAY1O,KAAKM,MAAM2S,WAAWvE,YAC9C9K,MrBhI4B,sBqBgIC,CACzBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU+C,KAEpB1C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAKxE,MAAMkU,sBACXvQ,MAAMkJ,iCAAoC,EAAK7M,MAAM8T,cAAe,CAChElQ,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKtE,MAAMgU,sBAAsB,EAAKhU,MAAM+T,mBAAmBnL,QAC/D,EAAK5I,MAAMiU,wBAAwB,CAAC/P,SAAS,EAAKlE,MAAM8T,cAAe/M,KAAMzC,EAAIyC,OACjF,EAAKzD,MAAMC,KAAK,CAAEC,SAAU,UAAWC,QAAS,aAAcC,OAAQ,gBAAiBoN,KAAM,SAEhGpM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAE9B,EAAKrB,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,qBAAsBC,OAAQY,EAAIG,aAGtFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC9BtE,EAAK,2BACEA,GADF,IAEDyS,eAAe,EACfK,QAAQ,eAAKpT,KAAK2S,gBAI1B3S,KAAKe,SAAST,K,2BAGlB,SAAcsB,GACV,IAAIoH,EAAI,eAAOhJ,KAAK2S,cACpB3J,EAAK4J,MAAQhR,EAAEiE,MACf7F,KAAKe,SAAS,CAAEqS,QAASpK,EAAMiK,WAAW,2BAAKjT,KAAKM,MAAM2S,YAAjB,IAA6BC,SAAUtR,EAAEiE,MAAMqN,SACpFC,WAAY,GACZzE,WAAY,GACZtB,WAAY,GACZ0F,SAAU,S,6BAGlB,SAAgBlR,GAAI,IAAD,OACXoH,EAAI,eAAOhJ,KAAK2S,cACpB3J,EAAKuG,aAAe3N,EAAEiE,MACtBmD,EAAK4J,MAAQ5S,KAAKM,MAAM8S,QAAQR,MAChC5S,KAAKe,SAAS,CAAEqS,QAASpK,EAAMiK,WAAW,2BAAKjT,KAAKM,MAAM2S,YAAjB,IAA6BE,WAAYvR,EAAEiE,MAAMsN,WACtFzE,WAAY,GACZtB,WAAY,GACZ0F,SAAU,OACdlP,MAAMkJ,+BAAqC9M,KAAKM,MAAM2S,WAAWC,SAAS,eAAetR,EAAEiE,MAAMsN,WAAY,CACzGtP,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACyS,SAAUjP,EAAIyC,UAC1CrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,2BAGlC,SAAchD,GAAI,IAAD,OACToH,EAAOhJ,KAAKM,MAAM8S,QACtBpK,EAAK6J,WAAajR,EAAEiE,MACpBmD,EAAKuG,aAAevP,KAAKM,MAAM8S,QAAQ7D,aACvCvG,EAAK4J,MAAQ5S,KAAKM,MAAM8S,QAAQR,MAEhC,IAAIrR,EAAI,EACR,IAAKA,EAAE,EAAGA,EAAEvB,KAAKM,MAAM+S,OAAOxK,OAAQtH,IAClC,GAAIvB,KAAKM,MAAM2S,WAAWC,WAAalT,KAAKM,MAAM+S,OAAO9R,GAAG2R,SAAU,CAClElT,KAAKe,SAAS,CAAEqS,QAASpK,EAAMiK,WAAW,2BAAKjT,KAAKM,MAAM2S,YAAjB,IAA6B7F,WAAYxL,EAAEiE,MAAMuH,WACxE0F,SAAU9S,KAAKM,MAAM+S,OAAO9R,GAAGuR,SAAUpE,WAAY,OACvE,MAGR9K,MAAMkJ,mCAAuC9M,KAAKM,MAAM2S,WAAWE,WAAW,aAAanT,KAAKM,MAAM+S,OAAO9R,GAAGuR,SAAStE,WAAY,CACjI3K,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAACwS,SAAUhP,EAAIyC,UAC1CrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,6BAGlC,SAAgBhD,GACZ,IAAIoH,EAAOhJ,KAAKM,MAAM8S,QACtBpK,EAAK3B,aAAezF,EAAEiE,MACtB7F,KAAKe,SAAS,CAAEqS,QAASpK,EAAMiK,WAAW,2BAAKjT,KAAKM,MAAM2S,YAAjB,IAA6BvE,WAAY9M,EAAEiE,MAAM6I,iB,6BAG9F,WAAkB,IAAD,OACb9K,MrBpOgC,sBqBoOJ5D,KAAKC,MAAM+T,mBAAmBhU,KAAKC,MAAMmU,cAAcpN,KAAKhH,KAAKM,MAAM+T,UAAUnN,WAAY,CACrHrD,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAKxE,MAAMkU,sBACXvQ,MAAMkJ,iCAAoC,EAAK7M,MAAM8T,cAAe,CAChElQ,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,EAAKtE,MAAMgU,sBAAsB,EAAKhU,MAAM+T,mBAAmBnL,QAC/D,EAAK5I,MAAMiU,wBAAwB,CAAC/P,SAAS,EAAKlE,MAAM8T,cAAe/M,KAAMzC,EAAIyC,UAEpFrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAE9B,EAAKrB,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,wBAAyBC,OAAQY,EAAIG,aAGzFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,qBAGlC,SAAQtB,EAAMT,GAAW,IAAD,EAChBvC,GAAK,6BACDgD,IAAS,GADR,yBAEKT,GAFL,GAIT7C,KAAKe,SAAST,K,oBAGlB,SAAOgD,GACHtD,KAAKe,SAAL,yBACQuC,IAAS,M,uBAIrB,SAAUA,GACNtD,KAAKe,SAAL,yBACQuC,IAAS,IAEjBtD,KAAK8T,oB,0BAGT,SAAaxQ,GAAO,IAAD,OACf,OACI,6BACI,kBAAC,SAAD,CAAQhC,MAAM,KAAKD,KAAK,cAActB,QAAS,kBAAM,EAAKoD,OAAOG,IAAOxD,UAAU,kBAClF,kBAAC,SAAD,CAAQwB,MAAM,MAAMD,KAAK,cAActB,QAAS,kBAAM,EAAKuU,UAAUhR,IAAOgP,WAAS,O,oBAKjG,WAAU,IAAD,OACCiC,EACF,kBAAC,IAAMnT,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,SAASD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKoD,aAClF,kBAAC,SAAD,CAAQ9B,MAAM,MAAMD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAK0T,cAGvF,OACI,kBAAC,WAAD,KACI,kBAAC,QAAD,CAAOxO,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAChCnF,KAAKC,MAAM4G,QAAU,kBAAC,IAAD,CAAUnF,GAAG,MAAQ,KAC1C1B,KAAKC,MAAMyH,QAAU,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WAAmB,kBAAC,WAAD,KAC1GtF,KAAKC,MAAM+T,mBAAmBnL,OAAO7I,KAAKC,MAAMmU,aAAe,kBAAC,WAAD,KAC5D,kBAAC,WAAD,CAASpP,MAAO,CAAC4M,UAAW,QAAS9R,UAAU,SAAS+R,KAAM7R,KAAKgQ,sBACvE,yBAAKlQ,UAAU,4DAC2B,IAAzCE,KAAKC,MAAM+T,mBAAmBnL,OAAe,KAAO7I,KAAKC,MAAM+T,mBAAmBhU,KAAKC,MAAMmU,cAAcpN,KAAK/E,KAAI,SAAC+E,EAAMtG,GAC5G,OAAQ,kBAAC,OAAD,CAAM4B,IAAK5B,EAAOmH,MAAOb,EAAKK,aAAcS,SAAUd,EAAKa,MAAO7C,MAAO,CAAEM,MAAO,QAC9ExF,UAAU,2BAA2B6F,OAAQ,kBAAC,SAAD,CAAQX,MAAO,CAACM,MAAO,QAAShE,MAAM,SACnFvB,QAAS,kBAAM,EAAKA,QAAQ,sBAAuBW,OACrD,0BAAMsE,MAAO,CAACY,OAAQ,aAAc9F,UAAU,yCAAyCkH,EAAKI,aAAaY,MAAM,GAAG,IAClH,0BAAMlI,UAAU,yCAAyCkH,EAAKI,aAAaY,OAAO,IAClF,uBAAGlI,UAAU,QAAQkF,MAAO,CAAEiD,WAAY,cAGpE,kBAAC,SAAD,CAAQvC,QAAS1F,KAAKM,MAAMyS,cAAe/N,MAAO,CAAEM,MAAO,SAAWG,OAAO,kBAAkB2M,OAAK,EAACtS,UAAU,UAAU6F,OAAQ4O,EAAqBpR,OAAQnD,KAAKoD,YACnK,6BACI,2BAAOiP,QAAQ,SAAf,SACA,kBAAC,WAAD,CAAUxM,MAAO7F,KAAKM,MAAM8S,QAAQR,MAAOhI,QAAS5K,KAAKM,MAAM+S,OAAQvN,SAAU9F,KAAK2T,cAAepB,YAAY,aAAa1H,UAAQ,EAAC9E,YAAY,mBAClJ/F,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8S,QAAQR,OAAS,2BAAO9S,UAAU,aAAjB,uBAE1D,6BACI,2BAAOuS,QAAQ,WAAf,WACA,kBAAC,WAAD,CAAUxM,MAAO7F,KAAKM,MAAM8S,QAAQ7D,aAAc3E,QAAS5K,KAAKM,MAAMgT,SAAUxN,SAAU9F,KAAKyQ,gBAAiB8B,YAAY,eAAe1H,UAAQ,EAAC9E,YAAY,qBAC/J/F,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8S,QAAQ7D,cAAgB,2BAAOzP,UAAU,aAAjB,yBAEjE,6BACI,2BAAOuS,QAAQ,WAAf,WACA,kBAAC,WAAD,CAAUxM,MAAO7F,KAAKM,MAAM8S,QAAQP,WAAYjI,QAAS5K,KAAKM,MAAMkT,SAAU1N,SAAU9F,KAAK6T,cAAetB,YAAY,eAAe1H,UAAQ,EAAC9E,YAAY,qBAC3J/F,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8S,QAAQP,YAAc,2BAAO/S,UAAU,aAAjB,yBAE/D,6BACI,2BAAOuS,QAAQ,WAAf,WACA,kBAAC,WAAD,CAAUxM,MAAO7F,KAAKM,MAAM8S,QAAQ/L,aAAcuD,QAAS5K,KAAKM,MAAMiT,SAAUzN,SAAU9F,KAAK4T,gBAAiBrB,YAAY,QAAQ1H,UAAQ,EAAC9E,YAAY,qBACxJ/F,KAAKM,MAAMwP,YAAc9P,KAAKM,MAAM8S,QAAQ/L,cAAgB,2BAAOvH,UAAU,aAAjB,0BAGrE,kBAAC,SAAD,CAAQ2F,OAAO,eAAeC,QAAS1F,KAAKM,MAAM0S,oBAAqBZ,OAAK,EAACpN,MAAO,CAAEM,MAAO,SAAWK,OAAQ3F,KAAK+E,aAAa,uBAAwB5B,OAAQ,kBAAM,EAAKA,OAAO,yBAChL,yBAAKrD,UAAU,wBACX,uBAAGA,UAAU,oCAAoCkF,MAAO,CAAEwN,SAAU,UAChE,sEAGA,W,GA7UMrS,cAwWf6F,gBApBS,SAAA1F,GACpB,MAAO,CACHyT,cAAezT,EAAMmS,MAAM+B,sBAC3BR,mBAAoB1T,EAAMmS,MAAMgC,qBAChCL,aAAc9T,EAAMmS,MAAMiC,8BAC1BhN,QAASpH,EAAMmS,MAAM/K,QACrBb,QAASvG,EAAMmS,MAAM5L,YAIF,SAAAwB,GACvB,MAAO,CACH6L,wBAAyB,SAACrO,GAAD,OAAWwC,EFrWL,SAACxC,GACpC,MAAO,CACHO,KjBMwC,mCiBLxCP,MAAOA,GEkWsC0C,CAAgC1C,KAC7EoJ,yBAA0B,SAACpJ,GAAD,OAAWwC,EAASE,GAAiC1C,KAC/EoO,sBAAuB,SAACpO,GAAD,OAAWwC,EFhWL,SAACxC,GAClC,MAAO,CACHO,KjBAkD,6CiBClDP,MAAOA,GE6VoC0C,CAA8B1C,KACzEK,WAAY,SAACL,GAAD,OAAWwC,EAAUE,GAAmB1C,KACpDsO,oBAAqB,kBAAM9L,EFxTxB,CACHjC,KjBpCwC,yCmB+VjCJ,CAAgD0M,I,2BCvFhDiC,G,kDA/Qf,WAAY1U,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACJsU,YAAa,KACbC,WAAY,GACZnN,SAAS,EACTV,KAAM,KACN8N,UAAW,CAAC9D,SAAU,EAAG+D,SAAU,GACnCC,eAAe,EACfC,WAAY,GACZrO,SAAU,GACVsO,YAAa,IAEtB,EAAKpC,SAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7C,EAAKqC,iBAAmB,EAAKA,iBAAiBjS,KAAtB,gBACxB,EAAKkS,uBAAyB,EAAKA,uBAAuBlS,KAA5B,gBAC9B,EAAKmS,eAAiB,EAAKA,eAAenS,KAApB,gBACtB,EAAKoS,kBAAoB,EAAKA,kBAAkBpS,KAAvB,gBACzB,EAAKqS,mBAAqB,EAAKA,mBAAmBrS,KAAxB,gBAC1B,EAAKsS,YAAc,EAAKA,YAAYtS,KAAjB,gBAnBL,E,qDAsBlB,WAAoB,IAAD,OACfU,MtBpB+B,oBsBoBP,CACpBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEvBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAK1D,SAAS,CAAC+T,UAAWvQ,EAAIyC,OAE9B,EAAKzD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,qBAAsBC,OAAQY,EAAIG,aAGtFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE1BhB,MtBhCiC,uBsBgCP,CACtBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEvBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAK1D,SAAS,CAAC6F,SAAUrC,EAAIqC,SAASG,UAAU,EAAG,MAEnD,EAAKxD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,wBAAyBC,OAAQY,EAAIG,aAGzFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,8BAG9B,SAAiBhD,GACb5B,KAAKe,SAAS,CAAE6T,YAAahT,EAAEiE,U,oCAE/B,WAAyB,IAAD,OACU,KAA1B7F,KAAKM,MAAMuU,YAAgD,OAA3B7U,KAAKM,MAAMsU,aAC3C5U,KAAKe,SAAS,CAAC2G,SAAS,IACxB9D,MAAMkJ,+BAAwC9M,KAAKM,MAAMuU,WAAY,CACjEhR,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEvBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFX,MAAMkJ,iCAA2CvI,EAAIyC,KAAK9C,UAAU,aAAa,EAAK5D,MAAMsU,YAAa,CACrG/Q,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAK1D,SAAS,CAACiG,KAAMzC,EAAIyC,KAAMU,SAAS,IAExC,EAAKnE,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,+BAAgCC,OAAQY,EAAIG,aAGhGC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAEjCD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAE1B5E,KAAKuD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,gBAAiBC,OAAQ,oC,+BAI9E,WACI3D,KAAKe,SAAS,CACViU,eAAe,M,4BAIvB,SAAeS,GACXzV,KAAKe,SAAS,CACViU,cAAeS,M,gCAIvB,WAAsB,IAAD,OACbC,EAAwC,SAA7B1V,KAAKM,MAAM0U,ctBjGO,cACG,yBsBiGpCpR,MAAM8R,EAAS,CACX7R,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEgR,WAAYjV,KAAKM,MAAM2U,eAE7C3Q,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAKlB,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,mBAAoBC,OAAQ,0BAA0B,EAAKrD,MAAM0U,gBAChF,SAA7B,EAAK1U,MAAM0U,cAA2B,EAAKjU,SAAS,CAACmU,YAAa3Q,EAAI2Q,YAAaF,eAAe,IAAU,EAAKjU,SAAS,CAACiU,eAAe,MAE1I,EAAKzR,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,yBAA0BC,OAAQY,EAAIG,UACnF,EAAK3D,SAAS,CAACiU,eAAe,KAElCpR,MtBnHmB,oBsBmHK,CACpBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEvBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,EAAKxD,SAAS,CAAC+T,UAAWvQ,EAAIyC,UAC3CrC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAE7BD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,yBAGlC,SAAYiB,GAAO,IAAD,OACdjC,MtB7H6B,uBsB6HH,CACtBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAC2C,SAAUf,EAAM8P,cAAc5O,UAAU,EAAG,QAEhEzC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ,EAAK1D,SAAS,CAAC6F,SAAUf,EAAM8P,cAAc5O,UAAU,EAAG,MAC1D,EAAKxD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,mBAAoBC,OAAQ,4BAExE,EAAKJ,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,yBAA0BC,OAAQY,EAAIG,aAG1FC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAGpC,WAAU,IAQJgR,EARG,OACDC,EACF,kBAAC,IAAMzU,SAAP,KACI,kBAAC,SAAD,CAAQE,MAAM,KAAKD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKsV,oBAC9E,kBAAC,SAAD,CAAQhU,MAAM,MAAMD,KAAK,cAAcvB,UAAU,gBAAgBC,QAASC,KAAKuV,sBAYvF,OAPsC,IAAlCvV,KAAKM,MAAM4U,YAAYrM,QACvB+M,EAAY,kBAAC,eAAD,CAAa9V,UAAU,eAAegC,OAAO,QAAQgU,SAAS,cAAc9O,KAAMhH,KAAKM,MAAM4U,cACzGlV,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,2BAA4BC,OAAQ,0DAChF3D,KAAKe,SAAS,CAACmU,YAAa,MAE5BU,EAAY,KAER,kBAAC,WAAD,KACJ,kBAAC,QAAD,CAAO5Q,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KACxDyQ,EACD,yBAAK9V,UAAU,YACZ,yBAAKA,UAAU,kBACV,yBAAKA,UAAU,gCACP,yBAAKA,UAAU,qBAChB,+CAIC,6BACG,yBAAKA,UAAU,mBACjBE,KAAKM,MAAMwU,UAAU9D,WAG9B,yBAAKlR,UAAU,yCACP,yBAAKA,UAAU,qBACf,+CAIA,6BACG,yBAAKA,UAAU,mBACjBE,KAAKM,MAAMwU,UAAUC,WAG1B,yBAAKjV,UAAU,WAEnB,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,UACP,yBAAKA,UAAU,WACX,kBAAC,YAAD,CAAWsG,KAAK,OAAOd,MAAM,OAAOO,MAAO7F,KAAKM,MAAM2U,WAAYlP,YAAY,OAAOD,SAAU,SAAClE,GAAD,OAAO,EAAKb,SAAS,CAACkU,WAAYrT,EAAEE,OAAO+D,YAE9I,yBAAK/F,UAAU,WACX,kBAAC,SAAD,CAAQwB,MAAM,eAAexB,UAAU,oCAAoCC,QAAS,kBAAM,EAAKsV,eAAe,cAI1H,yBAAKvV,UAAU,uCAEX,kBAAC,SAAD,CAAQwB,MAAM,uBAAuBxB,UAAU,iCAAiCC,QAAS,kBAAM,EAAKsV,eAAe,gBAGnH,yBAAKvV,UAAU,kBACX,yBAAKA,UAAU,WAEf,kBAAC,YAAD,CAAUqR,GAAG,OAAO4E,UAAQ,EAAChQ,YAAY,gCAAgCD,SAAU,SAAClE,GAAD,OAAO,EAAK4T,YAAY5T,EAAEiE,WAEjH,uDAA6B7F,KAAKM,MAAMsG,YAGjD,yBAAK9G,UAAU,gBACX,yBAAKA,UAAU,0BACT,yBAAKA,UAAU,SACX,8CACG,yBAAKA,UAAU,gBACX,kBAAC,YAAD,CAAWwB,MAAM,iBAAiBuE,MAAO7F,KAAKM,MAAMuU,WAAY/O,SAAU,SAAClE,GAAD,OAAO,EAAKb,SAAS,CAAC8T,WAAYjT,EAAEE,OAAO+D,SAASE,YAAY,8BAGlJ,yBAAKjG,UAAU,SACd,wCACG,yBAAKA,UAAU,gBACZ,kBAAC,WAAD,CAAU+F,MAAO7F,KAAKM,MAAMsU,YAAahK,QAAS5K,KAAK8S,SAAUhN,SAAU9F,KAAKmV,iBAAkBpP,YAAY,iBAGlH,yBAAKjG,UAAU,SACX,sCACL,kBAAC,SAAD,CAAQuB,KAAK,eAAetB,QAASC,KAAKoV,6BAMvDpV,KAAKM,MAAMoH,QAAU,yBAAK1C,MAAO,CAAC2C,WAAY,SAAS,kBAAC,kBAAD,CAAiB3C,MAAO,CAACM,MAAO,WAAmB,KAC9FtF,KAAKM,MAAM0G,KACZ,yBAAKlH,UAAU,qBACf,kBAAC,QAAD,CAAOoF,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAEjC,yBAAKrF,UAAU,QACX,kBAAC,YAAD,CAAW+F,MAAO7F,KAAKM,MAAM0G,KAAMvB,OAAO,QACtC,kBAAC,SAAD,CAAQgE,MAAM,eAAehE,OAAO,iBACpC,kBAAC,SAAD,CAAQgE,MAAM,QAAQhE,OAAO,iBAC7B,kBAAC,SAAD,CAAQgE,MAAM,eAAehE,OAAO,eACpC,kBAAC,SAAD,CAAQgE,MAAM,kBAAkBhE,OAAO,iBAIxC,KACnB,kBAAC,SAAD,CAAQC,SAAsC,IAA7B1F,KAAKM,MAAM0U,cAAyBhQ,MAAO,CAAEM,MAAO,SAAWG,OAAO,UAAU2M,OAAK,EAACzM,OAAQkQ,EAAqB1S,OAAQnD,KAAKsV,mBAC7I,yBAAKxV,UAAU,wBACX,uBAAGA,UAAU,oCAAoCkF,MAAO,CAAEwN,SAAU,UACnE,kEAAuC,2BAAIxS,KAAKM,MAAM0U,eAAtD,KACD,6BAC8B,SAA7BhV,KAAKM,MAAM0U,cAA2B,2CAA6C,KACtD,YAA7BhV,KAAKM,MAAM0U,cAA8B,oCAAsC,KAChF,6BACA,gF,GAzQS7M,IAAMhI,WCJ7B6V,G,uKACL,WAAoB,IAAD,OACZpS,MvBHkC,qBuBGH,CAC3BC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,OACJ,EAAKxE,MAAMgW,cAAc1R,EAAIyC,MAE7B,EAAKzD,MAAMC,KAAK,CAACC,SAAU,QAASC,QAAS,uBAAwBC,OAAQY,EAAIG,aAGxFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,cAAeF,Q,oBAGpD,WAAS,IAAD,OACP,OACU,kBAAC,WAAD,KACA,kBAAC,QAAD,CAAOI,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KAClE,yBAAKrF,UAAU,eACL,kBAAC,IAAD,CAAO8N,KAAK,IAAI/L,OAAK,EAACgM,UAAWsB,KACjC,kBAAC,IAAD,CAAOvB,KAAK,mBAAmB/L,OAAK,EAACgM,UAAW6E,KAChD,kBAAC,IAAD,CAAO9E,KAAK,kBAAkB/L,OAAK,EAACgM,UAAW8G,W,GA1BxCxU,aA8CL6F,gBAbS,SAAA1F,GACpB,MAAO,CACHwN,MAAOxN,EAAM2F,KAAK6H,MAClB3J,SAAU7D,EAAM2F,KAAK9B,aAIF,SAAAkE,GACvB,MAAO,CACH4N,cAAe,SAAC9P,GAAD,OAAYkC,EAASE,GAAoBpC,QAIjDH,CAA6CgQ,I,iDChDtDE,G,kDACJ,WAAajW,GAAO,IAAD,8BACb,gBACKkW,gBAAkB,EAAKA,gBAAgBjT,KAArB,gBAFV,E,mDAKnB,SAAgB1C,GACdA,EAAMI,iBACN,IAAIuD,EAAWiS,SAASC,eAAe,YAAYxQ,MAC/CyQ,EAAWF,SAASC,eAAe,YAAYxQ,MACnD7F,KAAKC,MAAMsW,SAASpS,EAAUmS,K,oBAEhC,WAAU,IAAD,OAKL,OAJuB,OAArBtW,KAAKC,MAAMqG,QACbtG,KAAKuD,MAAMC,KAAK,CAACC,SAAU,OAAQC,QAAS,iBAAkBC,OAAQ3D,KAAKC,MAAMqG,QACjFtG,KAAKC,MAAMuW,SAAS,OAEZ,6BACN,kBAAC,QAAD,CAAOxR,MAAO,CAACC,OAAQ,KAAQC,IAAK,SAACC,GAAD,OAAQ,EAAK5B,MAAQ4B,KACzD,yBAAKrF,UAAU,cACnB,yBAAKA,UAAU,kBAAf,oCAGA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACX,yBAAKA,UAAU,QACX,yBACFsF,IAAKqR,KACLnR,MAAM,OAAOC,IAAI,YACjB,2CACA,0BAAMzF,UAAU,cACd,2BAAOqR,GAAG,WAAW/K,KAAK,OAAOL,YAAY,aAC7C,2BAAOoL,GAAG,WAAW/K,KAAK,WAAWL,YAAY,aACjD,4BAAQhG,QAASC,KAAKmW,iBAAtB,mB,GAjCMhO,IAAMhI,WA8DX6F,gBAhBS,SAAA1F,GACtB,MAAO,CACHoH,QAASpH,EAAM2F,KAAKyB,QACpBpB,MAAOhG,EAAM2F,KAAKK,MAClBoQ,gBAAsC,OAArBpW,EAAM2F,KAAK6H,MAC5B6I,iBAAkBrW,EAAM2F,KAAK0Q,qBAIR,SAAAtO,GACzB,MAAO,CACHkO,SAAU,SAACpS,EAAUmS,GAAX,OAAwBjO,ErBpBpB,SAAClE,EAAUmS,GAC3B,OAAO,SAAAjO,GACHA,EA3CG,CACHjC,KDLkB,eCgDlB,IAAMwQ,EAAW,CACbzS,SAAUA,EACVmS,SAAUA,GAEd1S,MHlDqB,kBGkDH,CACdC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU2S,KAEpBtS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACiB,YAAfA,EAAIE,QACJ+B,aAAaqQ,QAAQ,QAAStS,EAAIuJ,OAClCtH,aAAaqQ,QAAQ,KAAMtS,EAAIyC,KAAK8P,KAAK3S,UACzCqC,aAAaqQ,QAAQ,OAAQ,CAAC,QAAQ,UAAU,WAAWtS,EAAIyC,KAAK8P,KAAKC,OACzE1O,EAxDO,SAACyF,EAAO3J,EAAU4S,EAAMC,EAAU3H,GACzD,MAAO,CACHjJ,KDVoB,eCWpB0H,MAAOA,EACP3J,SAAUA,EACV4S,KAAMA,EACNC,SAAUA,EACV3H,MAAOA,GAiDc4H,CAAY1S,EAAIuJ,MAAOvJ,EAAIyC,KAAK8P,KAAK5S,UAAW,CAAC,QAAQ,UAAU,WAAWK,EAAIyC,KAAK8P,KAAKC,MAAOxS,EAAIyC,KAAK8P,KAAKtR,UAAWjB,EAAIyC,KAAK8P,KAAKzH,SAEnJhH,EAAShC,EAAS9B,EAAIG,aAG7BC,OAAM,SAAAC,GACHyD,EAAShC,EAASzB,QqBNe2D,CAAapE,EAAUmS,KAClEE,SAAU,SAAC3Q,GAAD,OAAWwC,EAASE,EAAiB1C,QAItCG,CAA6CkQ,IC9DtDgB,G,uKACF,WACIlX,KAAKC,MAAMkX,eACXnX,KAAKC,MAAMmX,eACXpX,KAAKC,MAAMoX,aACXrX,KAAKC,MAAMqX,a,oBAGf,WACI,OAAO,kBAAC,IAAD,CAAU5V,GAAG,U,GATPvB,aAuBN6F,eAAQ,MAVI,SAAAqC,GACvB,MAAO,CACHkP,kBAAmB,kBAAMlP,ExBNtB,CACHjC,KCJ8B,4BuBU9B+Q,aAAc,kBAAM9O,EbOjB,CACHjC,KVF8B,4BuBL9BgR,aAAc,kBAAM/O,ExBRjB,CACHjC,KCJ8B,4BuBY9BiR,WAAY,kBAAMhP,EN0Bf,CACHjC,KjB7B4B,0BuBG5BkR,SAAU,kBAAMjP,EAASE,SAIlBvC,CAAkCkR,I,iDCR3CM,G,kDAEJ,aAAe,IAAD,8BACZ,gBACKlX,MAAQ,CACXmX,WAAY,SACZC,gBAAiB,QAEjBC,oBAAoB,EACpBC,mBAAmB,EACnBC,kBAAkB,GAEvBC,KAAWC,QAAS,EACjB,EAAKC,eAAiB,EAAKA,eAAe9U,KAApB,gBACtB,EAAKhD,aAAe,EAAKA,aAAagD,KAAlB,gBACpB,EAAK+U,eAAiB,EAAKA,eAAe/U,KAApB,gBACtB,EAAKlC,gBAAkB,EAAKA,gBAAgBkC,KAArB,gBAdX,E,kDAiBd,SAAe1C,GACRR,KAAKkY,WACRlY,KAAKe,SAAS,CACZ6W,mBAAmB,EACnBC,kBAAkB,IAItB7X,KAAKkY,WAAY,I,0BAGnB,SAAa1X,GAGX,GAFAR,KAAKkY,WAAY,EAEblY,KAAKmY,YACuB,YAA1BnY,KAAKM,MAAMmX,WACbzX,KAAKe,SAAS,CACZ6W,mBAAoB5X,KAAKM,MAAMsX,oBAEE,WAA1B5X,KAAKM,MAAMmX,YACpBzX,KAAKe,SAAS,CACZ4W,oBAAqB3X,KAAKM,MAAMqX,yBAG/B,CACL,IAAME,EAAmB7X,KAAKM,MAAMuX,iBACpC7X,KAAKe,SAAS,CACZ8W,kBAAmBA,IAIvBrX,EAAMI,mB,4BAGR,SAAeJ,GACbR,KAAKkY,WAAY,I,6BAGnB,SAAgB1X,GACTA,EAAMC,KAAKS,OACdlB,KAAKe,SAAS,CACZ6W,mBAAmB,EACnBC,kBAAkB,M,wBAKxB,WAC0B,YAApB7X,KAAKC,MAAM8W,KACb/W,KAAKoY,KAAO,CACV,CACE9W,MAAO,oBACPD,KAAM,mBACNR,QAAS,WACPwX,OAAOC,SAAW,OAGtB,CACEhX,MAAO,mBACPD,KAAM,oBACNR,QAAS,WACPwX,OAAOC,SAAW,eAGtB,CACEhX,MAAO,oBACPD,KAAM,oBACNR,QAAS,WACPwX,OAAOC,SAAW,gBAGtB,CACEhX,MAAO,kBACPD,KAAM,wBACNR,QAAS,WACPwX,OAAOC,SAAW,iBAGtB,CACEhX,MAAO,mBACPD,KAAM,wBACNR,QAAS,WACPwX,OAAOC,SAAW,iBAItB,CACEhX,MAAO,UACPD,KAAM,uBACNR,QAAS,WACPwX,OAAOC,SAAW,cAIK,YAApBtY,KAAKC,MAAM8W,KACpB/W,KAAKoY,KAAO,CACV,CACE9W,MAAO,mBACPD,KAAM,oBACNR,QAAS,WACPwX,OAAOC,SAAW,sBAGtB,CACEhX,MAAO,oBACPD,KAAM,mBACNR,QAAS,WACPwX,OAAOC,SAAW,OAGtB,CACEhX,MAAO,gBACPD,KAAM,oBACNR,QAAS,WACPwX,OAAOC,SAAW,gBAGtB,CACEhX,MAAO,UACPD,KAAM,uBACNR,QAAS,WACPwX,OAAOC,SAAW,cAIK,UAApBtY,KAAKC,MAAM8W,OACpB/W,KAAKoY,KAAO,CACV,CACE9W,MAAO,aACPD,KAAM,kBACNR,QAAS,WACPwX,OAAOC,SAAW,qBAGtB,CACEhX,MAAO,kBACPD,KAAM,mBACNR,QAAS,WACPwX,OAAOC,SAAW,OAGtB,CACEhX,MAAO,mBACPD,KAAM,uBACNR,QAAS,WACPwX,OAAOC,SAAW,sBAGtB,CACEhX,MAAO,UACPD,KAAM,uBACNR,QAAS,WACPwX,OAAOC,SAAW,iB,sBAO5B,SAASC,EAASzY,GACZyY,EAAQC,UAAWD,EAAQC,UAAUC,IAAI3Y,GACxCyY,EAAQzY,WAAa,IAAMA,I,yBAGlC,SAAYyY,EAASzY,GACfyY,EAAQC,UAAWD,EAAQC,UAAUE,OAAO5Y,GAE9CyY,EAAQzY,UAAYyY,EAAQzY,UAAU6Y,QACpC,IAAIC,OACF,UAAY9Y,EAAU+Y,MAAM,KAAKC,KAAK,KAAO,UAC7C,MAEF,O,uBAIN,WACE,OAAOT,OAAOU,WAAa,O,gCAG7B,WACM/Y,KAAKM,MAAMuX,iBACb7X,KAAKyT,SAAS2C,SAASrS,KAAM,wBAC1B/D,KAAKgZ,YAAY5C,SAASrS,KAAM,0B,oBAGvC,WAAU,IAAD,OACP,GAAK/D,KAAKC,MAAMyW,gBAGX,CACH1W,KAAKiZ,aACL,IAAMC,EAAe9W,IAAW,iBAAkB,CAChD,iBAA4C,YAA1BpC,KAAKM,MAAMmX,WAC7B,gBAA2C,WAA1BzX,KAAKM,MAAMmX,WAC5B,iCACEzX,KAAKM,MAAMqX,oBAAgD,WAA1B3X,KAAKM,MAAMmX,WAC9C,gCACEzX,KAAKM,MAAMsX,mBAA+C,YAA1B5X,KAAKM,MAAMmX,WAC7C,+BAAgCzX,KAAKM,MAAMuX,mBAGvCsB,EAAmB/W,IAAW,iBAAkB,CACpD,uBAAuD,UAA/BpC,KAAKM,MAAMoX,kBAGjC0B,EAAkB,KACtB,OAAQpZ,KAAKC,MAAM8W,MACjB,IAAK,QAASqC,EAAkB,kBAAC,GAAD,MAC9B,MACF,IAAK,UAAWA,EAAkB,kBAAC,GAAD,MAChC,MACF,IAAK,UAAWA,EAAkB,kBAAC,GAAD,MAChC,MACF,QAASA,EAAkB,KAG7B,OACE,yBAAKtZ,UAAWoZ,EAAcnZ,QAASC,KAAKgY,gBAC1C,kBAAC,EAAD,CAAW9X,aAAcF,KAAKE,eAE9B,yBAAKgF,IAAK,SAACC,GAAD,OAAS,EAAKkU,QAAUlU,GAAKrF,UAAWqZ,EAAkBpZ,QAASC,KAAKiY,gBAChF,yBAAKnY,UAAU,eACb,yBAAKyF,IAAI,OAAOD,MAAM,QAAQF,IAAKkU,QAErC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAS5W,MAAO1C,KAAKoY,KAAMpX,gBAAiBhB,KAAKgB,mBAGnD,kBAAC,IAAD,CAAO4M,KAAK,UAAU/L,OAAK,EAACgM,UAAWqJ,KACtCkC,EACD,kBAAC,IAAD,CAAU1X,GAAG,MAEb,yBAAK5B,UAAU,iBA7CnB,OAAO,kBAAC,GAAD,U,GA/MKK,aA0QH6F,gBAPS,SAAA1F,GACtB,MAAO,CACHyW,KAAMzW,EAAM2F,KAAK8Q,KACjBL,gBAAsC,OAArBpW,EAAM2F,KAAK6H,SAIO,KAA1B9H,CAAkCwR,IC9R3C+B,G,wKACJ,SAAmBC,GACbxZ,KAAKC,MAAMqY,WAAakB,EAAUlB,UACpCD,OAAOoB,SAAS,EAAG,K,oBAIvB,WACE,OAAOzZ,KAAKC,MAAMyZ,a,GARIvZ,aAYXwZ,eAAWJ,I,kBCbpBK,GAAe,CACjB9L,MAAO,KACP3J,SAAU,KACV6S,SAAU,KACVD,KAAM,KACNzQ,MAAO,KACPoB,SAAS,EACTQ,SAAU,KACVmH,MAAO,MAGLwK,GAAY,SAAEvZ,EAAOwZ,GACvB,OAAO,2BAAKxZ,GAAZ,IAAmBgG,MAAO,KAAMoB,SAAS,KAGvCuP,GAAc,SAAC3W,EAAOwZ,GACxB,OAAO,2BACAxZ,GADP,IAEIwN,MAAOgM,EAAOhM,MACd3J,SAAU2V,EAAO3V,SACjB6S,SAAU8C,EAAO9C,SACjBD,KAAM+C,EAAO/C,KACb1H,MAAOyK,EAAOzK,SAIhBhJ,GAAW,SAAC/F,EAAOwZ,GACrB,OAAO,2BAAKxZ,GAAZ,IAAmBgG,MAAOwT,EAAOxT,MAAOoB,SAAS,KAG/CqS,GAAa,SAACzZ,EAAOwZ,GACvB,OAAO,eAAIF,KAGTlT,GAAkB,SAACpG,EAAOwZ,GAC5B,OAAO,2BAAKxZ,GAAZ,IAAmB4H,SAAU4R,EAAOjU,SAezBmU,GAZC,WAAqC,IAAnC1Z,EAAkC,uDAA1BsZ,GAAcE,EAAY,uCAChD,OAASA,EAAO1T,MACZ,I1B1CkB,a0B0CW,OAAOyT,GAAUvZ,GAC9C,I1B1CoB,e0B0CW,OAAO2W,GAAY3W,EAAOwZ,GACzD,I1B1CiB,Y0B0CW,OAAOzT,GAAS/F,EAAOwZ,GACnD,I1B1CmB,c0B0CW,OAAOC,KACrC,I1BzCyB,oB0ByCW,OAAOrT,GAAgBpG,EAAMwZ,GACjE,QACI,OAAOxZ,IC9CbsZ,GAAe,CACjB/S,QAAS,KACT6B,YAAa,KACbkB,qBAAsB,GACtBD,8BAA+B,KAC/B/B,QAAS,GACTgB,mBAAoB,GACpBlB,SAAS,GAGPuS,GAAoB,SAAC3Z,EAAOwZ,GAC9B,OAAO,2BAAIxZ,GAAX,IAAkBsH,QAASkS,EAAOjU,MAAO6B,SAAS,KAGhDwS,GAAoB,SAAC5Z,EAAOwZ,GAC9B,OAAO,2BAAIxZ,GAAX,IAAkBuG,QAASiT,EAAOjU,SAGhCsU,GAAiB,SAAC7Z,EAAOwZ,GAC3B,OAAO,2BAAIxZ,GAAX,IAAkBoI,YAAaoR,EAAOxR,MAAOZ,SAAS,KAGpD0S,GAA6B,SAAC9Z,EAAOwZ,GACvC,OAAO,2BAAIxZ,GAAX,IAAkBqJ,8BAA+BmQ,EAAOjU,MAAO6B,SAAS,KAGtE0B,GAAwB,SAAC9I,EAAOwZ,GAClC,OAAO,2BACAxZ,GADP,IAEIsI,mBAAmB,GAAD,mBAAMtI,EAAMsI,oBAAZ,CAAgCkR,EAAOjU,QACzD6B,SAAS,KAIX2S,GAA2B,SAAC/Z,EAAOwZ,GACrC,IAAIQ,EAAS,YAAOha,EAAMsI,oBAE1B,OADA0R,EAAUha,EAAMqJ,+BAA+B3C,KAAO8S,EAAOjU,MACtD,2BAAIvF,GAAX,IAAkBsI,mBAAoB0R,KAkB3BN,GAfC,WAAmC,IAAlC1Z,EAAiC,uDAAzBsZ,GAAcE,EAAW,uCAC9C,OAASA,EAAO1T,MACZ,I3BpC2B,sB2BoCW,OAAO6T,GAAkB3Z,EAAOwZ,GACtE,I3BpC2B,sB2BoCW,OAAOI,GAAkB5Z,EAAOwZ,GACtE,I3BhC8B,yB2BgCW,OAAO,eAAIF,IACpD,I3BxCgC,2B2BwCW,OAAOO,GAAe7Z,EAAOwZ,GACxE,I3BrCwC,mC2BqCW,OAAO1Q,GAAsB9I,EAAOwZ,GACvF,I3BrC0C,qC2BqCW,OAAO,2BAAIxZ,GAAX,IAAkBsJ,qBAAsBkQ,EAAOjU,QACpG,I3BrC2C,sC2BqCW,OAAOwU,GAAyB/Z,EAAOwZ,GAC7F,I3BzCoD,+C2ByCW,OAAOM,GAA2B9Z,EAAOwZ,GACxG,QACI,OAAOxZ,ICnDbsZ,GAAe,CACjB/S,QAAS,KACTa,SAAS,EACT2G,UAAW,KACXL,KAAM,GACNM,iBAAkB,GAClBM,4BAA6B,MAkBlBoL,GAfD,WAA+B,IAA9B1Z,EAA6B,uDAAvBsZ,GAAcE,EAAS,uCACxC,OAAQA,EAAO1T,MACX,I5Ba4B,yB4Bba,OAAO,2BAAI9F,GAAX,IAAkB+N,UAAWyL,EAAOjU,MAAO6B,SAAS,IAC7F,I5BcsB,mB4Bda,OAAO,2BAAIpH,GAAX,IAAkB0N,KAAM8L,EAAOjU,MAAO6B,SAAS,IAClF,I5BYoC,iC4BZa,OAAO,2BAAIpH,GAAX,IAAkBgO,iBAAiB,GAAD,mBAAMhO,EAAMgO,kBAAZ,CAA8BwL,EAAOjU,QAC5D6B,SAAS,IACrE,I5BY2B,sB4BZW,OAAO,2BAAIpH,GAAX,IAAkBuG,QAASiT,EAAOjU,QACxE,I5BY8B,yB4BZW,OAAO,eAAI+T,IACpD,I5BYkD,6C4BZW,OAAO,2BAAItZ,GAAX,IAAkBsO,4BAA6BkL,EAAOjU,MACvD6B,SAAS,IACrE,QACI,OAAOpH,ICpBbsZ,GAAe,CACjB/S,QAAS,KACTa,SAAS,EACT8M,sBAAuB,KACvBC,qBAAsB,GACtBC,8BAA+B,KAC/B6F,mBAAoB,GACpBvJ,SAAU,IAmBCgJ,GAhBD,WAA+B,IAA9B1Z,EAA6B,uDAAvBsZ,GAAcE,EAAS,uCACxC,OAAQA,EAAO1T,MACX,I7BEyC,oC6BFW,OAAO,2BAAI9F,GAAX,IAAkBkU,sBAAuBsF,EAAOjU,MAAO6B,SAAS,IACpH,I7BEwC,mC6BFW,OAAO,2BAAIpH,GAAX,IAAkBmU,qBAAqB,GAAD,mBAAMnU,EAAMmU,sBAAZ,CAAkCqF,EAAOjU,QAC9D6B,SAAS,IAC7E,I7BCkD,6C6BDW,OAAO,2BAAIpH,GAAX,IAAkBoU,8BAA+BoF,EAAOjU,MAAO6B,SAAS,IACrI,I7BCqC,gC6BDW,OAAO,2BAAIpH,GAAX,IAAkBia,mBAAoBT,EAAOjU,QAC7F,I7BG0B,qB6BHW,OAAO,2BAAIvF,GAAX,IAAkB0Q,SAAU8I,EAAOjU,MAAO6B,SAAS,IACxF,I7BCyB,oB6BDW,OAAO,2BAAIpH,GAAX,IAAkBuG,QAASiT,EAAOjU,QACtE,I7BEwC,mC6BFW,OAAO,2BAAIvF,GAAX,IAAkBmU,qBAAsB,KAC3F,I7BE4B,uB6BFW,OAAO,eAAImF,IAClD,QACI,OAAOtZ,ICRbka,GAAmBnC,OAAOoC,sCAAwCC,KAClEC,GAAcC,aAAgB,CAChC3U,KAAM4U,GACNzS,QAAS0S,GACT7M,QAAS8M,GACTtI,MAAOuI,KAELC,GAAQC,aAAYP,GAAaH,GAAiBW,aAAgBC,QAExEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,KAAY,kBAAC,GAAD,KACV,kBAAC,GAAD,SAGJ7E,SAASC,eAAe,U,uGC/B1BkF,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.3f3576b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport \"./AppTopbar.css\";\r\n\r\nexport class AppTopbar extends Component {\r\n  static defaultProps = {\r\n    onToggleMenu: null\r\n  };\r\n\r\n  static propTypes = {\r\n    onToggleMenu: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-topbar clearfix\">\r\n        <button\r\n          className=\"p-link layout-menu-button\"\r\n          onClick={this.props.onToggleMenu}\r\n        >\r\n          <span className=\"menubar\" />\r\n        </button>\r\n        <div className=\"pcampus\">\r\n\r\n        </div>\r\n        <div className=\"layout-heading\">\r\n          <p>\r\n            Internal Marks Management System\r\n            </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nclass AppSubmenu extends Component {\r\n  static defaultProps = {\r\n    className: null,\r\n    items: null,\r\n    onMenuItemClick: null,\r\n    root: false\r\n  };\r\n\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    items: PropTypes.array,\r\n    onMenuItemClick: PropTypes.func,\r\n    root: PropTypes.bool\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: null };\r\n  }\r\n\r\n  onMenuItemClick(event, item, index) {\r\n    //avoid processing disabled items\r\n    if (item.disabled) {\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    //execute command\r\n    if (item.command) {\r\n      item.command({ originalEvent: event, item: item });\r\n    }\r\n\r\n    if (index === this.state.activeIndex) this.setState({ activeIndex: null });\r\n    else this.setState({ activeIndex: index });\r\n\r\n    if (this.props.onMenuItemClick) {\r\n      this.props.onMenuItemClick({\r\n        originalEvent: event,\r\n        item: item\r\n      });\r\n    }\r\n  }\r\n\r\n  renderLinkContent(item) {\r\n    let submenuIcon = item.items && (\r\n      <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>\r\n    );\r\n    let badge = item.badge && (\r\n      <span className=\"menuitem-badge\">{item.badge}</span>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <i className={item.icon}></i>\r\n        <span>{item.label}</span>\r\n        {submenuIcon}\r\n        {badge}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderLink(item, i) {\r\n    let content = this.renderLinkContent(item);\r\n\r\n    if (item.to) {\r\n      return (\r\n        <NavLink\r\n          activeClassName=\"active-route\"\r\n          to={item.to}\r\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\r\n          exact\r\n          target={item.target}\r\n        >\r\n          {content}\r\n        </NavLink>\r\n      );\r\n    } else {\r\n      return (\r\n        <a\r\n          href={item.url}\r\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\r\n          target={item.target}\r\n        >\r\n          {content}\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items =\r\n      this.props.items &&\r\n      this.props.items.map((item, i) => {\r\n        let active = this.state.activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {\r\n          \"active-menuitem\": active && !item.to\r\n        });\r\n\r\n        return (\r\n          <li className={styleClass} key={i}>\r\n            {item.items && this.props.root === true && (\r\n              <div className=\"arrow\"></div>\r\n            )}\r\n            {this.renderLink(item, i)}\r\n            <AppSubmenu\r\n              items={item.items}\r\n              onMenuItemClick={this.props.onMenuItemClick}\r\n            />\r\n          </li>\r\n        );\r\n      });\r\n\r\n    return items ? <ul className={this.props.className}>{items}</ul> : null;\r\n  }\r\n}\r\n\r\nexport class AppMenu extends Component {\r\n  static defaultProps = {\r\n    model: null,\r\n    onMenuItemClick: null\r\n  };\r\n\r\n  static propTypes = {\r\n    model: PropTypes.array,\r\n    onMenuItemClick: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-menu-container\">\r\n        <AppSubmenu\r\n          items={this.props.model}\r\n          className=\"layout-menu\"\r\n          onMenuItemClick={this.props.onMenuItemClick}\r\n          root={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport classNames from \"classnames\";\r\nimport profile1 from \"./../src/images/Profile-6.jpg\";\r\nimport { Button} from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport * as uris from './store/uris';\r\n\r\nclass AppProfile extends Component {\r\n   constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayPosition: false,\r\n            position: \"top-left\",\r\n            expanded: true,\r\n            currPass: '',\r\n            newPass: '',\r\n            confirmPass: ''\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.changePass = this.changePass.bind(this);\r\n    }\r\n\r\n onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true\r\n        };\r\n\r\n        if (position) {\r\n            state = {\r\n                ...state,\r\n                position\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    onHide(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n      this.setState({\r\n        displayPosition: false\r\n      });\r\n    }\r\n\r\n    changePass() {\r\n      if(this.state.currPass === '') this.toast.show({severity: 'info', summary: 'Cannot Proceed', detail: 'Must enter the old Password'});\r\n      else if(this.state.newPass === '' || this.state.confirmPass === '') this.toast.show({severity: 'info', summary: 'Cannot Proceed', detail: 'Must enter both new and Retype password'});\r\n      else if(this.state.newPass !== this.state.confirmPass)  this.toast.show({severity: 'info', summary: 'Cannot Proceed', detail: \"New Password and Retype Password doesn't match\"});\r\n      else {\r\n        fetch(uris.CHANGE_PASSWORD  , {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({person_id: this.props.username,\r\n                                old_password: this.state.currPass,\r\n                                new_password: this.state.newPass})\r\n        })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          if (res.status === 'success') {\r\n            this.toast.show({severity: 'success', summary: 'Password Successfully Updated', detail: res.message});\r\n            this.setState({ currPass: '', newPass: '', confirmPass: ''})\r\n          } else {\r\n            this.toast.show({severity: 'error', summary: 'Password Change Failed', detail: res.message});\r\n          }\r\n          this.setState({displayPosition: false})\r\n      })\r\n      .catch(err => console.log(err))\r\n      }\r\n    }\r\n\r\n  render() {\r\n    const renderFooter = (\r\n      <React.Fragment>\r\n          <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n          <Button label=\"Confirm\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.changePass} />\r\n      </React.Fragment>\r\n  );\r\n    return (\r\n      <React.Fragment>        \r\n        <Toast position=\"bottom-right\" style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n      <div className=\"layout-profile\">\r\n        <div>\r\n          <img\r\n            src={profile1}\r\n            width=\"100px\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <button className=\"p-link layout-profile-link\" onClick={this.onClick}>\r\n          <span className=\"username\">{this.props.full_name}</span>\r\n        </button>\r\n        <ul\r\n          className={classNames({\r\n            \"layout-profile-expanded\": this.state.expanded\r\n          })}\r\n        >\r\n          <li>\r\n            <button className=\"p-link\" onClick={() => this.onClick('displayPosition', 'left')} >\r\n              <i className=\"pi pi-fw pi-user\" />\r\n              <span>Account</span>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <Dialog className=\"accounttextleft\" header=\"Change Password\" visible={this.state.displayPosition} position={this.state.position} style={{ width: '300px' }} footer={renderFooter} onHide={() => this.onHide('displayPosition')}>\r\n             <div className=\"p-grid  p-dir-col\">\r\n                <div style={{margin: '5px'}}><InputText value={this.state.currPass} onChange={(e) => this.setState({currPass: e.target.value})} placeholder=\"Input Current Password\" /></div>\r\n                <div style={{margin: '5px'}}><InputText value={this.state.newPass} onChange={(e) => this.setState({newPass: e.target.value})} placeholder=\"Input New Password\" /></div>\r\n                <div style={{margin: '5px'}}><InputText value={this.state.confirmPass} onChange={(e) => this.setState({confirmPass: e.target.value})} placeholder=\"Retype New Password\" /></div>                  \r\n              </div>\r\n          </Dialog>\r\n          </div>\r\n          </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      full_name: state.auth.full_name,\r\n      username: state.auth.username,\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )(AppProfile);\r\n","\r\nconst baseURI = '';\r\nexport const LOGIN = baseURI+'/api/user/login';\r\nexport const ADD_TEACHER = baseURI+\"/api/user/teacher/\";\r\nexport const FETCH_BATCH_LIST = baseURI+'/api/batch/';\r\nexport const FETCH_PROGRAM_LIST = baseURI+'/api/program/';\r\nexport const FETCH_SECTION_LIST = baseURI+'/api/class/section';\r\nexport const FETCH_SUBJECT_LIST = baseURI+'/api/program/subject';\r\nexport const FETCH_CLASS_LIST = baseURI+'/api/class/lecture/';\r\nexport const FETCH_TEACHER_LIST = baseURI+'/api/user/teacher/';\r\nexport const DELETE_TEACHER = baseURI+'/api/user/teacher/delete/';\r\nexport const FETCH_CLASS_STUDENT_LIST = baseURI+'/api/marks/lecture/';\r\nexport const FETCH_DEPARTMENT_LIST = baseURI+'/api/dept/';\r\nexport const FETCH_STUDENT_SEM_MARKS = baseURI+'/api/marks/student/';\r\nexport const FETCH_STUDENT_DETAILS = baseURI+'/api/user/student/';\r\nexport const REQUEST_STUDENT_MARKS_RECHECK = baseURI+'/api/notification/report/';\r\nexport const FETCH_NOTIFICATIONS = baseURI+'/api/notification/';\r\nexport const FETCH_POSTS = baseURI+'/api/post/';\r\nexport const SUBMIT_POST = baseURI+'/api/post/';\r\nexport const FETCH_STATS = baseURI+'/api/batch/stats/';\r\nexport const POST_YEAR_REFRESH = baseURI+'/api/batch/';\r\nexport const POST_SESSION_REFRESH = baseURI+'/api/batch/newSession/';\r\nexport const POST_DEADLINE = baseURI+'/api/marks/deadline/';\r\nexport const CHANGE_PASSWORD = baseURI+'/api/user/changePassword/';\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setClasses = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASSES,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setInfoBox = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_INFOBOX,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const resetTeacherState = () => {\r\n    return {\r\n        type: actionTypes.RESET_TEACHER_DEFAULTS\r\n    }\r\n};\r\n\r\nexport const setActiveClass = (Class) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS,\r\n        Class: Class\r\n    }\r\n};\r\n\r\nexport const setActiveStudentIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setActiveSectionSubject = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_SECTION_SUBJECT,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const updateClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\n\r\nexport const SET_TEACHER_ACTIVE_CLASS = 'SET_TEACHER_ACTIVE_CLASS';\r\nexport const SET_TEACHER_CLASSES = 'SET_TEACHER_CLASSES';\r\nexport const SET_TEACHER_INFOBOX = 'SET_TEACHER_INFOBOX';\r\nexport const SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX = 'SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX';\r\nexport const SET_TEACHER_CLASS_STUDENT_VALUES = 'SET_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const SET_TEACHER_ACTIVE_SECTION_SUBJECT = 'SET_TEACHER_ACTIVE_SECTION_SUBJECT';\r\nexport const UPDATE_TEACHER_CLASS_STUDENT_VALUES = 'UPDATE_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const RESET_TEACHER_DEFAULTS = 'RESET_TEACHER_DEFAULTS';\r\n\r\nexport const SET_ADMIN_ACTIVE_TEACHER_USERNAME = 'SET_ADMIN_ACTIVE_TEACHER_USERNAME';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASSES = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX';\r\nexport const SET_ADMIN_TEACHER_DEPARTMENTS = 'SET_ADMIN_TEACHER_DEPARTMENTS';\r\nexport const SET_ADMIN_TEACHER_CLASS_VALUES = 'SET_ADMIN_TEACHER_CLASS_VALUES';\r\nexport const SET_ADMIN_INFOBOX = 'SET_ADMIN_INFOBOX';\r\nexport const SET_ADMIN_TEACHERS = 'SET_ADMIN_TEACHERS';\r\nexport const RESET_ADMIN_TEACHER_CLASS_VALUES = 'RESET_ADMIN_TEACHER_CLASS_VALUES';\r\nexport const RESET_ADMIN_DEFAULTS = 'RESET_ADMIN_DEFAULTS';\r\n\r\nexport const SET_STUDENT_ACTIVE_SEM='SET_STUDENT_ACTIVE_SEM';\r\nexport const SET_STUDENT_SEM_SUBJECT_VALUES='SET_STUDENT_SEM_SUBJECT_VALUES';\r\nexport const SET_STUDENT_SEMS='SET_STUDENT_SEMS';\r\nexport const SET_STUDENT_INFOBOX = 'SET_STUDENT_INFOBOX';\r\nexport const RESET_STUDENT_DEFAULTS = 'RESET_STUDENT_DEFAULTS';\r\nexport const SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX = 'SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX';\r\n","import * as actionTypes from './actionTypes';\r\nimport * as uris from '../uris';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, username, role, fullname, email) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username,\r\n        role: role,\r\n        fullname: fullname,\r\n        email: email\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('role');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n        fetch(uris.LOGIN, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(authData)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success'){\r\n                    localStorage.setItem('token', res.token);\r\n                    localStorage.setItem('id', res.data.user.username);\r\n                    localStorage.setItem('role', ['admin','teacher','student'][res.data.user.role]);\r\n                    dispatch(authSuccess(res.token, res.data.user.person_id, ['admin','teacher','student'][res.data.user.role], res.data.user.full_name, res.data.user.email));\r\n                } else {\r\n                    dispatch(authFail(res.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err));\r\n        });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirect = (value) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        value: value\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport \"primeflex/primeflex.css\";\r\n\r\nclass MainDashTeacher extends React.Component {\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          deadline: ''\r\n      }\r\n    }\r\n  componentDidMount(){\r\n    if (this.props.infoBox) {\r\n      this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n    }\r\n    this.props.setInfoBoxNULL();\r\n    fetch(uris.POST_DEADLINE, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.status === 'success') {\r\n          this.setState({deadline: res.deadline.substring(0, 10)});\r\n      } else {\r\n          this.toast.show({severity: 'error', summary: 'Deadline Fetch Failed', detail: res.message});\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  onCardSelectHandler(data){\r\n    this.props.selectCard(data.lecture_id);\r\n    this.props.setSectionSubject([data.section_code, data.subject_code, data.theory_fm, data.practical_fm]);\r\n    this.props.setRedirect();\r\n  }\r\n\r\n  render() {\r\n      // ]\r\n    return (<>\r\n           <div className='p-grid'>\r\n          <div className='p-col-9'>\r\n            <h3>Choose your subject and see Student details.</h3>\r\n          </div>\r\n          <div className='p-col-3'>\r\n          <h3 style={{color: 'red'}}>Marks Submission Till : {this.state.deadline}</h3>\r\n          </div>\r\n        </div>\r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : \r\n          <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n          {this.props.classes.map((data, index) => {\r\n                                return (<Card key={index} title={data.subject_code} subTitle={data.title} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"View\"\r\n                                            onClick={() => this.onCardSelectHandler(data)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(0,-2)}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(-2,)}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n        </div>}\r\n      {this.props.redirect}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.teacher.classes,\r\n    infoBox: state.teacher.infoBox,\r\n    redirect: state.auth.redirect,\r\n    loading: state.teacher.loading    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectCard: (Class) => dispatch(actions.setActiveClass(Class)),\r\n    setSectionSubject: (value) => dispatch(actions.setActiveSectionSubject(value)),\r\n    setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n    setRedirect: () => dispatch(setAuthRedirect(<Redirect to='/marksview'/>))\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( MainDashTeacher );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport './DataTable.css';\r\n\r\nclass DataTableView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (!this.props.activeClass) this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        this.props.setRedirectNULL();\r\n        let i;\r\n        for(i=0;i<this.props.classStudentValues.length;i++){\r\n            if (this.props.classStudentValues[i].classId === this.props.activeClass){\r\n                this.props.setActiveStudentIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        if (i === this.props.classStudentValues.length && this.props.activeClass !== null){\r\n            fetch(uris.FETCH_CLASS_STUDENT_LIST+this.props.activeClass, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        let temp = [...res.data];\r\n                        for (let i=0; i<temp.length; i++){\r\n                            if (temp[i].theory_marks === -2 || temp[i].practical_marks === -2 ) temp[i].remarks = 'NQ';\r\n                            else if (temp[i].theory_marks === -1 || temp[i].practical_marks === -1 ) temp[i].remarks = 'Absent';\r\n                            else temp[i].remarks = 'Regular';\r\n                        }\r\n                        this.props.setClassStudentValues({classId:this.props.activeClass, data: temp});\r\n                        this.props.setActiveStudentIndex(this.props.classStudentValues.length-1);\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Section Marks Fetch Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        return (\r\n            <Fragment>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n                <Fragment>\r\n                    {recordDatas ? (\r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <h3 style={{color: '#B22222'}}>Marks Summary View : Assessment and Practical Marks are NOT Editable</h3>\r\n                            <div className=\"p-col p-offset-11\">\r\n                                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n                            </div>\r\n                            <DataTable ref={(el) => this.dt = el}  value={recordDatas.data} header={\"Student Data for Section \"+this.props.sectionSubject[0]+\r\n                                        \" of Subject with Subject Code : \"+this.props.sectionSubject[1]+\" ------ TheoryFM: \"+this.props.sectionSubject[2]+' ------ PracticalFM: '+this.props.sectionSubject[3]}>\r\n                                <Column field=\"username\" style={{width: '150px'}} header=\"RollNo\" sortable></Column>\r\n                                <Column field=\"full_name\" style={{width: '350'}} header=\"Name\" sortable></Column>\r\n                                <Column field=\"theory_marks\" style={{width: '150px'}} header=\"Assessment\" sortable></Column>\r\n                                <Column field=\"practical_marks\" style={{width: '150px'}} header=\"Practical\" sortable></Column>\r\n                                <Column field=\"remarks\" style={{width: '150px'}} header=\"Remarks\" sortable></Column>\r\n                            </DataTable>\r\n                        </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        loading: state.teacher.loading,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setRedirectNULL: () => dispatch(setAuthRedirect(null)),\r\n        setClassStudentValues: (values) => dispatch(actions.setClassStudentValues(values)),\r\n        setActiveStudentIndex: (value) => dispatch(actions.setActiveStudentIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableView );\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Toast } from 'primereact/toast';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport { Button } from 'primereact/button';\r\nimport './DataTable.css';\r\nimport * as uris from '../../store/uris';\r\nimport { isInt } from '@fullcalendar/core';\r\n\r\nclass DataTableEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = { data: null}\r\n        this.toast = null;\r\n        this.onMarksSubmitHandler = this.onMarksSubmitHandler.bind(this);\r\n        this.remarksBodyTemplate = this.remarksBodyTemplate.bind(this);\r\n        this.onRemarksChange = this.onRemarksChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!this.props.activeClass) {\r\n            this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        } else {\r\n            this.setState({data: this.props.classStudentValues[this.props.classIndex].data});\r\n        }        \r\n    }\r\n\r\n    onEditorValueChange(stateItem, props, value) {\r\n        let updatedProducts = [...props.value];\r\n        let update = false;\r\n        if (!isInt(parseInt(value))){\r\n            updatedProducts[props.rowIndex][props.field] = 0;\r\n            this.setState({ [`${stateItem}`]: updatedProducts });\r\n            return\r\n        }\r\n        switch (props.field){\r\n            case \"theory_marks\": update = (parseInt(value) >=0 && parseInt(value) <= this.props.sectionSubject[2]);\r\n                break;\r\n            case \"practical_marks\": update = (parseInt(value) >=0 && parseInt(value) <= this.props.sectionSubject[3]);\r\n                break;\r\n            default: update = false;\r\n        }\r\n        if (update) {\r\n            updatedProducts[props.rowIndex][props.field] = parseInt(value);\r\n            this.setState({ [`${stateItem}`]: updatedProducts })\r\n        }\r\n    }\r\n\r\n    inputTextEditor(stateItem, props, field) {\r\n        return <InputText style={{width: \"5em\"}} type=\"number\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(stateItem, props, e.target.value)} />;\r\n    }\r\n\r\n    AssessmentEditor(stateItem, props) {\r\n        return this.inputTextEditor(stateItem, props, 'theory_marks');\r\n    }\r\n\r\n    PracticalEditor(stateItem, props) {\r\n        return this.inputTextEditor(stateItem, props, 'practical_marks');\r\n    }\r\n\r\n    onMarksSubmitHandler(event){\r\n        event.preventDefault();\r\n        let currClassVals = [...this.state.data];\r\n        for (let i=0;i<currClassVals.length;i++){\r\n            if (currClassVals[i].remarks === 'NQ') {\r\n                currClassVals[i].theory_marks = -2;\r\n                currClassVals[i].practical_marks = -2;\r\n            } else if (currClassVals[i].remarks === 'Absent') {\r\n                currClassVals[i].theory_marks = -1;\r\n                currClassVals[i].practical_marks = -1;\r\n            }\r\n        }\r\n        fetch(uris.FETCH_CLASS_STUDENT_LIST+this.props.activeClass,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.status === 'success'){\r\n                    this.props.updateValues(currClassVals);\r\n                    this.toast.show({severity: 'info', summary: 'Submission Succeded', detail: 'The Marks has been Successfully Updated!!!'});\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Submission Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onRemarksChange(rowData, e) {\r\n        let currClassVals = [...this.state.data];\r\n        for (let i=0;i<currClassVals.length;i++){\r\n            if (rowData.username === currClassVals[i].username) {\r\n                currClassVals[i].remarks = e.value;\r\n                break;\r\n            }\r\n        }\r\n        this.setState({data: currClassVals});\r\n    }\r\n\r\n    remarksBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Dropdown value={rowData.remarks} options={['NQ','Absent','Regular']} onChange={(e) => this.onRemarksChange(rowData,e)} required placeholder=\"Select a Remark\"/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"datatable-editing\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                <div className=\"card\">\r\n                    <h3 style={{color: '#228B22'}}>Marks Editing View : Assessment and Practical Marks are Editable</h3>\r\n                    <div style={{padding: \"10px 0\", display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                        <Button label=\"Confirm & Submit\" onClick={this.onMarksSubmitHandler}/>\r\n                    </div>\r\n                    <DataTable value={this.state.data} editMode=\"cell\" className=\"editable-cells-table\" header={this.props.activeClass ? \"Student Data for Section \"+this.props.sectionSubject[0]+\r\n                    \" of Subject with Subject Code : \"+this.props.sectionSubject[1]+\" ------ TheoryFM: \"+this.props.sectionSubject[2]+' ------ PracticalFM: '+this.props.sectionSubject[3] : null}>\r\n                        <Column field=\"username\" style={{width: '150px'}} header=\"RollNo\" sortable></Column>\r\n                        <Column field=\"full_name\" style={{width: '350px'}} header=\"Name\" sortable></Column>\r\n                        <Column field=\"theory_marks\" style={{width: '150px'}} header=\"Assessment\" editor={(props) => this.AssessmentEditor('data', props)}></Column>\r\n                        <Column field=\"practical_marks\" style={{width: '150px'}} header=\"Practical\" editor={(props) => this.PracticalEditor('data', props)}></Column>                        \r\n                        <Column header=\"Remarks\" style={{width: '150px'}} body={this.remarksBodyTemplate}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        infoBox: state.teacher.infoBox,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        activeClass: state.teacher.activeClass,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) ),\r\n        updateValues: (value) => dispatch(actions.updateClassStudentValues(value)),\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableEdit );\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport '../../App.css';\r\n\r\nclass BarChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            assessmentData: null,\r\n            practicalData: null,\r\n            max: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.activeClass === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        if (this.props.classIndex !== null) {\r\n            let data = this.props.classStudentValues[this.props.classIndex].data\r\n            let count = { assessment : [], practical : []}\r\n            for (let i = 0; i < data.length; i++) {\r\n                let aval = data[i].theory_marks\r\n                let pval = data[i].practical_marks\r\n                if (count.assessment.hasOwnProperty(aval)){\r\n                    count.assessment[`${aval}`] += 1\r\n                } else {\r\n                    count.assessment[`${aval}`] = 1\r\n                }\r\n                if (count.practical.hasOwnProperty(pval)){\r\n                    count.practical[`${pval}`] += 1\r\n                } else {\r\n                    count.practical[`${pval}`] = 1\r\n                }\r\n            }\r\n            this.setState({\r\n                assessmentData: {\r\n                    labels: Object.keys(count.assessment),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Frequency of Assessment Marks',\r\n                            backgroundColor: '#42A5F5',\r\n                            data: Object.values(count.assessment)\r\n                        }\r\n                    ]\r\n                },\r\n                practicalData: {\r\n                    labels: Object.keys(count.practical),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Frequency of Practical Marks',\r\n                            backgroundColor: '#42A5F5',\r\n                            data: Object.values(count.practical)\r\n                        }\r\n                    ]\r\n                },\r\n                max: [Math.max(...Object.values(count.assessment)), Math.max(...Object.values(count.practical))]\r\n            })\r\n        }\r\n    }\r\n\r\n    getOption(max) {\r\n        return {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: max,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                <h1 style={{color: '#1E90FF'}}>{this.props.sectionSubject[0]} Assessment Marks</h1>\r\n                <div className=\"card\" style={{padding: '25px'}}>\r\n                    <Chart type=\"bar\" data={this.state.assessmentData} options={this.getOption(this.state.max[0]+1)} />\r\n                </div><hr/>\r\n                <h1 style={{color: '#1E90FF'}}>{this.props.sectionSubject[0]} Practical Marks</h1>\r\n                <div className=\"card\" style={{padding: '25px'}}>\r\n                    <Chart type=\"bar\" data={this.state.practicalData} options={this.getOption(this.state.max[1]+1)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)( BarChart );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_NOTIFICATIONS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              \r\n  <div className=\"p-grid styleInbox p-mt-4 \">\r\n      {this.state.data.map((dat, index) => {\r\n          return (\r\n            <div key={index} className=\"p-col itstyle\">\r\n            <img src=\"https://i.imgur.com/IqICwKK.jpg\" width=\"45px\" height=\"45px\" alt=\"\"/>                    \r\n             <div className=\"inboxtext\">{dat.message}</div>\r\n        </div>\r\n          );\r\n      })}\r\n  </div> \r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\n\r\nexport default connect( mapStateToProps, null )( Inbox );\r\n  ","import React, {Fragment} from 'react';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Post extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            value2: ''\r\n        }\r\n        this.onPostSend = this.onPostSend.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onPostSend(){\r\n        fetch(uris.SUBMIT_POST, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                section_id: this.props.activeSection[this.props.activeIndex].section_id,\r\n                person_id : this.props.username,\r\n                content: this.state.value2\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.toast.show({severity: 'info', summary: 'Info\"', detail: 'Post Added Successfully!!!'});\r\n            fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {this.setState({data: res.data})})\r\n                .catch(err => console.log(err));\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              <div>\r\n              <Toast ref={(el) => this.toast = el} />\r\n                     <div className=\"p-grid p-col p-ml-2 p-mt-4 p-shadow-2 p-mb-4 noticeBOX\">\r\n                        <div className=\"p-col-1\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\"/>\r\n                        </div>\r\n             \r\n                        <div className=\"fixInput p-col\">\r\n                            <InputTextarea className=\"p-inputtextarea \" value={this.state.value2} onChange={(e) => this.setState({value2: e.target.value})}  rows={2} cols={30}  autoResize />\r\n                        </div>\r\n                        <div className=\"p-col-2\">\r\n                            <Button label=\"SEND\"  onClick={this.onPostSend}/>\r\n                        </div>               \r\n                    </div>     \r\n       \r\n                    {this.state.data ? this.state.data.map((dat, index) => {\r\n          return (<Fragment key={index}>\r\n              <div className=\"p-col\">\r\n                    <div className=\"p-row p-p-2 fixPadd\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\" width=\"20px\"/> \r\n                            {dat.full_name}<div className=\"fixedSUB\"></div>\r\n                    </div>\r\n                    <div className=\"p-row p-p-2\">\r\n                        {dat.content}</div>\r\n                </div>\r\n          </Fragment>\r\n          );\r\n      }) : null}\r\n              </div>\r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username,\r\n    activeSection: state.teacher.classes,\r\n    activeIndex: state.teacher.activeClassStudentValuesIndex \r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( Post );\r\n  \r\n  \r\n \r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport \"./Timeline.css\";\r\n\r\nimport Inbox from './InboxArea';\r\nimport Post from './PostArea';\r\n\r\nclass Timeline extends React.Component {\r\n    componentDidMount(){        \r\n        if (this.props.activeClass === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n    }\r\n    render() {\r\n    return (\r\n        <Fragment>\r\n            {this.props.infoBox ? <Redirect to='/'/> : null}\r\n        <div className=\"p-fluid wholeStyle\">\r\n           <div className=\"p-grid p-lg-12\">\r\n               <div className=\"p-col-7\">\r\n                   <Post/>\r\n                </div>\r\n            <div className=\"p-col-4 p-offset-1 p-shadow-2\">\r\n                <div className=\"header\">\r\n                    Inbox\r\n                </div>\r\n                <Inbox/>\r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        </Fragment>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)( Timeline );\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport MainDashTeacher from './TeacherMain';\r\nimport DataTableView from './ViewTable';\r\nimport DataTableEdit from './EditTable';\r\nimport BarChart from './BarChart';\r\nimport Timeline from './Timeline';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Teacher extends Component{\r\n\tcomponentDidMount(){\r\n        fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.props.onSetClass(res.data)\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Class List Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={MainDashTeacher}/>\r\n            \t<Route path=\"/timeline\" exact component={Timeline}/>\r\n            \t<Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/marksentry\" exact component={DataTableEdit}/>\r\n            \t<Route path=\"/statistics\" exact component={BarChart}/>\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetClass: (values) => dispatch(actions.setClasses(values)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Teacher);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setActiveSem = (sem)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_ACTIVE_SEM,\r\n        value: sem\r\n    }\r\n}\r\n\r\nexport const setSemSubjectValues = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_SEM_SUBJECT_VALUES,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setSems=(value)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_SEMS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setInfoBox = (value) => {\r\n    return {\r\n        type: actionTypes.SET_STUDENT_INFOBOX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const resetStudentState = () => {\r\n    return {\r\n        type: actionTypes.RESET_STUDENT_DEFAULTS\r\n    }\r\n};\r\n\r\nexport const setActiveSemIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport * as actions from '../../store/actions/student';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport \"primeflex/primeflex.css\";\r\n\r\nclass MainDashStudent extends React.Component {\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          redirect: null,\r\n          deadline: ''\r\n      }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.infoBox) {\r\n      this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n    }\r\n    this.props.setInfoBoxNULL();\r\n\r\n    fetch(uris.POST_DEADLINE, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.status === 'success') {\r\n          this.setState({deadline: res.deadline.substring(0, 10)})\r\n      } else {\r\n          this.toast.show({severity: 'error', summary: 'Deadline Fetch Failed', detail: res.message});\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  onCardSelectHandler(index){\r\n\t\tthis.props.selectCard(index);\r\n\t\tthis.setState({redirect: <Redirect to='/marksview'/>});\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n        <div className='p-grid'>\r\n          <div className='p-col-9'>\r\n            <h3>Choose your semester card and see your internal marks.</h3>\r\n          </div>\r\n          <div className='p-col-3'>\r\n          <h3 style={{color: 'red'}}>Marks Submission Till : {this.state.deadline}</h3>\r\n          </div>\r\n        </div>\r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : \r\n          <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n          {this.props.sems.map((data, index) => {\r\n                                return (<Card key={index} title={\"Semester Card\"} subTitle={\"Semester No.\"} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"View\"\r\n                                            onClick={() => this.onCardSelectHandler(index+1)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.value}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n        </div>}\r\n      {this.state.redirect}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sems: state.student.sems,\r\n    infoBox: state.student.infoBox,\r\n    loading: state.student.loading    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectCard: (sem) => dispatch(actions.setActiveSem(sem)),\r\n    setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( MainDashStudent );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/student';\r\n\r\nclass DataTableView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onRequestRecheck = this.onRequestRecheck.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.activeSem === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Semester Selected!!!'});\r\n        let i;\r\n        for(i=0;i<this.props.semSubjectValues.length;i++){\r\n            if (this.props.semSubjectValues[i].sem === this.props.activeSem){\r\n                this.props.setActiveSemIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        if (i === this.props.semSubjectValues.length && this.props.activeSem !== null){\r\n            fetch(uris.FETCH_STUDENT_SEM_MARKS+'?person_id='+this.props.username+'&semester='+this.props.activeSem.toString(), {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        this.props.setSemSubjectValues({sem: this.props.activeSem, data: res.data});\r\n                        this.props.setActiveSemIndex(this.props.semSubjectValues.length-1);\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Student Semester Marks Fetch Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    onRequestRecheck(rowData){\r\n        fetch(uris.REQUEST_STUDENT_MARKS_RECHECK, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                person_id: this.props.username,\r\n                subject_id: rowData.subject_id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.toast.show({severity: 'info', summary: 'Info\"', detail: 'Marks Recheck Request Sent!!!'})})\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"Request Recheck\" className=\"p-button-rounded p-button-danger\" onClick={() => this.onRequestRecheck(rowData)}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.semSubjectValues[this.props.semIndex];\r\n        return (\r\n            <Fragment>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n                <Fragment>\r\n                    {recordDatas ? (\r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <h3>Marks Summary View : Assessment and Practical Marks are NOT Editable</h3>\r\n                            <DataTable value={recordDatas.data} header={\"Subject Marks for Semester \"+this.props.activeSem}>\r\n                                <Column field=\"subject_code\" header=\"Subject Code\"></Column>\r\n                                <Column field=\"title\" header=\"Subject Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\"></Column>\r\n                                <Column field=\"practical_marks\" header=\"Practical\"></Column>\r\n                                <Column body={this.actionBodyTemplate}></Column>\r\n                            </DataTable>\r\n                        </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSem: state.student.activeSem,\r\n        username: state.auth.username,\r\n        semSubjectValues: state.student.semSubjectValues,\r\n        semIndex: state.student.activeSemSubjectValuesIndex,\r\n        loading: state.student.loading,\r\n        infoBox: state.student.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSemSubjectValues: (values) => dispatch(actions.setSemSubjectValues(values)),\r\n        setActiveSemIndex: (value) => dispatch(actions.setActiveSemIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableView );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_NOTIFICATIONS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              \r\n  <div className=\"p-grid styleInbox p-mt-4 \">\r\n      {this.state.data.map((dat, index) => {\r\n          return (\r\n            <div key={index} className=\"p-col-12 itstyle\">\r\n            <img src=\"https://i.imgur.com/IqICwKK.jpg\" width=\"45px\" height=\"45px\" alt=\"\"/>                    \r\n             <div className=\"inboxtext\">{dat.message}</div>\r\n        </div>\r\n          );\r\n      })}\r\n  </div> \r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\n\r\nexport default connect( mapStateToProps, null )( Inbox );\r\n  ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\nimport \"../../App.css\";\r\nclass Post extends React.Component{\r\n         constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return( \r\n            <div className=\" p-grid  p-ml-2  p-pt-1 p-shadow-2  \">    \r\n            {this.state.data.map((dat, index) => {\r\n          return (<Fragment key={index}>\r\n              <div className=\"p-col-12\">\r\n                    <div className=\"p-row p-p-2 fixPadd\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\" width=\"20px\"/> \r\n                            {dat.full_name}<div className=\"fixedSUB\">{dat.subject}</div>\r\n                    </div>\r\n                    <div className=\"p-row p-p-2\">\r\n                        {dat.content}</div>\r\n                </div>\r\n          </Fragment>\r\n          );\r\n      })}\r\n            </div>\r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( Post );\r\n","import React from 'react';\r\nimport \"./Timeline.css\";\r\n\r\nimport Inbox from './InboxArea';\r\nimport Post from './PostArea';\r\n\r\nclass Timeline extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\" p-fluid wholeStyle\">\r\n           <div className=\"p-grid p-lg-12\">\r\n               <div className=\"p-col-7\">\r\n                   <Post/>\r\n                </div>\r\n            <div className=\"p-col-4 p-offset-1 p-shadow-2\">\r\n                <div className=\"header\">\r\n                    Inbox\r\n                </div>\r\n                <Inbox/>\r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    );\r\n    }\r\n}\r\nexport default Timeline;\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport MainDashStudent from './StudentMain';\r\nimport DataTableView from './ViewTable';\r\nimport Timeline from './Timeline';\r\nimport * as actions from '../../store/actions/student';\r\n\r\nclass Student extends Component{\r\n\tcomponentDidMount(){\r\n        this.props.resetStudentState();\r\n        this.props.setSems([{value: 1}, {value: 2}, {value: 3}, {value: 4},\r\n                            {value: 5}, {value: 6}, {value: 7}, {value: 8}])\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={MainDashStudent}/>\r\n            \t<Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/studenttimeline\" exact component={Timeline}/>\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSems: (values) => dispatch(actions.setSems(values)),\r\n        resetStudentState: () => dispatch(actions.resetStudentState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Student);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setActiveTeacherUsername = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_USERNAME,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setActiveTeacherClasses = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setActiveTeacherIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setTeacherClassValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_CLASS_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setInfoBox = (values) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_INFOBOX,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setTeacherDepartments = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_DEPARTMENTS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setTeachers = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHERS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetAdminState = (value)=>{\r\n    return {\r\n        type: actionTypes.RESET_ADMIN_DEFAULTS\r\n    }\r\n}\r\n\r\nexport const resetAdminTeacherClass = (value)=>{\r\n    return {\r\n        type: actionTypes.RESET_ADMIN_TEACHER_CLASS_VALUES\r\n    }\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../../index.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n// import CSVReader from 'react-csv-reader';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as actions from '../../store/actions/admin';\r\nimport * as uris from '../../store/uris';\r\nimport './AdminMain.css';\r\n\r\nclass AdminMain extends Component {\r\n    emptyTeacher = {\r\n        person_id: '',\r\n        username: '',\r\n        full_name: '',\r\n        email: '',\r\n        phone_no: '',\r\n        program_code: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            redirect: null,\r\n            newTeacher: null,\r\n            teacherDialog: false,\r\n            department: [],\r\n            deleteTeacherDialog: false,\r\n            deleteTeachersDialog: false,\r\n            teacher: this.emptyTeacher,\r\n            selectedTeachers: null,\r\n            submitted: false,\r\n            globalFilter: null\r\n        };\r\n\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.rightToolbarTemplate = this.rightToolbarTemplate.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveTeacher = this.saveTeacher.bind(this);\r\n        this.editTeacher = this.editTeacher.bind(this);\r\n        this.confirmDeleteTeacher = this.confirmDeleteTeacher.bind(this);\r\n        this.deleteTeacher = this.deleteTeacher.bind(this);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onProgramChange = this.onProgramChange.bind(this);\r\n        this.hideDeleteTeacherDialog = this.hideDeleteTeacherDialog.bind(this);\r\n        this.hideDeleteTeachersDialog = this.hideDeleteTeachersDialog.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.infoBox) {\r\n          this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n        }\r\n        this.props.setInfoBoxNULL();\r\n        fetch(uris.FETCH_DEPARTMENT_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.setState({department: res.data})\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Department List Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            teacher: this.emptyTeacher,\r\n            submitted: false,\r\n            newTeacher: true,\r\n            teacherDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            teacherDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteTeacherDialog() {\r\n        this.setState({ deleteTeacherDialog: false });\r\n    }\r\n\r\n    hideDeleteTeachersDialog() {\r\n        this.setState({ deleteTeachersDialog: false });\r\n    }\r\n\r\n    saveTeacher() {\r\n        let state = { submitted: true };\r\n        if (this.state.teacher.username && this.state.teacher.full_name && this.state.teacher.email\r\n            && this.state.teacher.phone_no && this.state.teacher.program_code) {\r\n            let toastMsg = null;\r\n            let method = null;\r\n            if (!this.state.newTeacher) {\r\n                method = 'PATCH';\r\n                toastMsg = 'Teacher Updated';\r\n            }\r\n            else {\r\n                method = 'POST';\r\n                toastMsg = 'Teacher Created';\r\n            }\r\n            let i;\r\n            for (i=0; i<this.state.department.length;i++){\r\n                if (this.state.department[i].dept_name === this.state.teacher.program_code.dept_name) break;\r\n            }\r\n            let temp = {...this.state.teacher, dept_id: this.state.department[i].dept_id};\r\n            fetch(uris.ADD_TEACHER+this.state.teacher.person_id.toString(), {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(temp)\r\n            })\r\n                .then(res => res.json())\r\n                .then((res) => {\r\n                    if (res.status === 'success') {\r\n                        fetch(uris.FETCH_TEACHER_LIST, {\r\n                            method: 'GET',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            }\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(res => {\r\n                                if (res.status === 'success') {\r\n                                    this.props.setTeachers(res.data)\r\n                                } else {\r\n                                    this.toast.show({severity: 'error', summary: 'Teacher List Fetch Failed', detail: res.message});\r\n                                }\r\n                            })\r\n                            .catch(err => console.log(err))\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Teacher Update Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            this.toast.show({ severity: 'success', summary: 'Successful', detail: toastMsg, life: 3000 });\r\n\r\n            state = {\r\n                ...state,\r\n                newTeacher: false,\r\n                teacherDialog: false,\r\n                teacher: this.emptyTeacher\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    editTeacher(teacher) {\r\n        this.setState({\r\n            teacher: { ...teacher },\r\n            teacherDialog: true\r\n        });\r\n    }\r\n\r\n    teacherClickHandler(rowData){\r\n        this.props.selectCard(rowData.person_id);\r\n\t\tthis.setState({redirect: <Redirect to='/teachersessions'/>});\r\n    }\r\n\r\n    confirmDeleteTeacher(teacher) {\r\n        this.setState({\r\n            teacher: { ...teacher},\r\n            deleteTeacherDialog: true\r\n        });\r\n    }\r\n\r\n    deleteTeacher() {\r\n        let teachers = this.props.teachers.filter(val => val.person_id !== this.state.teacher.person_id);\r\n        fetch(uris.DELETE_TEACHER+this.state.teacher.person_id.toString(), {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.setState({\r\n                        deleteTeacherDialog: false,\r\n                        teacher: this.emptyTeacher\r\n                    });\r\n                    this.props.setTeachers(teachers);\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Teacher Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        \r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Teacher Deleted', life: 3000 });\r\n    }\r\n\r\n    findIndexByUsername(id) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.props.teachers.length; i++) {\r\n            if (this.props.teachers[i].username === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    createId() {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteTeachersDialog: true });\r\n    }\r\n\r\n    onInputChange(e, name) {\r\n        const val = (e.target && e.target.value) || '';\r\n        let teacher = {...this.state.teacher};\r\n        teacher[`${name}`] = val;\r\n\r\n        this.setState({ teacher });\r\n    }\r\n\r\n    onProgramChange(e) { this.setState({teacher: {...this.state.teacher, program_code: e.value}})}\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    rightToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                {/* <CSVReader onFileLoaded={(data, fileInfo) => console.log(data[0])} /> */}\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => this.editTeacher(rowData)} />\r\n                <Button icon='pi pi-briefcase' className=\"p-button-rounded p-button-info p-mr-2\" onClick={() => this.teacherClickHandler(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger p-mr-2\" onClick={() => this.confirmDeleteTeacher(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header\">\r\n                <h5 className=\"p-m-0\">Manage Teachers</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Search...\" />\r\n                </span>\r\n            </div>\r\n        );\r\n        const teacherDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveTeacher} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteTeacherDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteTeacherDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteTeacher} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (<Fragment>\r\n            <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n            {this.props.loading ?  <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n            <div className=\"datatable-crud-demo\">\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" style={{marginTop: '20px'}} left={this.leftToolbarTemplate} right={this.rightToolbarTemplate}></Toolbar>\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.teachers}\r\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} teachers\"\r\n                    globalFilter={this.state.globalFilter}\r\n                    header={header}>\r\n\r\n                    <Column field=\"username\" style={{width: '150px'}} header=\"UserName\" sortable></Column>\r\n                    <Column field=\"full_name\" style={{width: '150px'}} header=\"Full Name\" sortable></Column>\r\n                    <Column field=\"email\" style={{width: '350px'}} header=\"Email\" ></Column>\r\n                    <Column field=\"phone_no\" style={{width: '120px'}} header=\"Phone No\"  ></Column>\r\n                    <Column field=\"dept_name\" header=\"Department\" sortable></Column>\r\n                    <Column body={this.actionBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={this.state.teacherDialog} style={{ width: '450px' }} header=\"Teacher Details\" modal className=\"p-fluid\" footer={teacherDialogFooter} onHide={this.hideDialog}>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"username\">UserName</label>\r\n                    <InputText id=\"username\" value={this.state.teacher.username} onChange={(e) => this.onInputChange(e, 'username')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.username })} />\r\n                    {this.state.submitted && !this.state.teacher.username && <small className=\"p-invalid\">UserName is required.</small>}\r\n                </div>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"full_name\">Name</label>\r\n                    <InputText id=\"full_name\" value={this.state.teacher.full_name} onChange={(e) => this.onInputChange(e, 'full_name')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.full_name })} />\r\n                    {this.state.submitted && !this.state.teacher.full_name && <small className=\"p-invalid\">Name is required.</small>}\r\n                </div>\r\n                 <div className=\"p-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <InputText id=\"email\" value={this.state.teacher.email} onChange={(e) => this.onInputChange(e, 'email')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.email })} />\r\n                    {this.state.submitted && !this.state.teacher.email && <small className=\"p-invalid\">Email is required.</small>}\r\n                </div>\r\n                 <div className=\"p-field\">\r\n                    <label htmlFor=\"phone_no\">Phone No:</label>\r\n                    <InputText id=\"phone_no\" value={this.state.teacher.phone_no} onChange={(e) => this.onInputChange(e, 'phone_no')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.phone_no })} />\r\n                    {this.state.submitted && !this.state.teacher.phone_no && <small className=\"p-invalid\">Phone No is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Department\">Department</label>\r\n                    <Dropdown value={this.state.teacher.program_code} options={this.state.department} onChange={this.onProgramChange} optionLabel=\"dept_name\" required placeholder=\"Select a Department\"/>\r\n                    {this.state.submitted && !this.state.teacher.program_code && <small className=\"p-invalid\">Department is required.</small>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={this.state.deleteTeacherDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteTeacherDialogFooter} onHide={this.hideDeleteTeacherDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {this.state.teacher && <span>Are you sure you want to delete <b>{this.state.teacher.full_name}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>}\r\n        {this.state.redirect}\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n                \r\nconst mapStateToProps = state => {\r\n    return {\r\n      teachers: state.admin.teachers,\r\n      infoBox: state.admin.infoBox,\r\n      loading: state.admin.loading    \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      selectCard: (Class) => dispatch(actions.setActiveTeacherUsername(Class)),\r\n      setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n      setTeachers: (value) => dispatch(actions.setTeachers(value)),\r\n    };\r\n  };\r\n  \r\n  export default connect( mapStateToProps, mapDispatchToProps )( AdminMain );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/admin';\r\nimport './TeacherSessions.css';\r\n\r\nclass TeacherSessions extends Component {\r\n    emptyLecture = {\r\n        batch: '',\r\n        subject_code: '',\r\n        group_code: '',\r\n        program_code: '',\r\n        semester: ''\r\n    }\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            redirect: null,\r\n            lectureDialog: false,\r\n            submitted: false,\r\n            displayConfirmation: false,\r\n            lectureSel: {\r\n                batch_id: '',\r\n                program_id: '',\r\n                subject_id: '',\r\n                section_id: '',\r\n                semester: ''\r\n            },\r\n            lecture: {...this.emptyLecture},\r\n            batchs: ['074'],\r\n            programs: [\"BCT\",\"BEX\"],\r\n            subjects: [],\r\n            sections: []\r\n        }\r\n        this.addClass = this.addClass.bind(this);\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.addLecture = this.addLecture.bind(this);\r\n        this.onProgramChange = this.onProgramChange.bind(this);\r\n        this.onBatchChange = this.onBatchChange.bind(this);\r\n        this.onSubjectChange = this.onSubjectChange.bind(this);\r\n        this.onGroupChange = this.onGroupChange.bind(this);\r\n        this.onDeleteLecture = this.onDeleteLecture.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n    }\r\n\r\n    componentDidMount(){        \r\n        if (this.props.activeTeacher === null) { this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Teacher Selected!!!'}); }\r\n        else {\r\n            let i;\r\n            for(i=0;i<this.props.teacherClassValues.length;i++){\r\n                if (this.props.teacherClassValues[i].username === this.props.activeTeacher){\r\n                    this.props.setActiveTeacherIndex(i);\r\n                    break;\r\n                }\r\n            }\r\n            if (i === this.props.teacherClassValues.length && this.props.activeTeacher !== null){\r\n                fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.status === 'success') {\r\n                            this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                            this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data});\r\n                        } else {\r\n                            this.toast.show({severity: 'error', summary: 'Class List Fetch Failed', detail: res.message});\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    addClass(){\r\n        fetch(uris.FETCH_BATCH_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({batchs: res.data})})\r\n            .catch(err => console.log(err));\r\n        \r\n            fetch(uris.FETCH_PROGRAM_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.setState({programs: res.data}))\r\n            .catch(err => console.log(err));\r\n\r\n        this.setState({\r\n            teacher: {...this.emptyLecture},\r\n            submitted: false,\r\n            lectureDialog: true\r\n        });\r\n    }\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.addClass} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            lectureDialog: false\r\n        });\r\n    }\r\n\r\n    addLecture() {\r\n        let state = { submitted: true };\r\n        if (this.state.lecture.group_code && this.state.lectureSel.subject_id) {\r\n            let data = { person_id: this.props.activeTeacher,\r\n                        section_id: this.state.lectureSel.section_id,\r\n                        subject_id: this.state.lectureSel.subject_id}\r\n            fetch(uris.FETCH_CLASS_LIST, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.status === 'success') {\r\n                        this.props.resetTeacherClasses();\r\n                        fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                            method: 'GET',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            }\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(res => {\r\n                                this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                                this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data});\r\n                                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Lecture Added', life: 3000 });                                \r\n                            })\r\n                            .catch(err => console.log(err));\r\n                    } else {\r\n                        this.toast.show({severity: 'error', summary: 'Lecture Add Failed', detail: res.message});\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            state = {\r\n                ...state,\r\n                lectureDialog: false,\r\n                lecture: {...this.emptyLecture}\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    onBatchChange(e) {\r\n        let temp = {...this.emptyLecture};\r\n        temp.batch = e.value;\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, batch_id: e.value.batch_id,\r\n            program_id: '',\r\n            subject_id: '',\r\n            section_id: '',\r\n            semester: ''} });\r\n    }\r\n\r\n    onProgramChange(e) {\r\n        let temp = {...this.emptyLecture};\r\n        temp.program_code = e.value;\r\n        temp.batch = this.state.lecture.batch;\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, program_id: e.value.program_id,\r\n            subject_id: '',\r\n            section_id: '',\r\n            semester: ''} });\r\n        fetch(uris.FETCH_SECTION_LIST+'?batch_id='+this.state.lectureSel.batch_id+'&program_id='+e.value.program_id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({sections: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    onGroupChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.group_code = e.value\r\n        temp.program_code = this.state.lecture.program_code;\r\n        temp.batch = this.state.lecture.batch;\r\n\r\n        let i = 0;\r\n        for (i=0; i<this.state.batchs.length; i++){\r\n            if (this.state.lectureSel.batch_id === this.state.batchs[i].batch_id) {\r\n                this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, section_id: e.value.section_id\r\n                                , semester: this.state.batchs[i].semester, subject_id: ''} });\r\n                break;\r\n            }\r\n        }\r\n        fetch(uris.FETCH_SUBJECT_LIST+'?program_id='+this.state.lectureSel.program_id+'&semester='+this.state.batchs[i].semester.toString(), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({subjects: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onSubjectChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.subject_code = e.value\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, subject_id: e.value.subject_id}  });\r\n    }\r\n\r\n    onDeleteLecture(){\r\n        fetch(uris.FETCH_CLASS_LIST+this.props.teacherClassValues[this.props.teacherIndex].data[this.state.delIndex].lecture_id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.props.resetTeacherClasses();\r\n                    fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        }\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                            this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data}); // TODO: get fullmarks as well\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Lecture Remove Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true,\r\n            delIndex: position\r\n        };\r\n        this.setState(state);\r\n    }\r\n\r\n    onHide(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n    }\r\n\r\n    onApprove(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n        this.onDeleteLecture();\r\n    }\r\n\r\n    renderFooter(name) {\r\n        return (\r\n            <div>\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => this.onHide(name)} className=\"p-button-text\" />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" onClick={() => this.onApprove(name)} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render (){\r\n        const lectureDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Add\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.addLecture} />\r\n            </React.Fragment>\r\n        );\r\n        return (\r\n            <Fragment>                \r\n                <Toast ref={(el) => this.toast = el} />\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : <Fragment>\r\n                {this.props.teacherClassValues.length>this.props.teacherIndex ? <Fragment>\r\n                    <Toolbar style={{marginTop: '20px'}} className=\"p-mb-4\" left={this.leftToolbarTemplate}></Toolbar>\r\n                <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n                {this.props.teacherClassValues.length === 0 ? null : this.props.teacherClassValues[this.props.teacherIndex].data.map((data, index) => {\r\n                                return (<Card key={index} title={data.subject_code} subTitle={data.title} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"Remove\"\r\n                                            onClick={() => this.onClick('displayConfirmation', index)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(0,-2)}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(-2,)}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n                </div>\r\n                <Dialog visible={this.state.lectureDialog} style={{ width: '450px' }} header=\"Lecture Details\" modal className=\"p-fluid\" footer={lectureDialogFooter} onHide={this.hideDialog}>\r\n                <div>\r\n                    <label htmlFor=\"Batch\">Batch</label>\r\n                    <Dropdown value={this.state.lecture.batch} options={this.state.batchs} onChange={this.onBatchChange} optionLabel=\"batch_code\" required placeholder=\"Select a Batch\"/>\r\n                    {this.state.submitted && !this.state.lecture.batch && <small className=\"p-invalid\">Batch is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Program\">Program</label>\r\n                    <Dropdown value={this.state.lecture.program_code} options={this.state.programs} onChange={this.onProgramChange} optionLabel=\"program_code\" required placeholder=\"Select a Program\"/>\r\n                    {this.state.submitted && !this.state.lecture.program_code && <small className=\"p-invalid\">Program is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Section\">Section</label>\r\n                    <Dropdown value={this.state.lecture.group_code} options={this.state.sections} onChange={this.onGroupChange} optionLabel=\"section_code\" required placeholder=\"Select a Section\"/>\r\n                    {this.state.submitted && !this.state.lecture.group_code && <small className=\"p-invalid\">Section is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Subject\">Subject</label>\r\n                    <Dropdown value={this.state.lecture.subject_code} options={this.state.subjects} onChange={this.onSubjectChange} optionLabel=\"title\" required placeholder=\"Select a Subject\"/>\r\n                    {this.state.submitted && !this.state.lecture.subject_code && <small className=\"p-invalid\">Subject is required.</small>}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog header=\"Confirmation\" visible={this.state.displayConfirmation} modal style={{ width: '350px' }} footer={this.renderFooter('displayConfirmation')} onHide={() => this.onHide('displayConfirmation')}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                        <span>Are you sure you want to proceed?</span>\r\n                </div>\r\n            </Dialog>\r\n            </Fragment>:null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeTeacher: state.admin.activeTeacherUsername,\r\n        teacherClassValues: state.admin.activeTeacherClasses,\r\n        teacherIndex: state.admin.activeTeacherClassValuesIndex,\r\n        loading: state.admin.loading,\r\n        infoBox: state.admin.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setActiveTeacherClasses: (value) => dispatch(actions.setActiveTeacherClasses(value)),\r\n        setActiveTeacherUsername: (value) => dispatch(actions.setActiveTeacherUsername(value)),\r\n        setActiveTeacherIndex: (value) => dispatch(actions.setActiveTeacherIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) ),\r\n        resetTeacherClasses: () => dispatch(actions.resetAdminTeacherClass())\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( TeacherSessions );\r\n","import React, {Fragment} from 'react';\r\nimport \"./admindash.css\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from \"primereact/button\";\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { CSVDownload } from 'react-csv';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass AdminDashboard extends React.Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n             selectedSem: null,\r\n             uniqueRoll: '',\r\n             loading: false,\r\n             data: null,\r\n             countData: {teachers: 0, students: 0},\r\n             refreshDialog: false,\r\n             batch_code: '',\r\n             deadline: '',\r\n             credentials: []\r\n    };  \r\n    this.semester = ['1','2','3','4','5','6','7','8'];  \r\n    this.onSemesterChange = this.onSemesterChange.bind(this);\r\n    this.onFetchStudentSemMarks = this.onFetchStudentSemMarks.bind(this);\r\n    this.confirmRefresh = this.confirmRefresh.bind(this);\r\n    this.hideRefreshDialog = this.hideRefreshDialog.bind(this);\r\n    this.confirmRefreshFlow = this.confirmRefreshFlow.bind(this);\r\n    this.setDeadline = this.setDeadline.bind(this);\r\n}\r\n\r\ncomponentDidMount(){\r\n    fetch(uris.FETCH_STATS, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.status === 'success') {\r\n            this.setState({countData: res.data})\r\n        } else {\r\n            this.toast.show({severity: 'error', summary: 'Stats Fetch Failed', detail: res.message});\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n    fetch(uris.POST_DEADLINE, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.status === 'success') {\r\n            this.setState({deadline: res.deadline.substring(0, 10)})\r\n        } else {\r\n            this.toast.show({severity: 'error', summary: 'Deadline Fetch Failed', detail: res.message});\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nonSemesterChange(e) {\r\n    this.setState({ selectedSem: e.value });\r\n}\r\n    onFetchStudentSemMarks(){\r\n        if (this.state.uniqueRoll !== '' && this.state.selectedSem !== null) {\r\n            this.setState({loading: true})\r\n            fetch(uris.FETCH_STUDENT_DETAILS+'?username='+this.state.uniqueRoll, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                fetch(uris.FETCH_STUDENT_SEM_MARKS+'?person_id='+res.data.person_id+'&semester='+this.state.selectedSem, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }})\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.status === 'success') {\r\n                            this.setState({data: res.data, loading: false})\r\n                        } else {\r\n                            this.toast.show({severity: 'error', summary: 'Student Details Fetch Failed', detail: res.message});\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err))\r\n        }else{\r\n            this.toast.show({severity: 'error', summary: 'Invalid Input', detail: 'Please input a valid value!!!'})\r\n        }\r\n    }\r\n\r\n    hideRefreshDialog() {\r\n        this.setState({\r\n            refreshDialog: false\r\n        });\r\n    }\r\n\r\n    confirmRefresh(rType) {\r\n        this.setState({\r\n            refreshDialog: rType\r\n        });\r\n    }\r\n\r\n    confirmRefreshFlow() {\r\n        let postURI = (this.state.refreshDialog === 'year' ? uris.POST_YEAR_REFRESH : uris.POST_SESSION_REFRESH);\r\n        fetch(postURI, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ batch_code: this.state.batch_code})\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.toast.show({severity: 'info', summary: 'Database Updated', detail: 'Successfully Refreshed '+this.state.refreshDialog});\r\n                    this.state.refreshDialog === 'year' ? this.setState({credentials: res.credentials, refreshDialog: false}) : this.setState({refreshDialog: false});\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Database Update Failed', detail: res.message});\r\n                    this.setState({refreshDialog: false});\r\n                }\r\n                fetch(uris.FETCH_STATS, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }})\r\n                .then(res => res.json())\r\n                .then(res => {this.setState({countData: res.data})})\r\n                .catch(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    setDeadline(value){\r\n        fetch(uris.POST_DEADLINE, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({deadline: value.toISOString().substring(0, 10)})\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.setState({deadline: value.toISOString().substring(0, 10)})\r\n                    this.toast.show({severity: 'info', summary: 'Deadline Updated', detail: 'Successfully Changed!!'});\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Deadline Update Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n  render() {\r\n    const refreshDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideRefreshDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.confirmRefreshFlow} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    let dwnldData;\r\n    if (this.state.credentials.length !== 0) {\r\n        dwnldData = <CSVDownload className=\"csv-download\" target=\"_self\" filename='credentials' data={this.state.credentials}/>\r\n        this.toast.show({severity: 'info', summary: 'Downloaded File Followup', detail: 'Change or Add .csv extension to the Downloaded File!!'});\r\n        this.setState({credentials: []})\r\n    } else {\r\n        dwnldData = null;\r\n    }\r\n    return (<Fragment>        \r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {dwnldData}\r\n        <div className=\" p-fluid\">\r\n           <div className=\"p-mt-2 p-grid \">               \r\n                <div className=\"cardResult  p-mt-2   p-col-3\">\r\n                        <div className=\"p-row headerPAPER\">\r\n                       <h2>\r\n                            Total Teachers\r\n                           </h2>\r\n                        </div>\r\n                        <hr/>\r\n                           <div className=\"numberBIG p-row\">\r\n                        {this.state.countData.teachers}\r\n                        </div>\r\n                </div>             \r\n                <div className=\"cardResult p-mt-2 p-offset-2  p-col-3\">\r\n                        <div className=\"p-row headerPAPER\">\r\n                        <h2>\r\n                            Total Students\r\n                            </h2>\r\n                        </div>\r\n                        <hr/>\r\n                           <div className=\"numberBIG p-row\">\r\n                        {this.state.countData.students}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-col-3\">\r\n\r\n                <div className=\"cardResult p-offset-2  p-row\">\r\n                <div className=\"p-grid\">\r\n                        <div className=\"p-col-4\">\r\n                            <InputText type=\"text\" width=\"50px\" value={this.state.batch_code} placeholder=\"Year\" onChange={(e) => this.setState({batch_code: e.target.value})}/>\r\n                        </div>\r\n                        <div className=\"p-col-8\">\r\n                            <Button label=\"Add Students\" className=\"p-button-rounded p-button-success\" onClick={() => this.confirmRefresh('year')}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"cardResult p-mt-2 p-offset-2  p-row\">\r\n                    \r\n                    <Button label=\"Initiate New Session\" className=\"p-button-rounded p-button-info\" onClick={() => this.confirmRefresh('session')}/>\r\n                </div>\r\n                    </div>\r\n                    <div className=\"p-mt-2 p-col-3\">\r\n                        <div className=\"p-field\">\r\n                        \r\n                        <Calendar id=\"icon\" showIcon placeholder=\"Set Marks Submission Deadline\" onChange={(e) => this.setDeadline(e.value)}/>\r\n                    </div>\r\n                    <h3>Marks Submission Till : {this.state.deadline}</h3>\r\n                    </div>\r\n                </div>\r\n           <div className=\"p-fluid card\">\r\n               <div className=\"p-grid p-lg-12 p-mt-2 \">\r\n                     <div className=\"p-col\">\r\n                         <h3>Unique Roll No</h3>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText label=\"Unique Roll No\" value={this.state.uniqueRoll} onChange={(e) => this.setState({uniqueRoll: e.target.value})} placeholder=\"Enter By Unique Roll No\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-col\">\r\n                         <h3>Semester</h3>\r\n                            <div className=\"p-inputgroup\">\r\n                               <Dropdown value={this.state.selectedSem} options={this.semester} onChange={this.onSemesterChange} placeholder=\"Select Sem\" />\r\n                            </div>\r\n                        </div>\r\n                           <div className=\"p-col\">\r\n                               <h3>Search</h3>\r\n                          <Button icon=\"pi pi-search\" onClick={this.onFetchStudentSemMarks}/>\r\n                        </div>\r\n               </div>\r\n                </div>\r\n            </div>\r\n            \r\n            {this.state.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : null}\r\n                        {this.state.data ? \r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <DataTable value={this.state.data} header=\"Data\">\r\n                                <Column field=\"subject_code\" header=\"Subject Code\"></Column>\r\n                                <Column field=\"title\" header=\"Subject Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\"></Column>\r\n                                <Column field=\"practical_marks\" header=\"Practical\"></Column>\r\n                               \r\n                            </DataTable>\r\n                        </div>\r\n                        </div>:null}\r\n            <Dialog visible={this.state.refreshDialog !== false} style={{ width: '450px' }} header=\"Confirm\" modal footer={refreshDialogFooter} onHide={this.hideRefreshDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {<span>Are you sure you want to refresh <b>{this.state.refreshDialog}</b>?</span>}\r\n                    <br/>\r\n                    {this.state.refreshDialog === 'year' ? ' This will Fetch new year Student list!!' : null}\r\n                    {this.state.refreshDialog === 'session' ? 'This will Recreate new Session !!' : null}\r\n                    <br/>\r\n                    <b>NOTE: This may take upto several seconds!!</b>\r\n                </div>\r\n            </Dialog>\r\n    </Fragment>\r\n        \r\n    );\r\n    }\r\n}\r\nexport default AdminDashboard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport { Toast } from 'primereact/toast';\r\nimport AdminMain from './AdminMain';\r\nimport TeacherSessions from './TeacherSessions';\r\nimport AdminDashboard from './admindashboard';\r\nimport * as actions from '../../store/actions/admin';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Admin extends Component{\r\n\tcomponentDidMount(){\r\n        fetch(uris.FETCH_TEACHER_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success') {\r\n                    this.props.onSetTeachers(res.data)\r\n                } else {\r\n                    this.toast.show({severity: 'error', summary: 'Teacher Fetch Failed', detail: res.message});\r\n                }\r\n            })\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n            <Fragment>\r\n            <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={AdminMain}/>\r\n            \t<Route path=\"/teachersessions\" exact component={TeacherSessions}/>\r\n            \t<Route path=\"/admindashboard\" exact component={AdminDashboard}/>\r\n      \t\t</div>\r\n            </Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetTeachers: (values) => dispatch(actions.setTeachers(values))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import React from 'react'\r\nimport \"./Login.scss\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport tulogo from \"../images/tulogo.png\";\r\nimport { Toast } from 'primereact/toast';\r\nimport 'primeflex/primeflex.css';\r\n\r\nclass Login extends React.Component{\r\n  constructor (props){\r\n        super();\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n  }\r\n  \r\n  onSubmitHandler(event){\r\n    event.preventDefault();\r\n    let username = document.getElementById('username').value;\r\n    let password = document.getElementById('password').value;\r\n    this.props.onSignIn(username, password);\r\n  }\r\n  render() {    \r\n    if (this.props.error !== null) {\r\n      this.toast.show({severity: 'info', summary: 'Login Failed!!', detail: this.props.error});\r\n      this.props.setError(null);\r\n    }\r\n      return (<div> \r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        <div className=\"customgrid\">\r\n    <div className=\"p-col bigText \">\r\n      Internal Marks Management System\r\n    </div>\r\n    <div className=\"p-col\">\r\n      <div className=\"login-page\">\r\n          <div className=\"form\">\r\n              <img\r\n            src={tulogo}\r\n            width=\"60px\" alt=\"TU Logo\"/>\r\n            <h2>IMMS x DBMS</h2>\r\n            <form className=\"login-form\">\r\n              <input id=\"username\" type=\"text\" placeholder=\"username\" />\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" />\r\n              <button onClick={this.onSubmitHandler}>login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n</div>\r\n        \r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n      isAuthenticated: state.auth.token !== null,\r\n      authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onSignIn: (username, password) => dispatch(actions.auth(username, password)),\r\n      setError: (value) => dispatch(actions.authFail(value))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from '../store/actions/auth';\r\nimport { resetStudentState } from '../store/actions/student';\r\nimport { resetTeacherState } from '../store/actions/teacher';\r\nimport { resetAdminState } from '../store/actions/admin';\r\n\r\nclass LogOut extends Component{\r\n    componentDidMount(){\r\n        this.props.resetStudent();\r\n        this.props.resetTeacher();\r\n        this.props.resetAdmin();\r\n        this.props.onLogOut();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to='/'/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resetTeacherState: () => dispatch(resetTeacherState()),\r\n        resetStudent: () => dispatch(resetStudentState()),\r\n        resetTeacher: () => dispatch(resetTeacherState()),\r\n        resetAdmin: () => dispatch(resetAdminState()),\r\n        onLogOut: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LogOut);\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from 'react-redux';\r\nimport { AppTopbar } from \"./AppTopbar\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AppMenu } from \"./AppMenu\";\r\nimport AppProfile from \"./AppProfile\";\r\nimport Teacher from './pages/teacher/Teacher';\r\nimport Student from './pages/student/Student';\r\nimport Admin from './pages/admin/Admin';\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CustomIcons.css\";\r\nimport \"./Layout/layout.scss\";\r\nimport \"./Login/Login\";\r\nimport Login from \"./Login/Login\";\r\nimport LogOut from './pages/LogOut';\r\nimport pcampus from \"./images/pcampus.jpg\";\r\nimport \"primereact/resources/themes/saga-green/theme.css\";\r\nimport \"./Layout/layout.scss\"\r\nimport PrimeReact from 'primereact/utils';\r\nclass App extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      layoutMode: \"static\",\r\n      layoutColorMode: \"light\",\r\n      /* Make this True for default Slidebar Close */\r\n      staticMenuInactive: false,\r\n      overlayMenuActive: false,\r\n      mobileMenuActive: false\r\n    };\r\n PrimeReact.ripple = true;\r\n    this.onWrapperClick = this.onWrapperClick.bind(this);\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.onSidebarClick = this.onSidebarClick.bind(this);\r\n    this.onMenuItemClick = this.onMenuItemClick.bind(this);\r\n  }\r\n\r\n  onWrapperClick(event) {\r\n    if (!this.menuClick) {\r\n      this.setState({\r\n        overlayMenuActive: false,\r\n        mobileMenuActive: false\r\n      });\r\n    }\r\n\r\n    this.menuClick = false;\r\n  }\r\n\r\n  onToggleMenu(event) {\r\n    this.menuClick = true;\r\n\r\n    if (this.isDesktop()) {\r\n      if (this.state.layoutMode === \"overlay\") {\r\n        this.setState({\r\n          overlayMenuActive: !this.state.overlayMenuActive\r\n        });\r\n      } else if (this.state.layoutMode === \"static\") {\r\n        this.setState({\r\n          staticMenuInactive: !this.state.staticMenuInactive\r\n        });\r\n      }\r\n    } else {\r\n      const mobileMenuActive = this.state.mobileMenuActive;\r\n      this.setState({\r\n        mobileMenuActive: !mobileMenuActive\r\n      });\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onSidebarClick(event) {\r\n    this.menuClick = true;\r\n  }\r\n\r\n  onMenuItemClick(event) {\r\n    if (!event.item.items) {\r\n      this.setState({\r\n        overlayMenuActive: false,\r\n        mobileMenuActive: false\r\n      });\r\n    }\r\n  }\r\n\r\n  createMenu() {\r\n    if (this.props.role === 'teacher') {\r\n      this.menu = [\r\n        {\r\n          label: \"Teacher DashBoard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Teacher Timeline\",\r\n          icon: \"pi pi-fw pi-globe\",\r\n          command: () => {\r\n            window.location = \"#/timeline\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Section Dashboard\",\r\n          icon: \"pi pi-fw pi-users\",\r\n          command: () => {\r\n            window.location = \"#/marksview\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Marks Edit Mode\",\r\n          icon: \"pi pi-fw pi-user-edit\",\r\n          command: () => {\r\n            window.location = \"#/marksentry\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Score Statistics\",\r\n          icon: \"pi pi-fw pi-chart-bar\",\r\n          command: () => {\r\n            window.location = \"#/statistics\";\r\n          }\r\n\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    } else if (this.props.role === 'student') {\r\n      this.menu = [\r\n        {\r\n          label: \"Student Timeline\",\r\n          icon: \"pi pi-fw pi-globe\",\r\n          command: () => {\r\n            window.location = \"#/studenttimeline\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Student Dashboard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Subject Marks\",\r\n          icon: \"pi pi-fw pi-users\",\r\n          command: () => {\r\n            window.location = \"#/marksview\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    } else if (this.props.role === 'admin') {\r\n      this.menu = [\r\n        {\r\n          label: \"Admin Home\",\r\n          icon: \"pi pi-fw pi-eye\",\r\n          command: () => {\r\n            window.location = \"#/admindashboard\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Admin Dashboard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Teacher Sessions\",\r\n          icon: \"pi pi-fw pi-calendar\",\r\n          command: () => {\r\n            window.location = '#/teachersessions';\r\n          }\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  addClass(element, className) {\r\n    if (element.classList) element.classList.add(className);\r\n    else element.className += \" \" + className;\r\n  }\r\n\r\n  removeClass(element, className) {\r\n    if (element.classList) element.classList.remove(className);\r\n    else\r\n      element.className = element.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n  }\r\n\r\n  isDesktop() {\r\n    return window.innerWidth > 1024;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.mobileMenuActive)\r\n      this.addClass(document.body, \"body-overflow-hidden\");\r\n    else this.removeClass(document.body, \"body-overflow-hidden\");\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isAuthenticated){\r\n      return <Login/>\r\n    }\r\n    else {\r\n      this.createMenu();\r\n      const wrapperClass = classNames(\"layout-wrapper\", {\r\n        \"layout-overlay\": this.state.layoutMode === \"overlay\",\r\n        \"layout-static\": this.state.layoutMode === \"static\",\r\n        \"layout-static-sidebar-inactive\":\r\n          this.state.staticMenuInactive && this.state.layoutMode === \"static\",\r\n        \"layout-overlay-sidebar-active\":\r\n          this.state.overlayMenuActive && this.state.layoutMode === \"overlay\",\r\n        \"layout-mobile-sidebar-active\": this.state.mobileMenuActive\r\n      });\r\n\r\n      const sidebarClassName = classNames(\"layout-sidebar\", {\r\n        \"layout-sidebar-light\": this.state.layoutColorMode === \"light\"\r\n      });\r\n\r\n      let renderComponent = null\r\n      switch (this.props.role){\r\n        case 'admin': renderComponent = <Admin/>;\r\n          break;\r\n        case 'teacher': renderComponent = <Teacher/>;\r\n          break;\r\n        case 'student': renderComponent = <Student/>;\r\n          break;\r\n        default: renderComponent = null;\r\n      }\r\n\r\n      return (\r\n        <div className={wrapperClass} onClick={this.onWrapperClick}>\r\n          <AppTopbar onToggleMenu={this.onToggleMenu} />\r\n\r\n          <div ref={(el) => (this.sidebar = el)} className={sidebarClassName} onClick={this.onSidebarClick}>\r\n            <div className=\"layout-logo\">\r\n              <img alt=\"Logo\" width=\"250px\" src={pcampus}/>\r\n            </div>\r\n            <AppProfile />\r\n            <AppMenu model={this.menu} onMenuItemClick={this.onMenuItemClick} />\r\n          </div>\r\n\r\n          <Route path=\"/logout\" exact component={LogOut}/>\r\n          {renderComponent}\r\n          <Redirect to='/'/>\r\n\r\n          <div className=\"layout-mask\"></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      role: state.auth.role,\r\n      isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( App );\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    username: null,\r\n    fullname: null,\r\n    role: null,\r\n    error: null,\r\n    loading: false,\r\n    redirect: null,\r\n    email: null\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return { ...state, error: null, loading: true };\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        token: action.token,\r\n        username: action.username,\r\n        fullname: action.fullname,\r\n        role: action.role,\r\n        email: action.email\r\n    }\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return { ...state, error: action.error, loading: false };\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return {...initialState};\r\n};\r\n\r\nconst setAuthRedirect = (state, action) => {\r\n    return { ...state, redirect: action.value }\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT: return setAuthRedirect(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    activeClass: null,\r\n    activeSectionSubject: [],\r\n    activeClassStudentValuesIndex: null,\r\n    classes: [],\r\n    classStudentValues: [],\r\n    loading: true\r\n};\r\n\r\nconst setTeacherClasses = (state, action) => {\r\n    return {...state, classes: action.value, loading: false}\r\n};\r\n\r\nconst setTeacherInfoBox = (state, action) => {\r\n    return {...state, infoBox: action.value}\r\n};\r\n\r\nconst setActiveClass = (state, action) => {\r\n    return {...state, activeClass: action.Class, loading: true};\r\n};\r\n\r\nconst setActiveClassStudentIndex = (state, action) => {\r\n    return {...state, activeClassStudentValuesIndex: action.value, loading: false}\r\n};\r\n\r\nconst setClassStudentValues = (state, action) => {\r\n    return {\r\n        ...state,\r\n        classStudentValues: [...state.classStudentValues, action.value],\r\n        loading: false\r\n    }\r\n};\r\n\r\nconst updateClassStudentValues = (state, action) => {\r\n    let tempClass = [...state.classStudentValues];\r\n    tempClass[state.activeClassStudentValuesIndex].data = action.value\r\n    return {...state, classStudentValues: tempClass}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.SET_TEACHER_CLASSES: return setTeacherClasses(state, action);\r\n        case actionTypes.SET_TEACHER_INFOBOX: return setTeacherInfoBox(state, action);\r\n        case actionTypes.RESET_TEACHER_DEFAULTS: return {...initialState};\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS: return setActiveClass(state, action);\r\n        case actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES: return setClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_SECTION_SUBJECT: return {...state, activeSectionSubject: action.value};\r\n        case actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES: return updateClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX: return setActiveClassStudentIndex(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    loading: true,\r\n    activeSem: null,\r\n    sems: [],\r\n    semSubjectValues: [],\r\n    activeSemSubjectValuesIndex: null\r\n};\r\n\r\nconst reducer=(state=initialState, action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_STUDENT_ACTIVE_SEM: return {...state, activeSem: action.value, loading: true}\r\n        case actionTypes.SET_STUDENT_SEMS: return {...state, sems: action.value, loading: false}\r\n        case actionTypes.SET_STUDENT_SEM_SUBJECT_VALUES: return {...state, semSubjectValues: [...state.semSubjectValues, action.value],\r\n                                                                    loading: false}\r\n        case actionTypes.SET_STUDENT_INFOBOX: return {...state, infoBox: action.value}\r\n        case actionTypes.RESET_STUDENT_DEFAULTS: return {...initialState}\r\n        case actionTypes.SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX: return {...state, activeSemSubjectValuesIndex: action.value,\r\n                                                                    loading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    loading: true,\r\n    activeTeacherUsername: null,\r\n    activeTeacherClasses: [],\r\n    activeTeacherClassValuesIndex: null,\r\n    teacherDepartments: [],\r\n    teachers: []\r\n};\r\n\r\nconst reducer=(state=initialState, action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_USERNAME: return {...state, activeTeacherUsername: action.value, loading: true};\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES: return {...state, activeTeacherClasses: [...state.activeTeacherClasses, action.value],\r\n                                                                            loading: false};\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX: return {...state, activeTeacherClassValuesIndex: action.value, loading: false};\r\n        case actionTypes.SET_ADMIN_TEACHER_DEPARTMENTS: return {...state, teacherDepartments: action.value};\r\n        case actionTypes.SET_ADMIN_TEACHERS: return {...state, teachers: action.value, loading: false};\r\n        case actionTypes.SET_ADMIN_INFOBOX: return {...state, infoBox: action.value};\r\n        case actionTypes.RESET_ADMIN_TEACHER_CLASS_VALUES: return {...state, activeTeacherClasses: []};\r\n        case actionTypes.RESET_ADMIN_DEFAULTS: return {...initialState};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\n\r\nimport authReducer from './store/reducers/auth';\r\nimport teacherReducer from './store/reducers/teacher';\r\nimport studentReducer from './store/reducers/student';\r\nimport adminReducer from './store/reducers/admin';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    teacher: teacherReducer,\r\n    student: studentReducer,\r\n    admin: adminReducer\r\n});\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter><ScrollToTop>\r\n      <App/>\r\n   </ScrollToTop></HashRouter>\r\n </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/Profile-6.d898415e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tulogo.838d6952.png\";","module.exports = __webpack_public_path__ + \"static/media/pcampus.328e3389.jpg\";"],"sourceRoot":""}